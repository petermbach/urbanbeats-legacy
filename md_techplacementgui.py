# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'md_techplacementgui.ui'
#
# Created: Wed Jun 24 11:49:30 2015
#      by: PyQt4 UI code generator 4.9.6
#
# WARNING! All changes made in this file will be lost!

from PyQt4 import QtCore, QtGui

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    def _fromUtf8(s):
        return s

try:
    _encoding = QtGui.QApplication.UnicodeUTF8
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig, _encoding)
except AttributeError:
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig)

class Ui_TechPlace_Dialog(object):
    def setupUi(self, TechPlace_Dialog):
        TechPlace_Dialog.setObjectName(_fromUtf8("TechPlace_Dialog"))
        TechPlace_Dialog.resize(771, 597)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(TechPlace_Dialog.sizePolicy().hasHeightForWidth())
        TechPlace_Dialog.setSizePolicy(sizePolicy)
        self.verticalLayout = QtGui.QVBoxLayout(TechPlace_Dialog)
        self.verticalLayout.setObjectName(_fromUtf8("verticalLayout"))
        self.widget_2 = QtGui.QWidget(TechPlace_Dialog)
        self.widget_2.setMinimumSize(QtCore.QSize(0, 50))
        self.widget_2.setMaximumSize(QtCore.QSize(16777215, 50))
        self.widget_2.setObjectName(_fromUtf8("widget_2"))
        self.label = QtGui.QLabel(self.widget_2)
        self.label.setGeometry(QtCore.QRect(0, 0, 50, 50))
        self.label.setMinimumSize(QtCore.QSize(50, 50))
        self.label.setText(_fromUtf8(""))
        self.label.setPixmap(QtGui.QPixmap(_fromUtf8(":/general/ublogo50.png")))
        self.label.setObjectName(_fromUtf8("label"))
        self.tech_subheading = QtGui.QLabel(self.widget_2)
        self.tech_subheading.setGeometry(QtCore.QRect(50, 25, 711, 16))
        self.tech_subheading.setObjectName(_fromUtf8("tech_subheading"))
        self.tech_heading = QtGui.QLabel(self.widget_2)
        self.tech_heading.setGeometry(QtCore.QRect(50, 5, 451, 21))
        self.tech_heading.setObjectName(_fromUtf8("tech_heading"))
        self.verticalLayout.addWidget(self.widget_2)
        self.techplace_input = QtGui.QTabWidget(TechPlace_Dialog)
        self.techplace_input.setObjectName(_fromUtf8("techplace_input"))
        self.DesignCriteria = QtGui.QWidget()
        self.DesignCriteria.setObjectName(_fromUtf8("DesignCriteria"))
        self.horizontalLayout_4 = QtGui.QHBoxLayout(self.DesignCriteria)
        self.horizontalLayout_4.setObjectName(_fromUtf8("horizontalLayout_4"))
        self.design_crit_widget = QtGui.QWidget(self.DesignCriteria)
        self.design_crit_widget.setObjectName(_fromUtf8("design_crit_widget"))
        self.gridLayout_22 = QtGui.QGridLayout(self.design_crit_widget)
        self.gridLayout_22.setMargin(0)
        self.gridLayout_22.setObjectName(_fromUtf8("gridLayout_22"))
        self.design_crit_inputs = QtGui.QScrollArea(self.design_crit_widget)
        self.design_crit_inputs.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.design_crit_inputs.setWidgetResizable(True)
        self.design_crit_inputs.setObjectName(_fromUtf8("design_crit_inputs"))
        self.design_crit_inputs_widget = QtGui.QWidget()
        self.design_crit_inputs_widget.setGeometry(QtCore.QRect(0, 0, 465, 1071))
        self.design_crit_inputs_widget.setObjectName(_fromUtf8("design_crit_inputs_widget"))
        self.verticalLayout_5 = QtGui.QVBoxLayout(self.design_crit_inputs_widget)
        self.verticalLayout_5.setObjectName(_fromUtf8("verticalLayout_5"))
        self.design_ration_lbl = QtGui.QLabel(self.design_crit_inputs_widget)
        self.design_ration_lbl.setMinimumSize(QtCore.QSize(0, 16))
        self.design_ration_lbl.setMaximumSize(QtCore.QSize(16777215, 16))
        self.design_ration_lbl.setObjectName(_fromUtf8("design_ration_lbl"))
        self.verticalLayout_5.addWidget(self.design_ration_lbl)
        self.design_ration_param = QtGui.QWidget(self.design_crit_inputs_widget)
        self.design_ration_param.setMinimumSize(QtCore.QSize(0, 80))
        self.design_ration_param.setObjectName(_fromUtf8("design_ration_param"))
        self.ration_runoff_check = QtGui.QCheckBox(self.design_ration_param)
        self.ration_runoff_check.setGeometry(QtCore.QRect(20, 0, 131, 17))
        self.ration_runoff_check.setObjectName(_fromUtf8("ration_runoff_check"))
        self.ration_pollute_check = QtGui.QCheckBox(self.design_ration_param)
        self.ration_pollute_check.setGeometry(QtCore.QRect(20, 30, 141, 17))
        self.ration_pollute_check.setObjectName(_fromUtf8("ration_pollute_check"))
        self.runoff_pri_spin = QtGui.QSpinBox(self.design_ration_param)
        self.runoff_pri_spin.setGeometry(QtCore.QRect(240, 0, 42, 16))
        self.runoff_pri_spin.setMinimum(1)
        self.runoff_pri_spin.setMaximum(3)
        self.runoff_pri_spin.setObjectName(_fromUtf8("runoff_pri_spin"))
        self.pollute_pri_spin = QtGui.QSpinBox(self.design_ration_param)
        self.pollute_pri_spin.setGeometry(QtCore.QRect(240, 30, 42, 16))
        self.pollute_pri_spin.setMinimum(1)
        self.pollute_pri_spin.setMaximum(3)
        self.pollute_pri_spin.setObjectName(_fromUtf8("pollute_pri_spin"))
        self.runoff_pri_lbl = QtGui.QLabel(self.design_ration_param)
        self.runoff_pri_lbl.setGeometry(QtCore.QRect(190, 0, 46, 13))
        self.runoff_pri_lbl.setObjectName(_fromUtf8("runoff_pri_lbl"))
        self.pollute_pri_lbl = QtGui.QLabel(self.design_ration_param)
        self.pollute_pri_lbl.setGeometry(QtCore.QRect(190, 30, 46, 13))
        self.pollute_pri_lbl.setObjectName(_fromUtf8("pollute_pri_lbl"))
        self.pri_explain = QtGui.QLabel(self.design_ration_param)
        self.pri_explain.setGeometry(QtCore.QRect(300, 0, 131, 16))
        self.pri_explain.setObjectName(_fromUtf8("pri_explain"))
        self.ration_harvest_check = QtGui.QCheckBox(self.design_ration_param)
        self.ration_harvest_check.setGeometry(QtCore.QRect(20, 60, 141, 17))
        self.ration_harvest_check.setObjectName(_fromUtf8("ration_harvest_check"))
        self.harvest_pri_spin = QtGui.QSpinBox(self.design_ration_param)
        self.harvest_pri_spin.setGeometry(QtCore.QRect(240, 60, 42, 16))
        self.harvest_pri_spin.setMinimum(1)
        self.harvest_pri_spin.setMaximum(3)
        self.harvest_pri_spin.setObjectName(_fromUtf8("harvest_pri_spin"))
        self.pollute_pri_lbl_2 = QtGui.QLabel(self.design_ration_param)
        self.pollute_pri_lbl_2.setGeometry(QtCore.QRect(190, 60, 46, 13))
        self.pollute_pri_lbl_2.setObjectName(_fromUtf8("pollute_pri_lbl_2"))
        self.verticalLayout_5.addWidget(self.design_ration_param)
        self.targets_lbl = QtGui.QLabel(self.design_crit_inputs_widget)
        self.targets_lbl.setMinimumSize(QtCore.QSize(0, 16))
        self.targets_lbl.setMaximumSize(QtCore.QSize(16777215, 16))
        self.targets_lbl.setObjectName(_fromUtf8("targets_lbl"))
        self.verticalLayout_5.addWidget(self.targets_lbl)
        self.targets_box = QtGui.QWidget(self.design_crit_inputs_widget)
        self.targets_box.setMinimumSize(QtCore.QSize(0, 200))
        self.targets_box.setObjectName(_fromUtf8("targets_box"))
        self.targets_runoff_lbl = QtGui.QLabel(self.targets_box)
        self.targets_runoff_lbl.setGeometry(QtCore.QRect(30, 30, 111, 16))
        self.targets_runoff_lbl.setObjectName(_fromUtf8("targets_runoff_lbl"))
        self.targets_runoff_spin = QtGui.QDoubleSpinBox(self.targets_box)
        self.targets_runoff_spin.setGeometry(QtCore.QRect(170, 30, 61, 22))
        self.targets_runoff_spin.setDecimals(1)
        self.targets_runoff_spin.setObjectName(_fromUtf8("targets_runoff_spin"))
        self.targets_TP_lbl = QtGui.QLabel(self.targets_box)
        self.targets_TP_lbl.setGeometry(QtCore.QRect(30, 170, 111, 16))
        self.targets_TP_lbl.setObjectName(_fromUtf8("targets_TP_lbl"))
        self.targets_TSS_spin = QtGui.QDoubleSpinBox(self.targets_box)
        self.targets_TSS_spin.setGeometry(QtCore.QRect(170, 110, 61, 22))
        self.targets_TSS_spin.setDecimals(1)
        self.targets_TSS_spin.setObjectName(_fromUtf8("targets_TSS_spin"))
        self.targets_TSS_lbl = QtGui.QLabel(self.targets_box)
        self.targets_TSS_lbl.setGeometry(QtCore.QRect(30, 110, 111, 16))
        self.targets_TSS_lbl.setObjectName(_fromUtf8("targets_TSS_lbl"))
        self.targets_TP_spin = QtGui.QDoubleSpinBox(self.targets_box)
        self.targets_TP_spin.setGeometry(QtCore.QRect(170, 170, 61, 22))
        self.targets_TP_spin.setDecimals(1)
        self.targets_TP_spin.setObjectName(_fromUtf8("targets_TP_spin"))
        self.targets_TN_lbl = QtGui.QLabel(self.targets_box)
        self.targets_TN_lbl.setGeometry(QtCore.QRect(30, 140, 111, 16))
        self.targets_TN_lbl.setObjectName(_fromUtf8("targets_TN_lbl"))
        self.targets_TN_spin = QtGui.QDoubleSpinBox(self.targets_box)
        self.targets_TN_spin.setGeometry(QtCore.QRect(170, 140, 61, 22))
        self.targets_TN_spin.setDecimals(1)
        self.targets_TN_spin.setObjectName(_fromUtf8("targets_TN_spin"))
        self.targets_reliability_spin = QtGui.QDoubleSpinBox(self.targets_box)
        self.targets_reliability_spin.setGeometry(QtCore.QRect(170, 60, 61, 22))
        self.targets_reliability_spin.setDecimals(1)
        self.targets_reliability_spin.setObjectName(_fromUtf8("targets_reliability_spin"))
        self.targets_reuse_lbl = QtGui.QLabel(self.targets_box)
        self.targets_reuse_lbl.setGeometry(QtCore.QRect(30, 60, 141, 16))
        self.targets_reuse_lbl.setObjectName(_fromUtf8("targets_reuse_lbl"))
        self.targets_qty_header = QtGui.QLabel(self.targets_box)
        self.targets_qty_header.setGeometry(QtCore.QRect(20, 5, 291, 16))
        self.targets_qty_header.setObjectName(_fromUtf8("targets_qty_header"))
        self.targets_WQ_header = QtGui.QLabel(self.targets_box)
        self.targets_WQ_header.setGeometry(QtCore.QRect(20, 85, 291, 16))
        self.targets_WQ_header.setObjectName(_fromUtf8("targets_WQ_header"))
        self.verticalLayout_5.addWidget(self.targets_box)
        self.service_lbl = QtGui.QLabel(self.design_crit_inputs_widget)
        self.service_lbl.setObjectName(_fromUtf8("service_lbl"))
        self.verticalLayout_5.addWidget(self.service_lbl)
        self.widget_3 = QtGui.QWidget(self.design_crit_inputs_widget)
        self.widget_3.setMinimumSize(QtCore.QSize(0, 290))
        self.widget_3.setObjectName(_fromUtf8("widget_3"))
        self.service_lbl2 = QtGui.QLabel(self.widget_3)
        self.service_lbl2.setGeometry(QtCore.QRect(20, 10, 381, 16))
        self.service_lbl2.setObjectName(_fromUtf8("service_lbl2"))
        self.service_swmQty = QtGui.QDoubleSpinBox(self.widget_3)
        self.service_swmQty.setGeometry(QtCore.QRect(190, 65, 61, 16))
        self.service_swmQty.setDecimals(1)
        self.service_swmQty.setObjectName(_fromUtf8("service_swmQty"))
        self.service_swm_lbl = QtGui.QLabel(self.widget_3)
        self.service_swm_lbl.setGeometry(QtCore.QRect(40, 40, 141, 16))
        self.service_swm_lbl.setObjectName(_fromUtf8("service_swm_lbl"))
        self.service_swm_lbl2 = QtGui.QLabel(self.widget_3)
        self.service_swm_lbl2.setGeometry(QtCore.QRect(260, 65, 131, 16))
        self.service_swm_lbl2.setObjectName(_fromUtf8("service_swm_lbl2"))
        self.service_wr_lbl = QtGui.QLabel(self.widget_3)
        self.service_wr_lbl.setGeometry(QtCore.QRect(40, 115, 171, 16))
        self.service_wr_lbl.setObjectName(_fromUtf8("service_wr_lbl"))
        self.service_lbl2_2 = QtGui.QLabel(self.widget_3)
        self.service_lbl2_2.setGeometry(QtCore.QRect(20, 170, 411, 16))
        self.service_lbl2_2.setObjectName(_fromUtf8("service_lbl2_2"))
        self.service_res = QtGui.QCheckBox(self.widget_3)
        self.service_res.setGeometry(QtCore.QRect(50, 190, 171, 17))
        self.service_res.setObjectName(_fromUtf8("service_res"))
        self.service_hdr = QtGui.QCheckBox(self.widget_3)
        self.service_hdr.setGeometry(QtCore.QRect(50, 210, 171, 17))
        self.service_hdr.setObjectName(_fromUtf8("service_hdr"))
        self.service_com = QtGui.QCheckBox(self.widget_3)
        self.service_com.setGeometry(QtCore.QRect(50, 230, 171, 17))
        self.service_com.setObjectName(_fromUtf8("service_com"))
        self.service_li = QtGui.QCheckBox(self.widget_3)
        self.service_li.setGeometry(QtCore.QRect(220, 190, 171, 17))
        self.service_li.setObjectName(_fromUtf8("service_li"))
        self.service_hi = QtGui.QCheckBox(self.widget_3)
        self.service_hi.setGeometry(QtCore.QRect(220, 210, 171, 17))
        self.service_hi.setObjectName(_fromUtf8("service_hi"))
        self.service_wr_lbl_2 = QtGui.QLabel(self.widget_3)
        self.service_wr_lbl_2.setGeometry(QtCore.QRect(20, 260, 301, 16))
        self.service_wr_lbl_2.setObjectName(_fromUtf8("service_wr_lbl_2"))
        self.service_redundancy = QtGui.QDoubleSpinBox(self.widget_3)
        self.service_redundancy.setGeometry(QtCore.QRect(330, 260, 61, 16))
        self.service_redundancy.setDecimals(0)
        self.service_redundancy.setMaximum(100.0)
        self.service_redundancy.setSingleStep(5.0)
        self.service_redundancy.setObjectName(_fromUtf8("service_redundancy"))
        self.service_swmQty_lbl = QtGui.QLabel(self.widget_3)
        self.service_swmQty_lbl.setGeometry(QtCore.QRect(90, 65, 101, 16))
        self.service_swmQty_lbl.setObjectName(_fromUtf8("service_swmQty_lbl"))
        self.service_swmWQ_lbl = QtGui.QLabel(self.widget_3)
        self.service_swmWQ_lbl.setGeometry(QtCore.QRect(90, 90, 91, 16))
        self.service_swmWQ_lbl.setObjectName(_fromUtf8("service_swmWQ_lbl"))
        self.service_swm_lbl3 = QtGui.QLabel(self.widget_3)
        self.service_swm_lbl3.setGeometry(QtCore.QRect(260, 90, 131, 16))
        self.service_swm_lbl3.setObjectName(_fromUtf8("service_swm_lbl3"))
        self.service_swmWQ = QtGui.QDoubleSpinBox(self.widget_3)
        self.service_swmWQ.setGeometry(QtCore.QRect(190, 90, 61, 16))
        self.service_swmWQ.setDecimals(1)
        self.service_swmWQ.setObjectName(_fromUtf8("service_swmWQ"))
        self.service_rec = QtGui.QDoubleSpinBox(self.widget_3)
        self.service_rec.setGeometry(QtCore.QRect(190, 140, 61, 16))
        self.service_rec.setDecimals(1)
        self.service_rec.setObjectName(_fromUtf8("service_rec"))
        self.targets_reuse_lbl_2 = QtGui.QLabel(self.widget_3)
        self.targets_reuse_lbl_2.setGeometry(QtCore.QRect(90, 140, 81, 16))
        self.targets_reuse_lbl_2.setObjectName(_fromUtf8("targets_reuse_lbl_2"))
        self.service_swm_lbl3_2 = QtGui.QLabel(self.widget_3)
        self.service_swm_lbl3_2.setGeometry(QtCore.QRect(260, 140, 141, 16))
        self.service_swm_lbl3_2.setObjectName(_fromUtf8("service_swm_lbl3_2"))
        self.verticalLayout_5.addWidget(self.widget_3)
        self.strategy_lbl = QtGui.QLabel(self.design_crit_inputs_widget)
        self.strategy_lbl.setMinimumSize(QtCore.QSize(0, 16))
        self.strategy_lbl.setMaximumSize(QtCore.QSize(16777215, 16))
        self.strategy_lbl.setObjectName(_fromUtf8("strategy_lbl"))
        self.verticalLayout_5.addWidget(self.strategy_lbl)
        self.strategy_box = QtGui.QWidget(self.design_crit_inputs_widget)
        self.strategy_box.setMinimumSize(QtCore.QSize(0, 380))
        self.strategy_box.setObjectName(_fromUtf8("strategy_box"))
        self.strategy_lot_check = QtGui.QCheckBox(self.strategy_box)
        self.strategy_lot_check.setGeometry(QtCore.QRect(20, 40, 121, 17))
        self.strategy_lot_check.setObjectName(_fromUtf8("strategy_lot_check"))
        self.strategy_street_check = QtGui.QCheckBox(self.strategy_box)
        self.strategy_street_check.setGeometry(QtCore.QRect(20, 100, 361, 17))
        self.strategy_street_check.setObjectName(_fromUtf8("strategy_street_check"))
        self.strategy_neigh_check = QtGui.QCheckBox(self.strategy_box)
        self.strategy_neigh_check.setGeometry(QtCore.QRect(20, 160, 221, 17))
        self.strategy_neigh_check.setObjectName(_fromUtf8("strategy_neigh_check"))
        self.strategy_subbas_check = QtGui.QCheckBox(self.strategy_box)
        self.strategy_subbas_check.setGeometry(QtCore.QRect(20, 220, 141, 17))
        self.strategy_subbas_check.setObjectName(_fromUtf8("strategy_subbas_check"))
        self.strategy_explain = QtGui.QLabel(self.strategy_box)
        self.strategy_explain.setGeometry(QtCore.QRect(10, 10, 431, 16))
        self.strategy_explain.setObjectName(_fromUtf8("strategy_explain"))
        self.strategy_lot_lbl = QtGui.QLabel(self.strategy_box)
        self.strategy_lot_lbl.setGeometry(QtCore.QRect(60, 70, 81, 16))
        self.strategy_lot_lbl.setObjectName(_fromUtf8("strategy_lot_lbl"))
        self.strategy_lot_rigour = QtGui.QSlider(self.strategy_box)
        self.strategy_lot_rigour.setGeometry(QtCore.QRect(170, 45, 181, 31))
        self.strategy_lot_rigour.setMinimum(1)
        self.strategy_lot_rigour.setMaximum(10)
        self.strategy_lot_rigour.setOrientation(QtCore.Qt.Horizontal)
        self.strategy_lot_rigour.setTickPosition(QtGui.QSlider.TicksBelow)
        self.strategy_lot_rigour.setTickInterval(5)
        self.strategy_lot_rigour.setObjectName(_fromUtf8("strategy_lot_rigour"))
        self.strategy_lot_lbl2 = QtGui.QLabel(self.strategy_box)
        self.strategy_lot_lbl2.setGeometry(QtCore.QRect(150, 70, 61, 16))
        self.strategy_lot_lbl2.setObjectName(_fromUtf8("strategy_lot_lbl2"))
        self.strategy_lot_lbl3 = QtGui.QLabel(self.strategy_box)
        self.strategy_lot_lbl3.setGeometry(QtCore.QRect(247, 70, 51, 16))
        self.strategy_lot_lbl3.setObjectName(_fromUtf8("strategy_lot_lbl3"))
        self.strategy_lot_lbl4 = QtGui.QLabel(self.strategy_box)
        self.strategy_lot_lbl4.setGeometry(QtCore.QRect(320, 70, 61, 16))
        self.strategy_lot_lbl4.setObjectName(_fromUtf8("strategy_lot_lbl4"))
        self.strategy_lot_rigour_box = QtGui.QLineEdit(self.strategy_box)
        self.strategy_lot_rigour_box.setGeometry(QtCore.QRect(360, 45, 31, 20))
        self.strategy_lot_rigour_box.setReadOnly(True)
        self.strategy_lot_rigour_box.setObjectName(_fromUtf8("strategy_lot_rigour_box"))
        self.strategy_lot_lbl5 = QtGui.QLabel(self.strategy_box)
        self.strategy_lot_lbl5.setGeometry(QtCore.QRect(395, 45, 51, 20))
        self.strategy_lot_lbl5.setObjectName(_fromUtf8("strategy_lot_lbl5"))
        self.strategy_street_rigour_box = QtGui.QLineEdit(self.strategy_box)
        self.strategy_street_rigour_box.setGeometry(QtCore.QRect(360, 105, 31, 20))
        self.strategy_street_rigour_box.setReadOnly(True)
        self.strategy_street_rigour_box.setObjectName(_fromUtf8("strategy_street_rigour_box"))
        self.strategy_street_rigour = QtGui.QSlider(self.strategy_box)
        self.strategy_street_rigour.setGeometry(QtCore.QRect(170, 105, 181, 31))
        self.strategy_street_rigour.setMinimum(1)
        self.strategy_street_rigour.setMaximum(10)
        self.strategy_street_rigour.setOrientation(QtCore.Qt.Horizontal)
        self.strategy_street_rigour.setTickPosition(QtGui.QSlider.TicksBelow)
        self.strategy_street_rigour.setTickInterval(5)
        self.strategy_street_rigour.setObjectName(_fromUtf8("strategy_street_rigour"))
        self.strategy_street_lbl3 = QtGui.QLabel(self.strategy_box)
        self.strategy_street_lbl3.setGeometry(QtCore.QRect(247, 130, 51, 16))
        self.strategy_street_lbl3.setObjectName(_fromUtf8("strategy_street_lbl3"))
        self.strategy_street_lbl5 = QtGui.QLabel(self.strategy_box)
        self.strategy_street_lbl5.setGeometry(QtCore.QRect(395, 105, 51, 20))
        self.strategy_street_lbl5.setObjectName(_fromUtf8("strategy_street_lbl5"))
        self.strategy_street_lbl4 = QtGui.QLabel(self.strategy_box)
        self.strategy_street_lbl4.setGeometry(QtCore.QRect(320, 130, 61, 16))
        self.strategy_street_lbl4.setObjectName(_fromUtf8("strategy_street_lbl4"))
        self.strategy_street_lbl = QtGui.QLabel(self.strategy_box)
        self.strategy_street_lbl.setGeometry(QtCore.QRect(60, 130, 81, 16))
        self.strategy_street_lbl.setObjectName(_fromUtf8("strategy_street_lbl"))
        self.strategy_street_lbl2 = QtGui.QLabel(self.strategy_box)
        self.strategy_street_lbl2.setGeometry(QtCore.QRect(150, 130, 61, 16))
        self.strategy_street_lbl2.setObjectName(_fromUtf8("strategy_street_lbl2"))
        self.strategy_neigh_rigour_box = QtGui.QLineEdit(self.strategy_box)
        self.strategy_neigh_rigour_box.setGeometry(QtCore.QRect(360, 165, 31, 20))
        self.strategy_neigh_rigour_box.setReadOnly(True)
        self.strategy_neigh_rigour_box.setObjectName(_fromUtf8("strategy_neigh_rigour_box"))
        self.strategy_neigh_rigour = QtGui.QSlider(self.strategy_box)
        self.strategy_neigh_rigour.setGeometry(QtCore.QRect(170, 165, 181, 31))
        self.strategy_neigh_rigour.setMinimum(1)
        self.strategy_neigh_rigour.setMaximum(10)
        self.strategy_neigh_rigour.setOrientation(QtCore.Qt.Horizontal)
        self.strategy_neigh_rigour.setTickPosition(QtGui.QSlider.TicksBelow)
        self.strategy_neigh_rigour.setTickInterval(5)
        self.strategy_neigh_rigour.setObjectName(_fromUtf8("strategy_neigh_rigour"))
        self.strategy_neigh_lbl3 = QtGui.QLabel(self.strategy_box)
        self.strategy_neigh_lbl3.setGeometry(QtCore.QRect(247, 190, 51, 16))
        self.strategy_neigh_lbl3.setObjectName(_fromUtf8("strategy_neigh_lbl3"))
        self.strategy_neigh_lbl5 = QtGui.QLabel(self.strategy_box)
        self.strategy_neigh_lbl5.setGeometry(QtCore.QRect(395, 165, 51, 20))
        self.strategy_neigh_lbl5.setObjectName(_fromUtf8("strategy_neigh_lbl5"))
        self.strategy_neigh_lbl4 = QtGui.QLabel(self.strategy_box)
        self.strategy_neigh_lbl4.setGeometry(QtCore.QRect(320, 190, 61, 16))
        self.strategy_neigh_lbl4.setObjectName(_fromUtf8("strategy_neigh_lbl4"))
        self.strategy_neigh_lbl = QtGui.QLabel(self.strategy_box)
        self.strategy_neigh_lbl.setGeometry(QtCore.QRect(60, 190, 81, 16))
        self.strategy_neigh_lbl.setObjectName(_fromUtf8("strategy_neigh_lbl"))
        self.strategy_neigh_lbl2 = QtGui.QLabel(self.strategy_box)
        self.strategy_neigh_lbl2.setGeometry(QtCore.QRect(150, 190, 61, 16))
        self.strategy_neigh_lbl2.setObjectName(_fromUtf8("strategy_neigh_lbl2"))
        self.strategy_subbas_rigour_box = QtGui.QLineEdit(self.strategy_box)
        self.strategy_subbas_rigour_box.setGeometry(QtCore.QRect(360, 225, 31, 20))
        self.strategy_subbas_rigour_box.setReadOnly(True)
        self.strategy_subbas_rigour_box.setObjectName(_fromUtf8("strategy_subbas_rigour_box"))
        self.strategy_subbas_lbl2 = QtGui.QLabel(self.strategy_box)
        self.strategy_subbas_lbl2.setGeometry(QtCore.QRect(150, 250, 61, 16))
        self.strategy_subbas_lbl2.setObjectName(_fromUtf8("strategy_subbas_lbl2"))
        self.strategy_subbas_lbl3 = QtGui.QLabel(self.strategy_box)
        self.strategy_subbas_lbl3.setGeometry(QtCore.QRect(247, 250, 51, 16))
        self.strategy_subbas_lbl3.setObjectName(_fromUtf8("strategy_subbas_lbl3"))
        self.strategy_subbas_rigour = QtGui.QSlider(self.strategy_box)
        self.strategy_subbas_rigour.setGeometry(QtCore.QRect(170, 225, 181, 31))
        self.strategy_subbas_rigour.setMinimum(1)
        self.strategy_subbas_rigour.setMaximum(10)
        self.strategy_subbas_rigour.setOrientation(QtCore.Qt.Horizontal)
        self.strategy_subbas_rigour.setTickPosition(QtGui.QSlider.TicksBelow)
        self.strategy_subbas_rigour.setTickInterval(5)
        self.strategy_subbas_rigour.setObjectName(_fromUtf8("strategy_subbas_rigour"))
        self.strategy_subbas_lbl4 = QtGui.QLabel(self.strategy_box)
        self.strategy_subbas_lbl4.setGeometry(QtCore.QRect(320, 250, 61, 16))
        self.strategy_subbas_lbl4.setObjectName(_fromUtf8("strategy_subbas_lbl4"))
        self.strategy_subbas_lbl = QtGui.QLabel(self.strategy_box)
        self.strategy_subbas_lbl.setGeometry(QtCore.QRect(60, 250, 81, 16))
        self.strategy_subbas_lbl.setObjectName(_fromUtf8("strategy_subbas_lbl"))
        self.strategy_subbas_lbl5 = QtGui.QLabel(self.strategy_box)
        self.strategy_subbas_lbl5.setGeometry(QtCore.QRect(395, 225, 51, 20))
        self.strategy_subbas_lbl5.setObjectName(_fromUtf8("strategy_subbas_lbl5"))
        self.strategy_scalepref_title = QtGui.QLabel(self.strategy_box)
        self.strategy_scalepref_title.setGeometry(QtCore.QRect(10, 290, 181, 16))
        self.strategy_scalepref_title.setObjectName(_fromUtf8("strategy_scalepref_title"))
        self.strategy_scalepref_slider = QtGui.QSlider(self.strategy_box)
        self.strategy_scalepref_slider.setGeometry(QtCore.QRect(90, 320, 271, 31))
        self.strategy_scalepref_slider.setMinimum(1)
        self.strategy_scalepref_slider.setMaximum(5)
        self.strategy_scalepref_slider.setSingleStep(1)
        self.strategy_scalepref_slider.setPageStep(2)
        self.strategy_scalepref_slider.setProperty("value", 3)
        self.strategy_scalepref_slider.setOrientation(QtCore.Qt.Horizontal)
        self.strategy_scalepref_slider.setTickPosition(QtGui.QSlider.TicksBelow)
        self.strategy_scalepref_slider.setTickInterval(5)
        self.strategy_scalepref_slider.setObjectName(_fromUtf8("strategy_scalepref_slider"))
        self.strategy_scalepref_lbl1 = QtGui.QLabel(self.strategy_box)
        self.strategy_scalepref_lbl1.setGeometry(QtCore.QRect(20, 320, 61, 31))
        self.strategy_scalepref_lbl1.setObjectName(_fromUtf8("strategy_scalepref_lbl1"))
        self.strategy_scalepref_lbl3 = QtGui.QLabel(self.strategy_box)
        self.strategy_scalepref_lbl3.setGeometry(QtCore.QRect(370, 320, 71, 31))
        self.strategy_scalepref_lbl3.setObjectName(_fromUtf8("strategy_scalepref_lbl3"))
        self.strategy_scalepref_lbl2 = QtGui.QLabel(self.strategy_box)
        self.strategy_scalepref_lbl2.setGeometry(QtCore.QRect(185, 340, 81, 31))
        self.strategy_scalepref_lbl2.setObjectName(_fromUtf8("strategy_scalepref_lbl2"))
        self.verticalLayout_5.addWidget(self.strategy_box)
        self.design_crit_inputs.setWidget(self.design_crit_inputs_widget)
        self.gridLayout_22.addWidget(self.design_crit_inputs, 0, 0, 2, 2)
        self.horizontalLayout_4.addWidget(self.design_crit_widget)
        self.design_crit_sidebar = QtGui.QFrame(self.DesignCriteria)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.design_crit_sidebar.sizePolicy().hasHeightForWidth())
        self.design_crit_sidebar.setSizePolicy(sizePolicy)
        self.design_crit_sidebar.setMinimumSize(QtCore.QSize(221, 0))
        self.design_crit_sidebar.setMaximumSize(QtCore.QSize(221, 16777215))
        self.design_crit_sidebar.setFrameShape(QtGui.QFrame.StyledPanel)
        self.design_crit_sidebar.setFrameShadow(QtGui.QFrame.Raised)
        self.design_crit_sidebar.setObjectName(_fromUtf8("design_crit_sidebar"))
        self.verticalLayout_3 = QtGui.QVBoxLayout(self.design_crit_sidebar)
        self.verticalLayout_3.setObjectName(_fromUtf8("verticalLayout_3"))
        self.design_crit_sidebar_img = QtGui.QLabel(self.design_crit_sidebar)
        self.design_crit_sidebar_img.setMinimumSize(QtCore.QSize(0, 145))
        self.design_crit_sidebar_img.setText(_fromUtf8(""))
        self.design_crit_sidebar_img.setPixmap(QtGui.QPixmap(_fromUtf8(":/techplacement/techdesigncrit.png")))
        self.design_crit_sidebar_img.setObjectName(_fromUtf8("design_crit_sidebar_img"))
        self.verticalLayout_3.addWidget(self.design_crit_sidebar_img)
        self.design_crit_sidebar_descr = QtGui.QTextBrowser(self.design_crit_sidebar)
        self.design_crit_sidebar_descr.setObjectName(_fromUtf8("design_crit_sidebar_descr"))
        self.verticalLayout_3.addWidget(self.design_crit_sidebar_descr)
        self.horizontalLayout_4.addWidget(self.design_crit_sidebar)
        self.techplace_input.addTab(self.DesignCriteria, _fromUtf8(""))
        self.RetrofitRules = QtGui.QWidget()
        self.RetrofitRules.setObjectName(_fromUtf8("RetrofitRules"))
        self.horizontalLayout_18 = QtGui.QHBoxLayout(self.RetrofitRules)
        self.horizontalLayout_18.setObjectName(_fromUtf8("horizontalLayout_18"))
        self.design_crit_widget_2 = QtGui.QWidget(self.RetrofitRules)
        self.design_crit_widget_2.setObjectName(_fromUtf8("design_crit_widget_2"))
        self.gridLayout_24 = QtGui.QGridLayout(self.design_crit_widget_2)
        self.gridLayout_24.setMargin(0)
        self.gridLayout_24.setObjectName(_fromUtf8("gridLayout_24"))
        self.design_crit_inputs_2 = QtGui.QScrollArea(self.design_crit_widget_2)
        self.design_crit_inputs_2.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.design_crit_inputs_2.setWidgetResizable(True)
        self.design_crit_inputs_2.setObjectName(_fromUtf8("design_crit_inputs_2"))
        self.design_crit_inputs_widget_2 = QtGui.QWidget()
        self.design_crit_inputs_widget_2.setGeometry(QtCore.QRect(0, 0, 465, 598))
        self.design_crit_inputs_widget_2.setObjectName(_fromUtf8("design_crit_inputs_widget_2"))
        self.verticalLayout_6 = QtGui.QVBoxLayout(self.design_crit_inputs_widget_2)
        self.verticalLayout_6.setObjectName(_fromUtf8("verticalLayout_6"))
        self.existing_area_title = QtGui.QLabel(self.design_crit_inputs_widget_2)
        self.existing_area_title.setMinimumSize(QtCore.QSize(0, 16))
        self.existing_area_title.setMaximumSize(QtCore.QSize(16777215, 16))
        self.existing_area_title.setObjectName(_fromUtf8("existing_area_title"))
        self.verticalLayout_6.addWidget(self.existing_area_title)
        self.existing_area_widget = QtGui.QWidget(self.design_crit_inputs_widget_2)
        self.existing_area_widget.setMinimumSize(QtCore.QSize(0, 210))
        self.existing_area_widget.setObjectName(_fromUtf8("existing_area_widget"))
        self.area_retrofit_lbl = QtGui.QLabel(self.existing_area_widget)
        self.area_retrofit_lbl.setGeometry(QtCore.QRect(20, 10, 251, 16))
        self.area_retrofit_lbl.setObjectName(_fromUtf8("area_retrofit_lbl"))
        self.area_retrofit_combo = QtGui.QComboBox(self.existing_area_widget)
        self.area_retrofit_combo.setGeometry(QtCore.QRect(240, 10, 181, 16))
        self.area_retrofit_combo.setObjectName(_fromUtf8("area_retrofit_combo"))
        self.area_retrofit_combo.addItem(_fromUtf8(""))
        self.area_retrofit_combo.addItem(_fromUtf8(""))
        self.area_retrofit_combo.addItem(_fromUtf8(""))
        self.retrofit_stack = QtGui.QStackedWidget(self.existing_area_widget)
        self.retrofit_stack.setGeometry(QtCore.QRect(10, 30, 421, 171))
        self.retrofit_stack.setMinimumSize(QtCore.QSize(421, 100))
        self.retrofit_stack.setObjectName(_fromUtf8("retrofit_stack"))
        self.page_26 = QtGui.QWidget()
        self.page_26.setObjectName(_fromUtf8("page_26"))
        self.horizontalLayout_19 = QtGui.QHBoxLayout(self.page_26)
        self.horizontalLayout_19.setObjectName(_fromUtf8("horizontalLayout_19"))
        self.retrofit_nothing_group = QtGui.QGroupBox(self.page_26)
        self.retrofit_nothing_group.setObjectName(_fromUtf8("retrofit_nothing_group"))
        self.retrofit_nothing_lbl = QtGui.QLabel(self.retrofit_nothing_group)
        self.retrofit_nothing_lbl.setGeometry(QtCore.QRect(70, 50, 291, 16))
        self.retrofit_nothing_lbl.setObjectName(_fromUtf8("retrofit_nothing_lbl"))
        self.horizontalLayout_19.addWidget(self.retrofit_nothing_group)
        self.retrofit_stack.addWidget(self.page_26)
        self.page_27 = QtGui.QWidget()
        self.page_27.setObjectName(_fromUtf8("page_27"))
        self.horizontalLayout_20 = QtGui.QHBoxLayout(self.page_27)
        self.horizontalLayout_20.setObjectName(_fromUtf8("horizontalLayout_20"))
        self.retrofit_renewal_group = QtGui.QGroupBox(self.page_27)
        self.retrofit_renewal_group.setObjectName(_fromUtf8("retrofit_renewal_group"))
        self.renewal_lot_years = QtGui.QSpinBox(self.retrofit_renewal_group)
        self.renewal_lot_years.setGeometry(QtCore.QRect(310, 70, 71, 16))
        self.renewal_lot_years.setMinimum(1)
        self.renewal_lot_years.setMaximum(50)
        self.renewal_lot_years.setObjectName(_fromUtf8("renewal_lot_years"))
        self.retrofit_renewal_descr1 = QtGui.QLabel(self.retrofit_renewal_group)
        self.retrofit_renewal_descr1.setGeometry(QtCore.QRect(20, 20, 371, 16))
        self.retrofit_renewal_descr1.setObjectName(_fromUtf8("retrofit_renewal_descr1"))
        self.retrofit_renewal_check = QtGui.QCheckBox(self.retrofit_renewal_group)
        self.retrofit_renewal_check.setGeometry(QtCore.QRect(30, 45, 351, 17))
        self.retrofit_renewal_check.setObjectName(_fromUtf8("retrofit_renewal_check"))
        self.retrofit_renewal_lbl = QtGui.QLabel(self.retrofit_renewal_group)
        self.retrofit_renewal_lbl.setGeometry(QtCore.QRect(150, 70, 161, 20))
        self.retrofit_renewal_lbl.setObjectName(_fromUtf8("retrofit_renewal_lbl"))
        self.renewal_lot_spin = QtGui.QSpinBox(self.retrofit_renewal_group)
        self.renewal_lot_spin.setGeometry(QtCore.QRect(90, 72, 51, 16))
        self.renewal_lot_spin.setMaximum(100)
        self.renewal_lot_spin.setObjectName(_fromUtf8("renewal_lot_spin"))
        self.retrofit_renewal_lbl_2 = QtGui.QLabel(self.retrofit_renewal_group)
        self.retrofit_renewal_lbl_2.setGeometry(QtCore.QRect(30, 70, 71, 20))
        self.retrofit_renewal_lbl_2.setObjectName(_fromUtf8("retrofit_renewal_lbl_2"))
        self.retrofit_renewal_lbl_3 = QtGui.QLabel(self.retrofit_renewal_group)
        self.retrofit_renewal_lbl_3.setGeometry(QtCore.QRect(30, 95, 151, 20))
        self.retrofit_renewal_lbl_3.setObjectName(_fromUtf8("retrofit_renewal_lbl_3"))
        self.renewal_street_years = QtGui.QSpinBox(self.retrofit_renewal_group)
        self.renewal_street_years.setGeometry(QtCore.QRect(190, 95, 71, 16))
        self.renewal_street_years.setMinimum(1)
        self.renewal_street_years.setMaximum(50)
        self.renewal_street_years.setObjectName(_fromUtf8("renewal_street_years"))
        self.retrofit_renewal_lbl_4 = QtGui.QLabel(self.retrofit_renewal_group)
        self.retrofit_renewal_lbl_4.setGeometry(QtCore.QRect(30, 120, 171, 20))
        self.retrofit_renewal_lbl_4.setObjectName(_fromUtf8("retrofit_renewal_lbl_4"))
        self.renewal_neigh_years = QtGui.QSpinBox(self.retrofit_renewal_group)
        self.renewal_neigh_years.setGeometry(QtCore.QRect(190, 120, 71, 16))
        self.renewal_neigh_years.setMinimum(1)
        self.renewal_neigh_years.setMaximum(50)
        self.renewal_neigh_years.setObjectName(_fromUtf8("renewal_neigh_years"))
        self.retrofit_renewal_lbl_5 = QtGui.QLabel(self.retrofit_renewal_group)
        self.retrofit_renewal_lbl_5.setGeometry(QtCore.QRect(270, 95, 101, 20))
        self.retrofit_renewal_lbl_5.setObjectName(_fromUtf8("retrofit_renewal_lbl_5"))
        self.retrofit_renewal_lbl_6 = QtGui.QLabel(self.retrofit_renewal_group)
        self.retrofit_renewal_lbl_6.setGeometry(QtCore.QRect(270, 120, 101, 20))
        self.retrofit_renewal_lbl_6.setObjectName(_fromUtf8("retrofit_renewal_lbl_6"))
        self.horizontalLayout_20.addWidget(self.retrofit_renewal_group)
        self.retrofit_stack.addWidget(self.page_27)
        self.page_28 = QtGui.QWidget()
        self.page_28.setObjectName(_fromUtf8("page_28"))
        self.verticalLayout_8 = QtGui.QVBoxLayout(self.page_28)
        self.verticalLayout_8.setObjectName(_fromUtf8("verticalLayout_8"))
        self.retrofit_forced_group = QtGui.QGroupBox(self.page_28)
        self.retrofit_forced_group.setObjectName(_fromUtf8("retrofit_forced_group"))
        self.retrofit_forced_street_check = QtGui.QCheckBox(self.retrofit_forced_group)
        self.retrofit_forced_street_check.setGeometry(QtCore.QRect(30, 60, 351, 17))
        self.retrofit_forced_street_check.setObjectName(_fromUtf8("retrofit_forced_street_check"))
        self.retrofit_forced_neigh_check = QtGui.QCheckBox(self.retrofit_forced_group)
        self.retrofit_forced_neigh_check.setGeometry(QtCore.QRect(30, 90, 351, 17))
        self.retrofit_forced_neigh_check.setObjectName(_fromUtf8("retrofit_forced_neigh_check"))
        self.retrofit_forced_prec_check = QtGui.QCheckBox(self.retrofit_forced_group)
        self.retrofit_forced_prec_check.setGeometry(QtCore.QRect(30, 120, 351, 17))
        self.retrofit_forced_prec_check.setObjectName(_fromUtf8("retrofit_forced_prec_check"))
        self.force_retrofit_lbl = QtGui.QLabel(self.retrofit_forced_group)
        self.force_retrofit_lbl.setGeometry(QtCore.QRect(20, 30, 421, 16))
        self.force_retrofit_lbl.setObjectName(_fromUtf8("force_retrofit_lbl"))
        self.verticalLayout_8.addWidget(self.retrofit_forced_group)
        self.retrofit_stack.addWidget(self.page_28)
        self.verticalLayout_6.addWidget(self.existing_area_widget)
        self.existing_sys_title = QtGui.QLabel(self.design_crit_inputs_widget_2)
        self.existing_sys_title.setMinimumSize(QtCore.QSize(0, 16))
        self.existing_sys_title.setMaximumSize(QtCore.QSize(16777215, 16))
        self.existing_sys_title.setObjectName(_fromUtf8("existing_sys_title"))
        self.verticalLayout_6.addWidget(self.existing_sys_title)
        self.existing_sys_widget = QtGui.QWidget(self.design_crit_inputs_widget_2)
        self.existing_sys_widget.setMinimumSize(QtCore.QSize(0, 320))
        self.existing_sys_widget.setObjectName(_fromUtf8("existing_sys_widget"))
        self.existing_lot_lbl = QtGui.QLabel(self.existing_sys_widget)
        self.existing_lot_lbl.setGeometry(QtCore.QRect(20, 40, 131, 16))
        self.existing_lot_lbl.setObjectName(_fromUtf8("existing_lot_lbl"))
        self.existing_street_lbl = QtGui.QLabel(self.existing_sys_widget)
        self.existing_street_lbl.setGeometry(QtCore.QRect(200, 40, 131, 16))
        self.existing_street_lbl.setObjectName(_fromUtf8("existing_street_lbl"))
        self.existing_neigh_lbl = QtGui.QLabel(self.existing_sys_widget)
        self.existing_neigh_lbl.setGeometry(QtCore.QRect(20, 110, 221, 16))
        self.existing_neigh_lbl.setObjectName(_fromUtf8("existing_neigh_lbl"))
        self.lot_renew_check = QtGui.QCheckBox(self.existing_sys_widget)
        self.lot_renew_check.setEnabled(True)
        self.lot_renew_check.setGeometry(QtCore.QRect(40, 60, 121, 17))
        self.lot_renew_check.setObjectName(_fromUtf8("lot_renew_check"))
        self.lot_decom_check = QtGui.QCheckBox(self.existing_sys_widget)
        self.lot_decom_check.setGeometry(QtCore.QRect(40, 80, 121, 17))
        self.lot_decom_check.setObjectName(_fromUtf8("lot_decom_check"))
        self.existing_neigh_lbl_2 = QtGui.QLabel(self.existing_sys_widget)
        self.existing_neigh_lbl_2.setGeometry(QtCore.QRect(20, 10, 421, 16))
        self.existing_neigh_lbl_2.setObjectName(_fromUtf8("existing_neigh_lbl_2"))
        self.street_renew_check = QtGui.QCheckBox(self.existing_sys_widget)
        self.street_renew_check.setEnabled(True)
        self.street_renew_check.setGeometry(QtCore.QRect(220, 60, 121, 17))
        self.street_renew_check.setObjectName(_fromUtf8("street_renew_check"))
        self.street_decom_check = QtGui.QCheckBox(self.existing_sys_widget)
        self.street_decom_check.setGeometry(QtCore.QRect(220, 80, 121, 17))
        self.street_decom_check.setObjectName(_fromUtf8("street_decom_check"))
        self.neigh_decom_check = QtGui.QCheckBox(self.existing_sys_widget)
        self.neigh_decom_check.setGeometry(QtCore.QRect(40, 150, 121, 17))
        self.neigh_decom_check.setObjectName(_fromUtf8("neigh_decom_check"))
        self.neigh_renew_check = QtGui.QCheckBox(self.existing_sys_widget)
        self.neigh_renew_check.setEnabled(True)
        self.neigh_renew_check.setGeometry(QtCore.QRect(40, 130, 121, 17))
        self.neigh_renew_check.setObjectName(_fromUtf8("neigh_renew_check"))
        self.prec_decom_check = QtGui.QCheckBox(self.existing_sys_widget)
        self.prec_decom_check.setGeometry(QtCore.QRect(220, 150, 121, 17))
        self.prec_decom_check.setObjectName(_fromUtf8("prec_decom_check"))
        self.prec_renew_check = QtGui.QCheckBox(self.existing_sys_widget)
        self.prec_renew_check.setEnabled(True)
        self.prec_renew_check.setGeometry(QtCore.QRect(220, 130, 121, 17))
        self.prec_renew_check.setObjectName(_fromUtf8("prec_renew_check"))
        self.existing_prec_lbl = QtGui.QLabel(self.existing_sys_widget)
        self.existing_prec_lbl.setGeometry(QtCore.QRect(200, 110, 221, 16))
        self.existing_prec_lbl.setObjectName(_fromUtf8("existing_prec_lbl"))
        self.decom_slider = QtGui.QSlider(self.existing_sys_widget)
        self.decom_slider.setGeometry(QtCore.QRect(150, 220, 221, 21))
        self.decom_slider.setMaximum(100)
        self.decom_slider.setSingleStep(5)
        self.decom_slider.setPageStep(20)
        self.decom_slider.setProperty("value", 50)
        self.decom_slider.setOrientation(QtCore.Qt.Horizontal)
        self.decom_slider.setTickPosition(QtGui.QSlider.TicksAbove)
        self.decom_slider.setObjectName(_fromUtf8("decom_slider"))
        self.perf_deviation_lbl = QtGui.QLabel(self.existing_sys_widget)
        self.perf_deviation_lbl.setGeometry(QtCore.QRect(20, 190, 211, 16))
        self.perf_deviation_lbl.setObjectName(_fromUtf8("perf_deviation_lbl"))
        self.renew_slider = QtGui.QSlider(self.existing_sys_widget)
        self.renew_slider.setGeometry(QtCore.QRect(150, 250, 221, 21))
        self.renew_slider.setMaximum(100)
        self.renew_slider.setSingleStep(5)
        self.renew_slider.setPageStep(20)
        self.renew_slider.setProperty("value", 20)
        self.renew_slider.setOrientation(QtCore.Qt.Horizontal)
        self.renew_slider.setTickPosition(QtGui.QSlider.TicksBelow)
        self.renew_slider.setObjectName(_fromUtf8("renew_slider"))
        self.decom_box = QtGui.QLineEdit(self.existing_sys_widget)
        self.decom_box.setGeometry(QtCore.QRect(390, 220, 41, 20))
        self.decom_box.setReadOnly(True)
        self.decom_box.setObjectName(_fromUtf8("decom_box"))
        self.renew_box = QtGui.QLineEdit(self.existing_sys_widget)
        self.renew_box.setGeometry(QtCore.QRect(390, 250, 41, 20))
        self.renew_box.setText(_fromUtf8(""))
        self.renew_box.setReadOnly(True)
        self.renew_box.setObjectName(_fromUtf8("renew_box"))
        self.label_9 = QtGui.QLabel(self.existing_sys_widget)
        self.label_9.setGeometry(QtCore.QRect(10, 220, 131, 20))
        self.label_9.setObjectName(_fromUtf8("label_9"))
        self.thresholdlbl1 = QtGui.QLabel(self.existing_sys_widget)
        self.thresholdlbl1.setGeometry(QtCore.QRect(150, 270, 31, 20))
        self.thresholdlbl1.setObjectName(_fromUtf8("thresholdlbl1"))
        self.threshold_lbl2 = QtGui.QLabel(self.existing_sys_widget)
        self.threshold_lbl2.setGeometry(QtCore.QRect(360, 270, 31, 20))
        self.threshold_lbl2.setObjectName(_fromUtf8("threshold_lbl2"))
        self.label_14 = QtGui.QLabel(self.existing_sys_widget)
        self.label_14.setGeometry(QtCore.QRect(80, 250, 61, 20))
        self.label_14.setObjectName(_fromUtf8("label_14"))
        self.label_18 = QtGui.QLabel(self.existing_sys_widget)
        self.label_18.setGeometry(QtCore.QRect(50, 290, 131, 20))
        self.label_18.setObjectName(_fromUtf8("label_18"))
        self.radioKeep = QtGui.QRadioButton(self.existing_sys_widget)
        self.radioKeep.setGeometry(QtCore.QRect(190, 290, 82, 17))
        self.radioKeep.setObjectName(_fromUtf8("radioKeep"))
        self.radioDecom = QtGui.QRadioButton(self.existing_sys_widget)
        self.radioDecom.setGeometry(QtCore.QRect(260, 290, 91, 17))
        self.radioDecom.setObjectName(_fromUtf8("radioDecom"))
        self.verticalLayout_6.addWidget(self.existing_sys_widget)
        self.design_crit_inputs_2.setWidget(self.design_crit_inputs_widget_2)
        self.gridLayout_24.addWidget(self.design_crit_inputs_2, 0, 0, 2, 2)
        self.horizontalLayout_18.addWidget(self.design_crit_widget_2)
        self.design_crit_sidebar_2 = QtGui.QFrame(self.RetrofitRules)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.design_crit_sidebar_2.sizePolicy().hasHeightForWidth())
        self.design_crit_sidebar_2.setSizePolicy(sizePolicy)
        self.design_crit_sidebar_2.setMinimumSize(QtCore.QSize(221, 0))
        self.design_crit_sidebar_2.setMaximumSize(QtCore.QSize(221, 16777215))
        self.design_crit_sidebar_2.setFrameShape(QtGui.QFrame.StyledPanel)
        self.design_crit_sidebar_2.setFrameShadow(QtGui.QFrame.Raised)
        self.design_crit_sidebar_2.setObjectName(_fromUtf8("design_crit_sidebar_2"))
        self.verticalLayout_7 = QtGui.QVBoxLayout(self.design_crit_sidebar_2)
        self.verticalLayout_7.setObjectName(_fromUtf8("verticalLayout_7"))
        self.design_crit_sidebar_img_2 = QtGui.QLabel(self.design_crit_sidebar_2)
        self.design_crit_sidebar_img_2.setMinimumSize(QtCore.QSize(0, 145))
        self.design_crit_sidebar_img_2.setText(_fromUtf8(""))
        self.design_crit_sidebar_img_2.setPixmap(QtGui.QPixmap(_fromUtf8(":/techplacement/tech-retrofit.png")))
        self.design_crit_sidebar_img_2.setObjectName(_fromUtf8("design_crit_sidebar_img_2"))
        self.verticalLayout_7.addWidget(self.design_crit_sidebar_img_2)
        self.design_crit_sidebar_descr_2 = QtGui.QTextBrowser(self.design_crit_sidebar_2)
        self.design_crit_sidebar_descr_2.setObjectName(_fromUtf8("design_crit_sidebar_descr_2"))
        self.verticalLayout_7.addWidget(self.design_crit_sidebar_descr_2)
        self.horizontalLayout_18.addWidget(self.design_crit_sidebar_2)
        self.techplace_input.addTab(self.RetrofitRules, _fromUtf8(""))
        self.tab = QtGui.QWidget()
        self.tab.setObjectName(_fromUtf8("tab"))
        self.horizontalLayout_21 = QtGui.QHBoxLayout(self.tab)
        self.horizontalLayout_21.setObjectName(_fromUtf8("horizontalLayout_21"))
        self.design_crit_widget_3 = QtGui.QWidget(self.tab)
        self.design_crit_widget_3.setObjectName(_fromUtf8("design_crit_widget_3"))
        self.gridLayout_25 = QtGui.QGridLayout(self.design_crit_widget_3)
        self.gridLayout_25.setMargin(0)
        self.gridLayout_25.setObjectName(_fromUtf8("gridLayout_25"))
        self.design_crit_inputs_3 = QtGui.QScrollArea(self.design_crit_widget_3)
        self.design_crit_inputs_3.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.design_crit_inputs_3.setWidgetResizable(True)
        self.design_crit_inputs_3.setObjectName(_fromUtf8("design_crit_inputs_3"))
        self.design_crit_inputs_widget_3 = QtGui.QWidget()
        self.design_crit_inputs_widget_3.setGeometry(QtCore.QRect(0, 0, 465, 1236))
        self.design_crit_inputs_widget_3.setObjectName(_fromUtf8("design_crit_inputs_widget_3"))
        self.verticalLayout_9 = QtGui.QVBoxLayout(self.design_crit_inputs_widget_3)
        self.verticalLayout_9.setObjectName(_fromUtf8("verticalLayout_9"))
        self.demand_title = QtGui.QLabel(self.design_crit_inputs_widget_3)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(13)
        sizePolicy.setHeightForWidth(self.demand_title.sizePolicy().hasHeightForWidth())
        self.demand_title.setSizePolicy(sizePolicy)
        self.demand_title.setMinimumSize(QtCore.QSize(0, 13))
        self.demand_title.setMaximumSize(QtCore.QSize(16777215, 13))
        self.demand_title.setObjectName(_fromUtf8("demand_title"))
        self.verticalLayout_9.addWidget(self.demand_title)
        self.demand_params = QtGui.QWidget(self.design_crit_inputs_widget_3)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(50)
        sizePolicy.setHeightForWidth(self.demand_params.sizePolicy().hasHeightForWidth())
        self.demand_params.setSizePolicy(sizePolicy)
        self.demand_params.setMinimumSize(QtCore.QSize(369, 500))
        self.demand_params.setMaximumSize(QtCore.QSize(16777215, 500))
        self.demand_params.setObjectName(_fromUtf8("demand_params"))
        self.demand_laundry_lbl = QtGui.QLabel(self.demand_params)
        self.demand_laundry_lbl.setGeometry(QtCore.QRect(390, 20, 51, 16))
        self.demand_laundry_lbl.setObjectName(_fromUtf8("demand_laundry_lbl"))
        self.ffp_lbl = QtGui.QLabel(self.demand_params)
        self.ffp_lbl.setGeometry(QtCore.QRect(20, 130, 161, 16))
        self.ffp_lbl.setObjectName(_fromUtf8("ffp_lbl"))
        self.dur_lbl = QtGui.QLabel(self.demand_params)
        self.dur_lbl.setGeometry(QtCore.QRect(20, 70, 141, 16))
        self.dur_lbl.setObjectName(_fromUtf8("dur_lbl"))
        self.freq_lbl = QtGui.QLabel(self.demand_params)
        self.freq_lbl.setGeometry(QtCore.QRect(20, 40, 161, 16))
        self.freq_lbl.setObjectName(_fromUtf8("freq_lbl"))
        self.ffp_kitchen_combo = QtGui.QComboBox(self.demand_params)
        self.ffp_kitchen_combo.setGeometry(QtCore.QRect(195, 130, 51, 21))
        self.ffp_kitchen_combo.setObjectName(_fromUtf8("ffp_kitchen_combo"))
        self.ffp_kitchen_combo.addItem(_fromUtf8(""))
        self.ffp_kitchen_combo.addItem(_fromUtf8(""))
        self.ffp_kitchen_combo.addItem(_fromUtf8(""))
        self.ffp_kitchen_combo.addItem(_fromUtf8(""))
        self.ffp_kitchen_combo.addItem(_fromUtf8(""))
        self.dur_laundry_box = QtGui.QLineEdit(self.demand_params)
        self.dur_laundry_box.setEnabled(False)
        self.dur_laundry_box.setGeometry(QtCore.QRect(390, 70, 51, 20))
        self.dur_laundry_box.setObjectName(_fromUtf8("dur_laundry_box"))
        self.dur_shower_box = QtGui.QLineEdit(self.demand_params)
        self.dur_shower_box.setGeometry(QtCore.QRect(260, 70, 51, 20))
        self.dur_shower_box.setObjectName(_fromUtf8("dur_shower_box"))
        self.freq_shower_box = QtGui.QLineEdit(self.demand_params)
        self.freq_shower_box.setGeometry(QtCore.QRect(260, 40, 51, 20))
        self.freq_shower_box.setObjectName(_fromUtf8("freq_shower_box"))
        self.demand_shower_lbl = QtGui.QLabel(self.demand_params)
        self.demand_shower_lbl.setGeometry(QtCore.QRect(260, 20, 51, 16))
        self.demand_shower_lbl.setObjectName(_fromUtf8("demand_shower_lbl"))
        self.ffp_shower_combo = QtGui.QComboBox(self.demand_params)
        self.ffp_shower_combo.setGeometry(QtCore.QRect(260, 130, 51, 21))
        self.ffp_shower_combo.setObjectName(_fromUtf8("ffp_shower_combo"))
        self.ffp_shower_combo.addItem(_fromUtf8(""))
        self.ffp_shower_combo.addItem(_fromUtf8(""))
        self.ffp_shower_combo.addItem(_fromUtf8(""))
        self.ffp_shower_combo.addItem(_fromUtf8(""))
        self.ffp_shower_combo.addItem(_fromUtf8(""))
        self.t2t_house_lbl = QtGui.QLabel(self.demand_params)
        self.t2t_house_lbl.setGeometry(QtCore.QRect(20, 165, 261, 16))
        self.t2t_house_lbl.setObjectName(_fromUtf8("t2t_house_lbl"))
        self.ffp_toilet_combo = QtGui.QComboBox(self.demand_params)
        self.ffp_toilet_combo.setGeometry(QtCore.QRect(325, 130, 51, 21))
        self.ffp_toilet_combo.setObjectName(_fromUtf8("ffp_toilet_combo"))
        self.ffp_toilet_combo.addItem(_fromUtf8(""))
        self.ffp_toilet_combo.addItem(_fromUtf8(""))
        self.ffp_toilet_combo.addItem(_fromUtf8(""))
        self.ffp_toilet_combo.addItem(_fromUtf8(""))
        self.ffp_toilet_combo.addItem(_fromUtf8(""))
        self.ffp_laundry_combo = QtGui.QComboBox(self.demand_params)
        self.ffp_laundry_combo.setGeometry(QtCore.QRect(390, 130, 51, 20))
        self.ffp_laundry_combo.setObjectName(_fromUtf8("ffp_laundry_combo"))
        self.ffp_laundry_combo.addItem(_fromUtf8(""))
        self.ffp_laundry_combo.addItem(_fromUtf8(""))
        self.ffp_laundry_combo.addItem(_fromUtf8(""))
        self.ffp_laundry_combo.addItem(_fromUtf8(""))
        self.ffp_laundry_combo.addItem(_fromUtf8(""))
        self.demand_toilet_lbl = QtGui.QLabel(self.demand_params)
        self.demand_toilet_lbl.setGeometry(QtCore.QRect(335, 20, 31, 16))
        self.demand_toilet_lbl.setObjectName(_fromUtf8("demand_toilet_lbl"))
        self.ffp_garden_combo = QtGui.QComboBox(self.demand_params)
        self.ffp_garden_combo.setGeometry(QtCore.QRect(190, 195, 51, 21))
        self.ffp_garden_combo.setObjectName(_fromUtf8("ffp_garden_combo"))
        self.ffp_garden_combo.addItem(_fromUtf8(""))
        self.ffp_garden_combo.addItem(_fromUtf8(""))
        self.ffp_garden_combo.addItem(_fromUtf8(""))
        self.ffp_garden_combo.addItem(_fromUtf8(""))
        self.ffp_garden_combo.addItem(_fromUtf8(""))
        self.freq_laundry_box = QtGui.QLineEdit(self.demand_params)
        self.freq_laundry_box.setGeometry(QtCore.QRect(390, 40, 51, 20))
        self.freq_laundry_box.setObjectName(_fromUtf8("freq_laundry_box"))
        self.priv_irr_vol_box = QtGui.QLineEdit(self.demand_params)
        self.priv_irr_vol_box.setGeometry(QtCore.QRect(280, 165, 51, 20))
        self.priv_irr_vol_box.setObjectName(_fromUtf8("priv_irr_vol_box"))
        self.ffp_garden_lbl = QtGui.QLabel(self.demand_params)
        self.ffp_garden_lbl.setGeometry(QtCore.QRect(20, 195, 161, 16))
        self.ffp_garden_lbl.setObjectName(_fromUtf8("ffp_garden_lbl"))
        self.dur_toilet_box = QtGui.QLineEdit(self.demand_params)
        self.dur_toilet_box.setEnabled(False)
        self.dur_toilet_box.setGeometry(QtCore.QRect(325, 70, 51, 20))
        self.dur_toilet_box.setObjectName(_fromUtf8("dur_toilet_box"))
        self.demandvary_lbl = QtGui.QLabel(self.demand_params)
        self.demandvary_lbl.setGeometry(QtCore.QRect(20, 100, 161, 16))
        self.demandvary_lbl.setObjectName(_fromUtf8("demandvary_lbl"))
        self.freq_kitchen_box = QtGui.QLineEdit(self.demand_params)
        self.freq_kitchen_box.setGeometry(QtCore.QRect(195, 40, 51, 20))
        self.freq_kitchen_box.setObjectName(_fromUtf8("freq_kitchen_box"))
        self.freq_toilet_box = QtGui.QLineEdit(self.demand_params)
        self.freq_toilet_box.setGeometry(QtCore.QRect(325, 40, 51, 20))
        self.freq_toilet_box.setObjectName(_fromUtf8("freq_toilet_box"))
        self.demand_kitchen_lbl = QtGui.QLabel(self.demand_params)
        self.demand_kitchen_lbl.setGeometry(QtCore.QRect(195, 20, 51, 16))
        self.demand_kitchen_lbl.setObjectName(_fromUtf8("demand_kitchen_lbl"))
        self.dur_kitchen_box = QtGui.QLineEdit(self.demand_params)
        self.dur_kitchen_box.setGeometry(QtCore.QRect(195, 70, 51, 20))
        self.dur_kitchen_box.setObjectName(_fromUtf8("dur_kitchen_box"))
        self.res_demand_title_2 = QtGui.QLabel(self.demand_params)
        self.res_demand_title_2.setGeometry(QtCore.QRect(10, 10, 151, 13))
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(13)
        sizePolicy.setHeightForWidth(self.res_demand_title_2.sizePolicy().hasHeightForWidth())
        self.res_demand_title_2.setSizePolicy(sizePolicy)
        self.res_demand_title_2.setMinimumSize(QtCore.QSize(0, 13))
        self.res_demand_title_2.setMaximumSize(QtCore.QSize(16777215, 13))
        self.res_demand_title_2.setObjectName(_fromUtf8("res_demand_title_2"))
        self.res_demand_title_3 = QtGui.QLabel(self.demand_params)
        self.res_demand_title_3.setGeometry(QtCore.QRect(10, 230, 171, 13))
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(13)
        sizePolicy.setHeightForWidth(self.res_demand_title_3.sizePolicy().hasHeightForWidth())
        self.res_demand_title_3.setSizePolicy(sizePolicy)
        self.res_demand_title_3.setMinimumSize(QtCore.QSize(0, 13))
        self.res_demand_title_3.setMaximumSize(QtCore.QSize(16777215, 13))
        self.res_demand_title_3.setObjectName(_fromUtf8("res_demand_title_3"))
        self.lidemand_spin = QtGui.QSpinBox(self.demand_params)
        self.lidemand_spin.setGeometry(QtCore.QRect(270, 285, 61, 22))
        self.lidemand_spin.setMaximum(10)
        self.lidemand_spin.setSingleStep(5)
        self.lidemand_spin.setProperty("value", 10)
        self.lidemand_spin.setObjectName(_fromUtf8("lidemand_spin"))
        self.comdemand_box = QtGui.QLineEdit(self.demand_params)
        self.comdemand_box.setGeometry(QtCore.QRect(190, 255, 51, 20))
        self.comdemand_box.setObjectName(_fromUtf8("comdemand_box"))
        self.lidemand_lbl = QtGui.QLabel(self.demand_params)
        self.lidemand_lbl.setGeometry(QtCore.QRect(20, 285, 161, 17))
        self.lidemand_lbl.setObjectName(_fromUtf8("lidemand_lbl"))
        self.comdemand_spin = QtGui.QSpinBox(self.demand_params)
        self.comdemand_spin.setGeometry(QtCore.QRect(270, 255, 61, 22))
        self.comdemand_spin.setMaximum(10)
        self.comdemand_spin.setSingleStep(5)
        self.comdemand_spin.setProperty("value", 10)
        self.comdemand_spin.setObjectName(_fromUtf8("comdemand_spin"))
        self.comdemand_lbl = QtGui.QLabel(self.demand_params)
        self.comdemand_lbl.setGeometry(QtCore.QRect(20, 255, 151, 17))
        self.comdemand_lbl.setObjectName(_fromUtf8("comdemand_lbl"))
        self.hidemand_spin = QtGui.QSpinBox(self.demand_params)
        self.hidemand_spin.setGeometry(QtCore.QRect(270, 315, 61, 22))
        self.hidemand_spin.setMaximum(10)
        self.hidemand_spin.setSingleStep(5)
        self.hidemand_spin.setProperty("value", 10)
        self.hidemand_spin.setObjectName(_fromUtf8("hidemand_spin"))
        self.lidemand_pm = QtGui.QLabel(self.demand_params)
        self.lidemand_pm.setGeometry(QtCore.QRect(245, 285, 31, 20))
        self.lidemand_pm.setObjectName(_fromUtf8("lidemand_pm"))
        self.comdemand_pm = QtGui.QLabel(self.demand_params)
        self.comdemand_pm.setGeometry(QtCore.QRect(245, 255, 31, 20))
        self.comdemand_pm.setObjectName(_fromUtf8("comdemand_pm"))
        self.hidemand_lbl = QtGui.QLabel(self.demand_params)
        self.hidemand_lbl.setGeometry(QtCore.QRect(20, 315, 161, 17))
        self.hidemand_lbl.setObjectName(_fromUtf8("hidemand_lbl"))
        self.lidemand_box = QtGui.QLineEdit(self.demand_params)
        self.lidemand_box.setGeometry(QtCore.QRect(190, 285, 51, 20))
        self.lidemand_box.setObjectName(_fromUtf8("lidemand_box"))
        self.hidemand_pm = QtGui.QLabel(self.demand_params)
        self.hidemand_pm.setGeometry(QtCore.QRect(245, 315, 31, 20))
        self.hidemand_pm.setObjectName(_fromUtf8("hidemand_pm"))
        self.hidemand_box = QtGui.QLineEdit(self.demand_params)
        self.hidemand_box.setGeometry(QtCore.QRect(190, 315, 51, 20))
        self.hidemand_box.setObjectName(_fromUtf8("hidemand_box"))
        self.public_irr_title = QtGui.QLabel(self.demand_params)
        self.public_irr_title.setGeometry(QtCore.QRect(10, 355, 447, 13))
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(13)
        sizePolicy.setHeightForWidth(self.public_irr_title.sizePolicy().hasHeightForWidth())
        self.public_irr_title.setSizePolicy(sizePolicy)
        self.public_irr_title.setMinimumSize(QtCore.QSize(0, 13))
        self.public_irr_title.setMaximumSize(QtCore.QSize(16777215, 13))
        self.public_irr_title.setObjectName(_fromUtf8("public_irr_title"))
        self.public_irr_lbl2 = QtGui.QLabel(self.demand_params)
        self.public_irr_lbl2.setGeometry(QtCore.QRect(20, 405, 181, 16))
        self.public_irr_lbl2.setObjectName(_fromUtf8("public_irr_lbl2"))
        self.public_irr_wq = QtGui.QComboBox(self.demand_params)
        self.public_irr_wq.setGeometry(QtCore.QRect(220, 470, 51, 21))
        self.public_irr_wq.setObjectName(_fromUtf8("public_irr_wq"))
        self.public_irr_wq.addItem(_fromUtf8(""))
        self.public_irr_wq.addItem(_fromUtf8(""))
        self.public_irr_wq.addItem(_fromUtf8(""))
        self.public_irr_wq.addItem(_fromUtf8(""))
        self.public_irr_wq.addItem(_fromUtf8(""))
        self.public_irr_volume = QtGui.QLineEdit(self.demand_params)
        self.public_irr_volume.setGeometry(QtCore.QRect(280, 380, 51, 20))
        self.public_irr_volume.setText(_fromUtf8(""))
        self.public_irr_volume.setObjectName(_fromUtf8("public_irr_volume"))
        self.public_irr_pg = QtGui.QCheckBox(self.demand_params)
        self.public_irr_pg.setGeometry(QtCore.QRect(210, 425, 221, 17))
        self.public_irr_pg.setObjectName(_fromUtf8("public_irr_pg"))
        self.public_irr_lbl = QtGui.QLabel(self.demand_params)
        self.public_irr_lbl.setGeometry(QtCore.QRect(20, 380, 251, 16))
        self.public_irr_lbl.setObjectName(_fromUtf8("public_irr_lbl"))
        self.public_irr_ref = QtGui.QCheckBox(self.demand_params)
        self.public_irr_ref.setGeometry(QtCore.QRect(210, 445, 141, 17))
        self.public_irr_ref.setObjectName(_fromUtf8("public_irr_ref"))
        self.public_irr_lbl3 = QtGui.QLabel(self.demand_params)
        self.public_irr_lbl3.setGeometry(QtCore.QRect(20, 470, 201, 16))
        self.public_irr_lbl3.setObjectName(_fromUtf8("public_irr_lbl3"))
        self.public_irr_nonres = QtGui.QCheckBox(self.demand_params)
        self.public_irr_nonres.setGeometry(QtCore.QRect(210, 405, 191, 17))
        self.public_irr_nonres.setObjectName(_fromUtf8("public_irr_nonres"))
        self.demandvary_kitchen_box = QtGui.QSpinBox(self.demand_params)
        self.demandvary_kitchen_box.setGeometry(QtCore.QRect(195, 100, 51, 22))
        self.demandvary_kitchen_box.setMaximum(100)
        self.demandvary_kitchen_box.setSingleStep(5)
        self.demandvary_kitchen_box.setProperty("value", 10)
        self.demandvary_kitchen_box.setObjectName(_fromUtf8("demandvary_kitchen_box"))
        self.demandvary_shower_box = QtGui.QSpinBox(self.demand_params)
        self.demandvary_shower_box.setGeometry(QtCore.QRect(260, 100, 51, 22))
        self.demandvary_shower_box.setMaximum(100)
        self.demandvary_shower_box.setSingleStep(5)
        self.demandvary_shower_box.setProperty("value", 10)
        self.demandvary_shower_box.setObjectName(_fromUtf8("demandvary_shower_box"))
        self.demandvary_toilet_box = QtGui.QSpinBox(self.demand_params)
        self.demandvary_toilet_box.setGeometry(QtCore.QRect(325, 100, 51, 22))
        self.demandvary_toilet_box.setMaximum(100)
        self.demandvary_toilet_box.setSingleStep(5)
        self.demandvary_toilet_box.setProperty("value", 10)
        self.demandvary_toilet_box.setObjectName(_fromUtf8("demandvary_toilet_box"))
        self.demandvary_laundry_box = QtGui.QSpinBox(self.demand_params)
        self.demandvary_laundry_box.setGeometry(QtCore.QRect(390, 100, 51, 22))
        self.demandvary_laundry_box.setMaximum(100)
        self.demandvary_laundry_box.setSingleStep(5)
        self.demandvary_laundry_box.setProperty("value", 10)
        self.demandvary_laundry_box.setObjectName(_fromUtf8("demandvary_laundry_box"))
        self.comdemand_units = QtGui.QComboBox(self.demand_params)
        self.comdemand_units.setGeometry(QtCore.QRect(340, 255, 81, 21))
        self.comdemand_units.setObjectName(_fromUtf8("comdemand_units"))
        self.comdemand_units.addItem(_fromUtf8(""))
        self.comdemand_units.addItem(_fromUtf8(""))
        self.lidemand_units = QtGui.QComboBox(self.demand_params)
        self.lidemand_units.setGeometry(QtCore.QRect(340, 285, 81, 21))
        self.lidemand_units.setObjectName(_fromUtf8("lidemand_units"))
        self.lidemand_units.addItem(_fromUtf8(""))
        self.lidemand_units.addItem(_fromUtf8(""))
        self.hidemand_units = QtGui.QComboBox(self.demand_params)
        self.hidemand_units.setGeometry(QtCore.QRect(340, 315, 81, 21))
        self.hidemand_units.setObjectName(_fromUtf8("hidemand_units"))
        self.hidemand_units.addItem(_fromUtf8(""))
        self.hidemand_units.addItem(_fromUtf8(""))
        self.verticalLayout_9.addWidget(self.demand_params)
        self.wef_lbl = QtGui.QLabel(self.design_crit_inputs_widget_3)
        self.wef_lbl.setMinimumSize(QtCore.QSize(0, 16))
        self.wef_lbl.setMaximumSize(QtCore.QSize(16777215, 16))
        self.wef_lbl.setObjectName(_fromUtf8("wef_lbl"))
        self.verticalLayout_9.addWidget(self.wef_lbl)
        self.wef_widget = QtGui.QWidget(self.design_crit_inputs_widget_3)
        self.wef_widget.setMinimumSize(QtCore.QSize(0, 270))
        self.wef_widget.setObjectName(_fromUtf8("wef_widget"))
        self.WEF_rating_system_lbl = QtGui.QLabel(self.wef_widget)
        self.WEF_rating_system_lbl.setGeometry(QtCore.QRect(30, 35, 91, 16))
        self.WEF_rating_system_lbl.setObjectName(_fromUtf8("WEF_rating_system_lbl"))
        self.WEF_loc_house_check = QtGui.QCheckBox(self.wef_widget)
        self.WEF_loc_house_check.setGeometry(QtCore.QRect(100, 65, 61, 17))
        self.WEF_loc_house_check.setObjectName(_fromUtf8("WEF_loc_house_check"))
        self.WEF_loc_nonres_check = QtGui.QCheckBox(self.wef_widget)
        self.WEF_loc_nonres_check.setEnabled(False)
        self.WEF_loc_nonres_check.setGeometry(QtCore.QRect(260, 65, 161, 17))
        self.WEF_loc_nonres_check.setObjectName(_fromUtf8("WEF_loc_nonres_check"))
        self.WEF_rating_system_combo = QtGui.QComboBox(self.wef_widget)
        self.WEF_rating_system_combo.setGeometry(QtCore.QRect(120, 31, 201, 21))
        self.WEF_rating_system_combo.setObjectName(_fromUtf8("WEF_rating_system_combo"))
        self.WEF_rating_system_combo.addItem(_fromUtf8(""))
        self.WEF_rating_system_combo.addItem(_fromUtf8(""))
        self.WED_loc_lbl = QtGui.QLabel(self.wef_widget)
        self.WED_loc_lbl.setGeometry(QtCore.QRect(30, 65, 61, 16))
        self.WED_loc_lbl.setObjectName(_fromUtf8("WED_loc_lbl"))
        self.WEF_loc_apart_check = QtGui.QCheckBox(self.wef_widget)
        self.WEF_loc_apart_check.setEnabled(True)
        self.WEF_loc_apart_check.setGeometry(QtCore.QRect(170, 65, 91, 17))
        self.WEF_loc_apart_check.setObjectName(_fromUtf8("WEF_loc_apart_check"))
        self.WED_loc_lbl2 = QtGui.QLabel(self.wef_widget)
        self.WED_loc_lbl2.setGeometry(QtCore.QRect(30, 95, 311, 16))
        self.WED_loc_lbl2.setObjectName(_fromUtf8("WED_loc_lbl2"))
        self.WEF_constant_radio = QtGui.QRadioButton(self.wef_widget)
        self.WEF_constant_radio.setGeometry(QtCore.QRect(40, 120, 101, 17))
        self.WEF_constant_radio.setObjectName(_fromUtf8("WEF_constant_radio"))
        self.WEF_distribution_radio = QtGui.QRadioButton(self.wef_widget)
        self.WEF_distribution_radio.setGeometry(QtCore.QRect(40, 170, 111, 17))
        self.WEF_distribution_radio.setObjectName(_fromUtf8("WEF_distribution_radio"))
        self.WEF_constant_lbl = QtGui.QLabel(self.wef_widget)
        self.WEF_constant_lbl.setGeometry(QtCore.QRect(70, 145, 101, 16))
        self.WEF_constant_lbl.setObjectName(_fromUtf8("WEF_constant_lbl"))
        self.WEF_constant_combo = QtGui.QComboBox(self.wef_widget)
        self.WEF_constant_combo.setGeometry(QtCore.QRect(230, 141, 71, 20))
        self.WEF_constant_combo.setObjectName(_fromUtf8("WEF_constant_combo"))
        self.WEF_constant_combo.addItem(_fromUtf8(""))
        self.WEF_constant_combo.addItem(_fromUtf8(""))
        self.WEF_constant_combo.addItem(_fromUtf8(""))
        self.WEF_constant_combo.addItem(_fromUtf8(""))
        self.WEF_constant_combo.addItem(_fromUtf8(""))
        self.WEF_constant_combo.addItem(_fromUtf8(""))
        self.WEF_consider = QtGui.QCheckBox(self.wef_widget)
        self.WEF_consider.setGeometry(QtCore.QRect(10, 5, 351, 17))
        self.WEF_consider.setObjectName(_fromUtf8("WEF_consider"))
        self.WEF_distribution_lbl2 = QtGui.QLabel(self.wef_widget)
        self.WEF_distribution_lbl2.setGeometry(QtCore.QRect(70, 195, 151, 16))
        self.WEF_distribution_lbl2.setObjectName(_fromUtf8("WEF_distribution_lbl2"))
        self.WEF_distribution_combo = QtGui.QComboBox(self.wef_widget)
        self.WEF_distribution_combo.setGeometry(QtCore.QRect(230, 191, 71, 20))
        self.WEF_distribution_combo.setObjectName(_fromUtf8("WEF_distribution_combo"))
        self.WEF_distribution_combo.addItem(_fromUtf8(""))
        self.WEF_distribution_combo.addItem(_fromUtf8(""))
        self.WEF_distribution_combo.addItem(_fromUtf8(""))
        self.WEF_distribution_combo.addItem(_fromUtf8(""))
        self.WEF_distribution_combo.addItem(_fromUtf8(""))
        self.WEF_distribution_combo.addItem(_fromUtf8(""))
        self.WEF_distribution_lbl3 = QtGui.QLabel(self.wef_widget)
        self.WEF_distribution_lbl3.setGeometry(QtCore.QRect(70, 220, 161, 16))
        self.WEF_distribution_lbl3.setObjectName(_fromUtf8("WEF_distribution_lbl3"))
        self.WEF_distribution_select = QtGui.QComboBox(self.wef_widget)
        self.WEF_distribution_select.setGeometry(QtCore.QRect(230, 220, 201, 21))
        self.WEF_distribution_select.setObjectName(_fromUtf8("WEF_distribution_select"))
        self.WEF_distribution_select.addItem(_fromUtf8(""))
        self.WEF_distribution_select.addItem(_fromUtf8(""))
        self.WEF_distribution_select.addItem(_fromUtf8(""))
        self.WEF_distribution_select.addItem(_fromUtf8(""))
        self.WEF_distribution_check = QtGui.QCheckBox(self.wef_widget)
        self.WEF_distribution_check.setEnabled(True)
        self.WEF_distribution_check.setGeometry(QtCore.QRect(70, 245, 261, 17))
        self.WEF_distribution_check.setObjectName(_fromUtf8("WEF_distribution_check"))
        self.verticalLayout_9.addWidget(self.wef_widget)
        self.recycle_lbl1 = QtGui.QLabel(self.design_crit_inputs_widget_3)
        self.recycle_lbl1.setMinimumSize(QtCore.QSize(0, 16))
        self.recycle_lbl1.setMaximumSize(QtCore.QSize(16777215, 16))
        self.recycle_lbl1.setObjectName(_fromUtf8("recycle_lbl1"))
        self.verticalLayout_9.addWidget(self.recycle_lbl1)
        self.recycle_widget1 = QtGui.QWidget(self.design_crit_inputs_widget_3)
        self.recycle_widget1.setMinimumSize(QtCore.QSize(0, 220))
        self.recycle_widget1.setObjectName(_fromUtf8("recycle_widget1"))
        self.rec_wwsource_lbl = QtGui.QLabel(self.recycle_widget1)
        self.rec_wwsource_lbl.setGeometry(QtCore.QRect(10, 40, 171, 16))
        self.rec_wwsource_lbl.setObjectName(_fromUtf8("rec_wwsource_lbl"))
        self.rec_ww_toilet = QtGui.QCheckBox(self.recycle_widget1)
        self.rec_ww_toilet.setEnabled(False)
        self.rec_ww_toilet.setGeometry(QtCore.QRect(320, 40, 61, 17))
        self.rec_ww_toilet.setObjectName(_fromUtf8("rec_ww_toilet"))
        self.rec_ww_kitchen = QtGui.QCheckBox(self.recycle_widget1)
        self.rec_ww_kitchen.setEnabled(False)
        self.rec_ww_kitchen.setGeometry(QtCore.QRect(180, 40, 70, 17))
        self.rec_ww_kitchen.setObjectName(_fromUtf8("rec_ww_kitchen"))
        self.rec_ww_shower = QtGui.QCheckBox(self.recycle_widget1)
        self.rec_ww_shower.setEnabled(False)
        self.rec_ww_shower.setGeometry(QtCore.QRect(250, 40, 70, 17))
        self.rec_ww_shower.setObjectName(_fromUtf8("rec_ww_shower"))
        self.rec_ww_laundry = QtGui.QCheckBox(self.recycle_widget1)
        self.rec_ww_laundry.setEnabled(False)
        self.rec_ww_laundry.setGeometry(QtCore.QRect(380, 40, 61, 17))
        self.rec_ww_laundry.setObjectName(_fromUtf8("rec_ww_laundry"))
        self.rec_demrange_lbl = QtGui.QLabel(self.recycle_widget1)
        self.rec_demrange_lbl.setGeometry(QtCore.QRect(10, 10, 261, 16))
        self.rec_demrange_lbl.setObjectName(_fromUtf8("rec_demrange_lbl"))
        self.rec_demrange_min = QtGui.QSpinBox(self.recycle_widget1)
        self.rec_demrange_min.setGeometry(QtCore.QRect(270, 10, 61, 16))
        self.rec_demrange_min.setMinimum(10)
        self.rec_demrange_min.setMaximum(100)
        self.rec_demrange_min.setObjectName(_fromUtf8("rec_demrange_min"))
        self.rec_demrange_max = QtGui.QSpinBox(self.recycle_widget1)
        self.rec_demrange_max.setGeometry(QtCore.QRect(360, 10, 61, 16))
        self.rec_demrange_max.setMinimum(10)
        self.rec_demrange_max.setMaximum(100)
        self.rec_demrange_max.setProperty("value", 100)
        self.rec_demrange_max.setObjectName(_fromUtf8("rec_demrange_max"))
        self.rec_demrange_lbl2 = QtGui.QLabel(self.recycle_widget1)
        self.rec_demrange_lbl2.setGeometry(QtCore.QRect(340, 10, 21, 16))
        self.rec_demrange_lbl2.setObjectName(_fromUtf8("rec_demrange_lbl2"))
        self.radio_hsup = QtGui.QRadioButton(self.recycle_widget1)
        self.radio_hsup.setGeometry(QtCore.QRect(170, 190, 121, 17))
        self.radio_hsup.setObjectName(_fromUtf8("radio_hsup"))
        self.hs_all_img = QtGui.QLabel(self.recycle_widget1)
        self.hs_all_img.setGeometry(QtCore.QRect(315, 90, 120, 80))
        self.hs_all_img.setMinimumSize(QtCore.QSize(120, 80))
        self.hs_all_img.setText(_fromUtf8(""))
        self.hs_all_img.setPixmap(QtGui.QPixmap(_fromUtf8(":/techplacement/swhc.png")))
        self.hs_all_img.setObjectName(_fromUtf8("hs_all_img"))
        self.radio_hsdown = QtGui.QRadioButton(self.recycle_widget1)
        self.radio_hsdown.setGeometry(QtCore.QRect(20, 190, 121, 17))
        self.radio_hsdown.setObjectName(_fromUtf8("radio_hsdown"))
        self.hs_up_img = QtGui.QLabel(self.recycle_widget1)
        self.hs_up_img.setGeometry(QtCore.QRect(170, 90, 120, 80))
        self.hs_up_img.setMinimumSize(QtCore.QSize(120, 80))
        self.hs_up_img.setText(_fromUtf8(""))
        self.hs_up_img.setPixmap(QtGui.QPixmap(_fromUtf8(":/techplacement/swhb.png")))
        self.hs_up_img.setObjectName(_fromUtf8("hs_up_img"))
        self.hs_select_lbl = QtGui.QLabel(self.recycle_widget1)
        self.hs_select_lbl.setGeometry(QtCore.QRect(10, 70, 341, 16))
        self.hs_select_lbl.setObjectName(_fromUtf8("hs_select_lbl"))
        self.hs_down_img = QtGui.QLabel(self.recycle_widget1)
        self.hs_down_img.setGeometry(QtCore.QRect(20, 90, 120, 80))
        self.hs_down_img.setMinimumSize(QtCore.QSize(120, 80))
        self.hs_down_img.setText(_fromUtf8(""))
        self.hs_down_img.setPixmap(QtGui.QPixmap(_fromUtf8(":/techplacement/swha.png")))
        self.hs_down_img.setObjectName(_fromUtf8("hs_down_img"))
        self.radio_hsall = QtGui.QRadioButton(self.recycle_widget1)
        self.radio_hsall.setGeometry(QtCore.QRect(310, 190, 121, 17))
        self.radio_hsall.setObjectName(_fromUtf8("radio_hsall"))
        self.hs_select_lbl_2 = QtGui.QLabel(self.recycle_widget1)
        self.hs_select_lbl_2.setGeometry(QtCore.QRect(40, 174, 111, 16))
        self.hs_select_lbl_2.setObjectName(_fromUtf8("hs_select_lbl_2"))
        self.hs_select_lbl_3 = QtGui.QLabel(self.recycle_widget1)
        self.hs_select_lbl_3.setGeometry(QtCore.QRect(190, 175, 111, 16))
        self.hs_select_lbl_3.setObjectName(_fromUtf8("hs_select_lbl_3"))
        self.hs_select_lbl_4 = QtGui.QLabel(self.recycle_widget1)
        self.hs_select_lbl_4.setGeometry(QtCore.QRect(330, 175, 111, 16))
        self.hs_select_lbl_4.setObjectName(_fromUtf8("hs_select_lbl_4"))
        self.verticalLayout_9.addWidget(self.recycle_widget1)
        self.recycle_lbl2 = QtGui.QLabel(self.design_crit_inputs_widget_3)
        self.recycle_lbl2.setMinimumSize(QtCore.QSize(0, 16))
        self.recycle_lbl2.setMaximumSize(QtCore.QSize(16777215, 16))
        self.recycle_lbl2.setObjectName(_fromUtf8("recycle_lbl2"))
        self.verticalLayout_9.addWidget(self.recycle_lbl2)
        self.recycle_widget2 = QtGui.QWidget(self.design_crit_inputs_widget_3)
        self.recycle_widget2.setMinimumSize(QtCore.QSize(0, 125))
        self.recycle_widget2.setObjectName(_fromUtf8("recycle_widget2"))
        self.rec_assessment_lbl = QtGui.QLabel(self.recycle_widget2)
        self.rec_assessment_lbl.setGeometry(QtCore.QRect(10, 10, 131, 16))
        self.rec_assessment_lbl.setObjectName(_fromUtf8("rec_assessment_lbl"))
        self.rec_assessment_combo = QtGui.QComboBox(self.recycle_widget2)
        self.rec_assessment_combo.setGeometry(QtCore.QRect(140, 5, 291, 22))
        self.rec_assessment_combo.setObjectName(_fromUtf8("rec_assessment_combo"))
        self.rec_assessment_combo.addItem(_fromUtf8(""))
        self.rec_assessment_combo.addItem(_fromUtf8(""))
        self.rec_rainfall_lbl = QtGui.QLabel(self.recycle_widget2)
        self.rec_rainfall_lbl.setGeometry(QtCore.QRect(10, 40, 311, 16))
        self.rec_rainfall_lbl.setObjectName(_fromUtf8("rec_rainfall_lbl"))
        self.rec_rainfall_spin = QtGui.QSpinBox(self.recycle_widget2)
        self.rec_rainfall_spin.setGeometry(QtCore.QRect(320, 40, 71, 16))
        self.rec_rainfall_spin.setMinimum(1)
        self.rec_rainfall_spin.setMaximum(10)
        self.rec_rainfall_spin.setProperty("value", 10)
        self.rec_rainfall_spin.setObjectName(_fromUtf8("rec_rainfall_spin"))
        self.swh_benefits_check = QtGui.QCheckBox(self.recycle_widget2)
        self.swh_benefits_check.setGeometry(QtCore.QRect(10, 70, 421, 17))
        self.swh_benefits_check.setObjectName(_fromUtf8("swh_benefits_check"))
        self.rec_unitrunoff_lbl = QtGui.QLabel(self.recycle_widget2)
        self.rec_unitrunoff_lbl.setGeometry(QtCore.QRect(30, 95, 211, 16))
        self.rec_unitrunoff_lbl.setObjectName(_fromUtf8("rec_unitrunoff_lbl"))
        self.rec_unitrunoff_box = QtGui.QLineEdit(self.recycle_widget2)
        self.rec_unitrunoff_box.setGeometry(QtCore.QRect(250, 95, 51, 20))
        self.rec_unitrunoff_box.setText(_fromUtf8(""))
        self.rec_unitrunoff_box.setObjectName(_fromUtf8("rec_unitrunoff_box"))
        self.rec_unitrunoff_auto = QtGui.QCheckBox(self.recycle_widget2)
        self.rec_unitrunoff_auto.setGeometry(QtCore.QRect(320, 95, 101, 17))
        self.rec_unitrunoff_auto.setObjectName(_fromUtf8("rec_unitrunoff_auto"))
        self.verticalLayout_9.addWidget(self.recycle_widget2)
        self.design_crit_inputs_3.setWidget(self.design_crit_inputs_widget_3)
        self.gridLayout_25.addWidget(self.design_crit_inputs_3, 0, 0, 1, 1)
        self.horizontalLayout_21.addWidget(self.design_crit_widget_3)
        self.design_crit_sidebar_3 = QtGui.QFrame(self.tab)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.design_crit_sidebar_3.sizePolicy().hasHeightForWidth())
        self.design_crit_sidebar_3.setSizePolicy(sizePolicy)
        self.design_crit_sidebar_3.setMinimumSize(QtCore.QSize(221, 0))
        self.design_crit_sidebar_3.setMaximumSize(QtCore.QSize(221, 16777215))
        self.design_crit_sidebar_3.setFrameShape(QtGui.QFrame.StyledPanel)
        self.design_crit_sidebar_3.setFrameShadow(QtGui.QFrame.Raised)
        self.design_crit_sidebar_3.setObjectName(_fromUtf8("design_crit_sidebar_3"))
        self.verticalLayout_10 = QtGui.QVBoxLayout(self.design_crit_sidebar_3)
        self.verticalLayout_10.setObjectName(_fromUtf8("verticalLayout_10"))
        self.design_crit_sidebar_img_3 = QtGui.QLabel(self.design_crit_sidebar_3)
        self.design_crit_sidebar_img_3.setMinimumSize(QtCore.QSize(0, 145))
        self.design_crit_sidebar_img_3.setText(_fromUtf8(""))
        self.design_crit_sidebar_img_3.setPixmap(QtGui.QPixmap(_fromUtf8(":/techplacement/D4Wrecycle.png")))
        self.design_crit_sidebar_img_3.setObjectName(_fromUtf8("design_crit_sidebar_img_3"))
        self.verticalLayout_10.addWidget(self.design_crit_sidebar_img_3)
        self.design_crit_sidebar_descr_3 = QtGui.QTextBrowser(self.design_crit_sidebar_3)
        self.design_crit_sidebar_descr_3.setObjectName(_fromUtf8("design_crit_sidebar_descr_3"))
        self.verticalLayout_10.addWidget(self.design_crit_sidebar_descr_3)
        self.horizontalLayout_21.addWidget(self.design_crit_sidebar_3)
        self.techplace_input.addTab(self.tab, _fromUtf8(""))
        self.ChooseTech = QtGui.QWidget()
        self.ChooseTech.setObjectName(_fromUtf8("ChooseTech"))
        self.horizontalLayout_13 = QtGui.QHBoxLayout(self.ChooseTech)
        self.horizontalLayout_13.setObjectName(_fromUtf8("horizontalLayout_13"))
        self.choice_frame = QtGui.QWidget(self.ChooseTech)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.choice_frame.sizePolicy().hasHeightForWidth())
        self.choice_frame.setSizePolicy(sizePolicy)
        self.choice_frame.setMinimumSize(QtCore.QSize(501, 433))
        self.choice_frame.setMaximumSize(QtCore.QSize(501, 16777215))
        self.choice_frame.setObjectName(_fromUtf8("choice_frame"))
        self.horizontalLayout_2 = QtGui.QHBoxLayout(self.choice_frame)
        self.horizontalLayout_2.setMargin(0)
        self.horizontalLayout_2.setObjectName(_fromUtf8("horizontalLayout_2"))
        self.techselect_scroll = QtGui.QScrollArea(self.choice_frame)
        self.techselect_scroll.setMinimumSize(QtCore.QSize(0, 415))
        self.techselect_scroll.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.techselect_scroll.setWidgetResizable(True)
        self.techselect_scroll.setObjectName(_fromUtf8("techselect_scroll"))
        self.scrollAreaWidgetContents = QtGui.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 464, 415))
        self.scrollAreaWidgetContents.setObjectName(_fromUtf8("scrollAreaWidgetContents"))
        self.horizontalLayout_12 = QtGui.QHBoxLayout(self.scrollAreaWidgetContents)
        self.horizontalLayout_12.setObjectName(_fromUtf8("horizontalLayout_12"))
        self.techselect_group = QtGui.QWidget(self.scrollAreaWidgetContents)
        self.techselect_group.setMinimumSize(QtCore.QSize(0, 0))
        self.techselect_group.setObjectName(_fromUtf8("techselect_group"))
        self.TPSstatus_box = QtGui.QCheckBox(self.techselect_group)
        self.TPSstatus_box.setEnabled(False)
        self.TPSstatus_box.setGeometry(QtCore.QRect(30, 235, 171, 17))
        self.TPSstatus_box.setObjectName(_fromUtf8("TPSstatus_box"))
        self.WSURstatus_box = QtGui.QCheckBox(self.techselect_group)
        self.WSURstatus_box.setGeometry(QtCore.QRect(30, 175, 161, 17))
        self.WSURstatus_box.setObjectName(_fromUtf8("WSURstatus_box"))
        self.WSUBstatus_box = QtGui.QCheckBox(self.techselect_group)
        self.WSUBstatus_box.setEnabled(False)
        self.WSUBstatus_box.setGeometry(QtCore.QRect(30, 195, 171, 17))
        self.WSUBstatus_box.setObjectName(_fromUtf8("WSUBstatus_box"))
        self.PBstatus_box = QtGui.QCheckBox(self.techselect_group)
        self.PBstatus_box.setGeometry(QtCore.QRect(30, 155, 161, 17))
        self.PBstatus_box.setObjectName(_fromUtf8("PBstatus_box"))
        self.GRstatus_box = QtGui.QCheckBox(self.techselect_group)
        self.GRstatus_box.setEnabled(False)
        self.GRstatus_box.setGeometry(QtCore.QRect(30, 115, 181, 17))
        self.GRstatus_box.setObjectName(_fromUtf8("GRstatus_box"))
        self.ISstatus_box = QtGui.QCheckBox(self.techselect_group)
        self.ISstatus_box.setGeometry(QtCore.QRect(30, 135, 171, 17))
        self.ISstatus_box.setObjectName(_fromUtf8("ISstatus_box"))
        self.label_2 = QtGui.QLabel(self.techselect_group)
        self.label_2.setGeometry(QtCore.QRect(20, 55, 121, 16))
        self.label_2.setObjectName(_fromUtf8("label_2"))
        self.SWstatus_box = QtGui.QCheckBox(self.techselect_group)
        self.SWstatus_box.setGeometry(QtCore.QRect(30, 215, 151, 17))
        self.SWstatus_box.setObjectName(_fromUtf8("SWstatus_box"))
        self.BFstatus_box = QtGui.QCheckBox(self.techselect_group)
        self.BFstatus_box.setGeometry(QtCore.QRect(30, 95, 181, 17))
        self.BFstatus_box.setObjectName(_fromUtf8("BFstatus_box"))
        self.AQstatus_box = QtGui.QCheckBox(self.techselect_group)
        self.AQstatus_box.setEnabled(False)
        self.AQstatus_box.setGeometry(QtCore.QRect(30, 75, 161, 17))
        self.AQstatus_box.setObjectName(_fromUtf8("AQstatus_box"))
        self.instructions_lbl = QtGui.QLabel(self.techselect_group)
        self.instructions_lbl.setGeometry(QtCore.QRect(10, 10, 421, 20))
        self.instructions_lbl.setObjectName(_fromUtf8("instructions_lbl"))
        self.WWRRstatus_box = QtGui.QCheckBox(self.techselect_group)
        self.WWRRstatus_box.setEnabled(False)
        self.WWRRstatus_box.setGeometry(QtCore.QRect(230, 195, 211, 17))
        self.WWRRstatus_box.setObjectName(_fromUtf8("WWRRstatus_box"))
        self.GPTstatus_box = QtGui.QCheckBox(self.techselect_group)
        self.GPTstatus_box.setEnabled(False)
        self.GPTstatus_box.setGeometry(QtCore.QRect(230, 115, 211, 17))
        self.GPTstatus_box.setObjectName(_fromUtf8("GPTstatus_box"))
        self.label_4 = QtGui.QLabel(self.techselect_group)
        self.label_4.setGeometry(QtCore.QRect(220, 55, 121, 16))
        self.label_4.setObjectName(_fromUtf8("label_4"))
        self.ASHPstatus_box = QtGui.QCheckBox(self.techselect_group)
        self.ASHPstatus_box.setEnabled(False)
        self.ASHPstatus_box.setGeometry(QtCore.QRect(230, 75, 211, 17))
        self.ASHPstatus_box.setObjectName(_fromUtf8("ASHPstatus_box"))
        self.PPstatus_box = QtGui.QCheckBox(self.techselect_group)
        self.PPstatus_box.setEnabled(False)
        self.PPstatus_box.setGeometry(QtCore.QRect(230, 155, 211, 17))
        self.PPstatus_box.setObjectName(_fromUtf8("PPstatus_box"))
        self.ASRstatus_box = QtGui.QCheckBox(self.techselect_group)
        self.ASRstatus_box.setEnabled(False)
        self.ASRstatus_box.setGeometry(QtCore.QRect(230, 95, 211, 17))
        self.ASRstatus_box.setObjectName(_fromUtf8("ASRstatus_box"))
        self.SFstatus_box = QtGui.QCheckBox(self.techselect_group)
        self.SFstatus_box.setEnabled(False)
        self.SFstatus_box.setGeometry(QtCore.QRect(230, 175, 211, 17))
        self.SFstatus_box.setObjectName(_fromUtf8("SFstatus_box"))
        self.PPLstatus_box = QtGui.QCheckBox(self.techselect_group)
        self.PPLstatus_box.setEnabled(False)
        self.PPLstatus_box.setGeometry(QtCore.QRect(230, 135, 211, 17))
        self.PPLstatus_box.setObjectName(_fromUtf8("PPLstatus_box"))
        self.label_6 = QtGui.QLabel(self.techselect_group)
        self.label_6.setGeometry(QtCore.QRect(20, 270, 171, 16))
        self.label_6.setObjectName(_fromUtf8("label_6"))
        self.IRRstatus_box = QtGui.QCheckBox(self.techselect_group)
        self.IRRstatus_box.setEnabled(False)
        self.IRRstatus_box.setGeometry(QtCore.QRect(30, 290, 211, 17))
        self.IRRstatus_box.setObjectName(_fromUtf8("IRRstatus_box"))
        self.UTstatus_box = QtGui.QCheckBox(self.techselect_group)
        self.UTstatus_box.setEnabled(False)
        self.UTstatus_box.setGeometry(QtCore.QRect(30, 310, 211, 17))
        self.UTstatus_box.setObjectName(_fromUtf8("UTstatus_box"))
        self.WTstatus_box = QtGui.QCheckBox(self.techselect_group)
        self.WTstatus_box.setEnabled(False)
        self.WTstatus_box.setGeometry(QtCore.QRect(30, 330, 211, 17))
        self.WTstatus_box.setObjectName(_fromUtf8("WTstatus_box"))
        self.RTstatus_box = QtGui.QCheckBox(self.techselect_group)
        self.RTstatus_box.setEnabled(True)
        self.RTstatus_box.setGeometry(QtCore.QRect(230, 310, 171, 17))
        self.RTstatus_box.setObjectName(_fromUtf8("RTstatus_box"))
        self.GTstatus_box = QtGui.QCheckBox(self.techselect_group)
        self.GTstatus_box.setEnabled(False)
        self.GTstatus_box.setGeometry(QtCore.QRect(230, 290, 181, 17))
        self.GTstatus_box.setObjectName(_fromUtf8("GTstatus_box"))
        self.label_3 = QtGui.QLabel(self.techselect_group)
        self.label_3.setGeometry(QtCore.QRect(220, 270, 121, 16))
        self.label_3.setObjectName(_fromUtf8("label_3"))
        self.instructions_lbl_2 = QtGui.QLabel(self.techselect_group)
        self.instructions_lbl_2.setGeometry(QtCore.QRect(10, 25, 421, 20))
        self.instructions_lbl_2.setObjectName(_fromUtf8("instructions_lbl_2"))
        self.horizontalLayout_12.addWidget(self.techselect_group)
        self.techselect_scroll.setWidget(self.scrollAreaWidgetContents)
        self.horizontalLayout_2.addWidget(self.techselect_scroll)
        self.horizontalLayout_13.addWidget(self.choice_frame)
        self.choice_sidebar = QtGui.QWidget(self.ChooseTech)
        self.choice_sidebar.setMinimumSize(QtCore.QSize(221, 0))
        self.choice_sidebar.setMaximumSize(QtCore.QSize(221, 16777215))
        self.choice_sidebar.setObjectName(_fromUtf8("choice_sidebar"))
        self.verticalLayout_2 = QtGui.QVBoxLayout(self.choice_sidebar)
        self.verticalLayout_2.setMargin(0)
        self.verticalLayout_2.setObjectName(_fromUtf8("verticalLayout_2"))
        self.choicesb_img = QtGui.QLabel(self.choice_sidebar)
        self.choicesb_img.setText(_fromUtf8(""))
        self.choicesb_img.setPixmap(QtGui.QPixmap(_fromUtf8(":/techplacement/Wsud.png")))
        self.choicesb_img.setObjectName(_fromUtf8("choicesb_img"))
        self.verticalLayout_2.addWidget(self.choicesb_img)
        self.choicesb_lbl = QtGui.QTextBrowser(self.choice_sidebar)
        self.choicesb_lbl.setObjectName(_fromUtf8("choicesb_lbl"))
        self.verticalLayout_2.addWidget(self.choicesb_lbl)
        self.horizontalLayout_13.addWidget(self.choice_sidebar)
        self.techplace_input.addTab(self.ChooseTech, _fromUtf8(""))
        self.CustomizeTech = QtGui.QWidget()
        self.CustomizeTech.setObjectName(_fromUtf8("CustomizeTech"))
        self.gridLayout_23 = QtGui.QGridLayout(self.CustomizeTech)
        self.gridLayout_23.setObjectName(_fromUtf8("gridLayout_23"))
        self.techlist_widget = QtGui.QListWidget(self.CustomizeTech)
        self.techlist_widget.setEnabled(True)
        self.techlist_widget.setMinimumSize(QtCore.QSize(231, 0))
        self.techlist_widget.setMaximumSize(QtCore.QSize(231, 16777215))
        self.techlist_widget.setObjectName(_fromUtf8("techlist_widget"))
        item = QtGui.QListWidgetItem()
        self.techlist_widget.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setFlags(QtCore.Qt.ItemIsDragEnabled|QtCore.Qt.ItemIsUserCheckable|QtCore.Qt.ItemIsEnabled)
        self.techlist_widget.addItem(item)
        item = QtGui.QListWidgetItem()
        self.techlist_widget.addItem(item)
        item = QtGui.QListWidgetItem()
        self.techlist_widget.addItem(item)
        item = QtGui.QListWidgetItem()
        self.techlist_widget.addItem(item)
        item = QtGui.QListWidgetItem()
        self.techlist_widget.addItem(item)
        item = QtGui.QListWidgetItem()
        self.techlist_widget.addItem(item)
        item = QtGui.QListWidgetItem()
        self.techlist_widget.addItem(item)
        item = QtGui.QListWidgetItem()
        self.techlist_widget.addItem(item)
        item = QtGui.QListWidgetItem()
        self.techlist_widget.addItem(item)
        item = QtGui.QListWidgetItem()
        self.techlist_widget.addItem(item)
        item = QtGui.QListWidgetItem()
        self.techlist_widget.addItem(item)
        item = QtGui.QListWidgetItem()
        self.techlist_widget.addItem(item)
        item = QtGui.QListWidgetItem()
        self.techlist_widget.addItem(item)
        item = QtGui.QListWidgetItem()
        self.techlist_widget.addItem(item)
        item = QtGui.QListWidgetItem()
        self.techlist_widget.addItem(item)
        item = QtGui.QListWidgetItem()
        self.techlist_widget.addItem(item)
        item = QtGui.QListWidgetItem()
        self.techlist_widget.addItem(item)
        item = QtGui.QListWidgetItem()
        self.techlist_widget.addItem(item)
        item = QtGui.QListWidgetItem()
        self.techlist_widget.addItem(item)
        item = QtGui.QListWidgetItem()
        self.techlist_widget.addItem(item)
        item = QtGui.QListWidgetItem()
        self.techlist_widget.addItem(item)
        self.gridLayout_23.addWidget(self.techlist_widget, 0, 0, 1, 1)
        self.techlist_stack = QtGui.QStackedWidget(self.CustomizeTech)
        self.techlist_stack.setObjectName(_fromUtf8("techlist_stack"))
        self.page = QtGui.QWidget()
        self.page.setObjectName(_fromUtf8("page"))
        self.horizontalLayout_3 = QtGui.QHBoxLayout(self.page)
        self.horizontalLayout_3.setObjectName(_fromUtf8("horizontalLayout_3"))
        self.ASHP_inputgroup = QtGui.QGroupBox(self.page)
        self.ASHP_inputgroup.setObjectName(_fromUtf8("ASHP_inputgroup"))
        self.sorry_page1_3 = QtGui.QLabel(self.ASHP_inputgroup)
        self.sorry_page1_3.setGeometry(QtCore.QRect(30, 50, 281, 16))
        self.sorry_page1_3.setObjectName(_fromUtf8("sorry_page1_3"))
        self.aquacult_img_2 = QtGui.QLabel(self.ASHP_inputgroup)
        self.aquacult_img_2.setGeometry(QtCore.QRect(360, 10, 101, 141))
        self.aquacult_img_2.setText(_fromUtf8(""))
        self.aquacult_img_2.setPixmap(QtGui.QPixmap(_fromUtf8("../../tech_aquaculture.png")))
        self.aquacult_img_2.setObjectName(_fromUtf8("aquacult_img_2"))
        self.horizontalLayout_3.addWidget(self.ASHP_inputgroup)
        self.techlist_stack.addWidget(self.page)
        self.page_1 = QtGui.QWidget()
        self.page_1.setObjectName(_fromUtf8("page_1"))
        self.gridLayout = QtGui.QGridLayout(self.page_1)
        self.gridLayout.setObjectName(_fromUtf8("gridLayout"))
        self.AQ_inputgroup = QtGui.QGroupBox(self.page_1)
        self.AQ_inputgroup.setObjectName(_fromUtf8("AQ_inputgroup"))
        self.sorry_page1 = QtGui.QLabel(self.AQ_inputgroup)
        self.sorry_page1.setGeometry(QtCore.QRect(30, 50, 281, 16))
        self.sorry_page1.setObjectName(_fromUtf8("sorry_page1"))
        self.aquacult_img = QtGui.QLabel(self.AQ_inputgroup)
        self.aquacult_img.setGeometry(QtCore.QRect(360, 10, 101, 141))
        self.aquacult_img.setText(_fromUtf8(""))
        self.aquacult_img.setPixmap(QtGui.QPixmap(_fromUtf8(":/techplacement/tech_aquaculture.png")))
        self.aquacult_img.setObjectName(_fromUtf8("aquacult_img"))
        self.gridLayout.addWidget(self.AQ_inputgroup, 0, 0, 1, 1)
        self.techlist_stack.addWidget(self.page_1)
        self.page_2 = QtGui.QWidget()
        self.page_2.setObjectName(_fromUtf8("page_2"))
        self.gridLayout_2 = QtGui.QGridLayout(self.page_2)
        self.gridLayout_2.setObjectName(_fromUtf8("gridLayout_2"))
        self.ASR_inputgroup = QtGui.QGroupBox(self.page_2)
        self.ASR_inputgroup.setObjectName(_fromUtf8("ASR_inputgroup"))
        self.sorry_page2 = QtGui.QLabel(self.ASR_inputgroup)
        self.sorry_page2.setGeometry(QtCore.QRect(30, 50, 281, 16))
        self.sorry_page2.setObjectName(_fromUtf8("sorry_page2"))
        self.asr_img = QtGui.QLabel(self.ASR_inputgroup)
        self.asr_img.setGeometry(QtCore.QRect(360, 10, 101, 141))
        self.asr_img.setText(_fromUtf8(""))
        self.asr_img.setPixmap(QtGui.QPixmap(_fromUtf8(":/techplacement/tech_asr.png")))
        self.asr_img.setObjectName(_fromUtf8("asr_img"))
        self.gridLayout_2.addWidget(self.ASR_inputgroup, 0, 0, 1, 1)
        self.techlist_stack.addWidget(self.page_2)
        self.page_3 = QtGui.QWidget()
        self.page_3.setObjectName(_fromUtf8("page_3"))
        self.horizontalLayout_7 = QtGui.QHBoxLayout(self.page_3)
        self.horizontalLayout_7.setObjectName(_fromUtf8("horizontalLayout_7"))
        self.BF_inputgroup = QtGui.QGroupBox(self.page_3)
        self.BF_inputgroup.setObjectName(_fromUtf8("BF_inputgroup"))
        self.BFlot_check = QtGui.QCheckBox(self.BF_inputgroup)
        self.BFlot_check.setGeometry(QtCore.QRect(40, 40, 70, 17))
        self.BFlot_check.setObjectName(_fromUtf8("BFlot_check"))
        self.BFprec_check = QtGui.QCheckBox(self.BF_inputgroup)
        self.BFprec_check.setEnabled(True)
        self.BFprec_check.setGeometry(QtCore.QRect(40, 100, 101, 17))
        self.BFprec_check.setObjectName(_fromUtf8("BFprec_check"))
        self.BFflow_check = QtGui.QCheckBox(self.BF_inputgroup)
        self.BFflow_check.setEnabled(True)
        self.BFflow_check.setGeometry(QtCore.QRect(170, 40, 121, 17))
        self.BFflow_check.setObjectName(_fromUtf8("BFflow_check"))
        self.BFapps_lbl = QtGui.QLabel(self.BF_inputgroup)
        self.BFapps_lbl.setGeometry(QtCore.QRect(160, 20, 141, 16))
        self.BFapps_lbl.setObjectName(_fromUtf8("BFapps_lbl"))
        self.BFpollute_check = QtGui.QCheckBox(self.BF_inputgroup)
        self.BFpollute_check.setGeometry(QtCore.QRect(170, 60, 121, 17))
        self.BFpollute_check.setObjectName(_fromUtf8("BFpollute_check"))
        self.biofilter_img = QtGui.QLabel(self.BF_inputgroup)
        self.biofilter_img.setGeometry(QtCore.QRect(360, 10, 101, 141))
        self.biofilter_img.setText(_fromUtf8(""))
        self.biofilter_img.setPixmap(QtGui.QPixmap(_fromUtf8(":/techplacement/tech_biofilter.png")))
        self.biofilter_img.setObjectName(_fromUtf8("biofilter_img"))
        self.BFscales_lbl = QtGui.QLabel(self.BF_inputgroup)
        self.BFscales_lbl.setGeometry(QtCore.QRect(20, 20, 101, 16))
        self.BFscales_lbl.setObjectName(_fromUtf8("BFscales_lbl"))
        self.BFneigh_check = QtGui.QCheckBox(self.BF_inputgroup)
        self.BFneigh_check.setGeometry(QtCore.QRect(40, 80, 101, 17))
        self.BFneigh_check.setObjectName(_fromUtf8("BFneigh_check"))
        self.BFstreet_check = QtGui.QCheckBox(self.BF_inputgroup)
        self.BFstreet_check.setGeometry(QtCore.QRect(40, 60, 70, 17))
        self.BFstreet_check.setObjectName(_fromUtf8("BFstreet_check"))
        self.BFdesigncurve_pathbox = QtGui.QLineEdit(self.BF_inputgroup)
        self.BFdesigncurve_pathbox.setGeometry(QtCore.QRect(202, 175, 181, 20))
        self.BFdesigncurve_pathbox.setObjectName(_fromUtf8("BFdesigncurve_pathbox"))
        self.BFdesignUB_box = QtGui.QCheckBox(self.BF_inputgroup)
        self.BFdesignUB_box.setGeometry(QtCore.QRect(200, 205, 241, 17))
        self.BFdesignUB_box.setObjectName(_fromUtf8("BFdesignUB_box"))
        self.BFdesigncurve_browse = QtGui.QToolButton(self.BF_inputgroup)
        self.BFdesigncurve_browse.setEnabled(True)
        self.BFdesigncurve_browse.setGeometry(QtCore.QRect(390, 175, 61, 19))
        self.BFdesigncurve_browse.setObjectName(_fromUtf8("BFdesigncurve_browse"))
        self.BFdesigncurve_lbl = QtGui.QLabel(self.BF_inputgroup)
        self.BFdesigncurve_lbl.setGeometry(QtCore.QRect(20, 175, 161, 16))
        self.BFdesigncurve_lbl.setObjectName(_fromUtf8("BFdesigncurve_lbl"))
        self.BFdesigncurve_lbl2 = QtGui.QLabel(self.BF_inputgroup)
        self.BFdesigncurve_lbl2.setGeometry(QtCore.QRect(160, 195, 21, 20))
        self.BFdesigncurve_lbl2.setObjectName(_fromUtf8("BFdesigncurve_lbl2"))
        self.BFdesigninfo_lbl = QtGui.QLabel(self.BF_inputgroup)
        self.BFdesigninfo_lbl.setGeometry(QtCore.QRect(20, 220, 161, 16))
        self.BFdesigninfo_lbl.setObjectName(_fromUtf8("BFdesigninfo_lbl"))
        self.BFspecs_FD_combo = QtGui.QComboBox(self.BF_inputgroup)
        self.BFspecs_FD_combo.setGeometry(QtCore.QRect(190, 145, 121, 16))
        self.BFspecs_FD_combo.setObjectName(_fromUtf8("BFspecs_FD_combo"))
        self.BFspecs_FD_combo.addItem(_fromUtf8(""))
        self.BFspecs_FD_combo.addItem(_fromUtf8(""))
        self.BFspecs_FD_combo.addItem(_fromUtf8(""))
        self.BFspecs_FD_combo.addItem(_fromUtf8(""))
        self.BFspecs_lbl = QtGui.QLabel(self.BF_inputgroup)
        self.BFspecs_lbl.setGeometry(QtCore.QRect(20, 125, 161, 16))
        self.BFspecs_lbl.setObjectName(_fromUtf8("BFspecs_lbl"))
        self.BFmaxsize_lbl = QtGui.QLabel(self.BF_inputgroup)
        self.BFmaxsize_lbl.setGeometry(QtCore.QRect(30, 275, 171, 16))
        self.BFmaxsize_lbl.setObjectName(_fromUtf8("BFmaxsize_lbl"))
        self.BFmaxsize_box = QtGui.QLineEdit(self.BF_inputgroup)
        self.BFmaxsize_box.setGeometry(QtCore.QRect(200, 275, 51, 20))
        self.BFmaxsize_box.setObjectName(_fromUtf8("BFmaxsize_box"))
        self.BFspecs_EDD_combo = QtGui.QComboBox(self.BF_inputgroup)
        self.BFspecs_EDD_combo.setGeometry(QtCore.QRect(40, 145, 121, 16))
        self.BFspecs_EDD_combo.setObjectName(_fromUtf8("BFspecs_EDD_combo"))
        self.BFspecs_EDD_combo.addItem(_fromUtf8(""))
        self.BFspecs_EDD_combo.addItem(_fromUtf8(""))
        self.BFspecs_EDD_combo.addItem(_fromUtf8(""))
        self.BFspecs_EDD_combo.addItem(_fromUtf8(""))
        self.BFspecs_EDD_combo.addItem(_fromUtf8(""))
        self.BFspecs_lbl_2 = QtGui.QLabel(self.BF_inputgroup)
        self.BFspecs_lbl_2.setGeometry(QtCore.QRect(175, 142, 21, 20))
        self.BFspecs_lbl_2.setObjectName(_fromUtf8("BFspecs_lbl_2"))
        self.BFavglifespin = QtGui.QSpinBox(self.BF_inputgroup)
        self.BFavglifespin.setGeometry(QtCore.QRect(200, 305, 61, 16))
        self.BFavglifespin.setMinimum(5)
        self.BFavglifespin.setMaximum(100)
        self.BFavglifespin.setSingleStep(5)
        self.BFavglifespin.setProperty("value", 100)
        self.BFavglifespin.setObjectName(_fromUtf8("BFavglifespin"))
        self.BFavglifelbl = QtGui.QLabel(self.BF_inputgroup)
        self.BFavglifelbl.setGeometry(QtCore.QRect(30, 305, 171, 16))
        self.BFavglifelbl.setObjectName(_fromUtf8("BFavglifelbl"))
        self.BFminsize_box = QtGui.QLineEdit(self.BF_inputgroup)
        self.BFminsize_box.setGeometry(QtCore.QRect(200, 245, 51, 20))
        self.BFminsize_box.setObjectName(_fromUtf8("BFminsize_box"))
        self.BFminsize_lbl = QtGui.QLabel(self.BF_inputgroup)
        self.BFminsize_lbl.setGeometry(QtCore.QRect(30, 245, 171, 16))
        self.BFminsize_lbl.setObjectName(_fromUtf8("BFminsize_lbl"))
        self.BFrecycle_check = QtGui.QCheckBox(self.BF_inputgroup)
        self.BFrecycle_check.setEnabled(True)
        self.BFrecycle_check.setGeometry(QtCore.QRect(170, 80, 101, 17))
        self.BFrecycle_check.setObjectName(_fromUtf8("BFrecycle_check"))
        self.BFexfil_combo = QtGui.QComboBox(self.BF_inputgroup)
        self.BFexfil_combo.setGeometry(QtCore.QRect(360, 246, 101, 20))
        self.BFexfil_combo.setObjectName(_fromUtf8("BFexfil_combo"))
        self.BFexfil_combo.addItem(_fromUtf8(""))
        self.BFexfil_combo.addItem(_fromUtf8(""))
        self.BFexfil_combo.addItem(_fromUtf8(""))
        self.BFexfil_combo.addItem(_fromUtf8(""))
        self.BFexfil_combo.addItem(_fromUtf8(""))
        self.BFexfil_lbl = QtGui.QLabel(self.BF_inputgroup)
        self.BFexfil_lbl.setGeometry(QtCore.QRect(270, 245, 91, 16))
        self.BFexfil_lbl.setObjectName(_fromUtf8("BFexfil_lbl"))
        self.horizontalLayout_7.addWidget(self.BF_inputgroup)
        self.techlist_stack.addWidget(self.page_3)
        self.page_4 = QtGui.QWidget()
        self.page_4.setObjectName(_fromUtf8("page_4"))
        self.gridLayout_4 = QtGui.QGridLayout(self.page_4)
        self.gridLayout_4.setObjectName(_fromUtf8("gridLayout_4"))
        self.GR_inputgroup = QtGui.QGroupBox(self.page_4)
        self.GR_inputgroup.setObjectName(_fromUtf8("GR_inputgroup"))
        self.label_22 = QtGui.QLabel(self.GR_inputgroup)
        self.label_22.setGeometry(QtCore.QRect(30, 50, 281, 16))
        self.label_22.setObjectName(_fromUtf8("label_22"))
        self.label_66 = QtGui.QLabel(self.GR_inputgroup)
        self.label_66.setGeometry(QtCore.QRect(360, 10, 101, 141))
        self.label_66.setText(_fromUtf8(""))
        self.label_66.setPixmap(QtGui.QPixmap(_fromUtf8(":/techplacement/tech_greenroof.png")))
        self.label_66.setObjectName(_fromUtf8("label_66"))
        self.gridLayout_4.addWidget(self.GR_inputgroup, 0, 0, 1, 1)
        self.techlist_stack.addWidget(self.page_4)
        self.page_5 = QtGui.QWidget()
        self.page_5.setObjectName(_fromUtf8("page_5"))
        self.gridLayout_5 = QtGui.QGridLayout(self.page_5)
        self.gridLayout_5.setObjectName(_fromUtf8("gridLayout_5"))
        self.GT_inputgroup = QtGui.QGroupBox(self.page_5)
        self.GT_inputgroup.setObjectName(_fromUtf8("GT_inputgroup"))
        self.checkBox_90 = QtGui.QCheckBox(self.GT_inputgroup)
        self.checkBox_90.setEnabled(False)
        self.checkBox_90.setGeometry(QtCore.QRect(180, 80, 101, 17))
        self.checkBox_90.setObjectName(_fromUtf8("checkBox_90"))
        self.checkBox_91 = QtGui.QCheckBox(self.GT_inputgroup)
        self.checkBox_91.setEnabled(False)
        self.checkBox_91.setGeometry(QtCore.QRect(50, 40, 70, 17))
        self.checkBox_91.setObjectName(_fromUtf8("checkBox_91"))
        self.checkBox_92 = QtGui.QCheckBox(self.GT_inputgroup)
        self.checkBox_92.setEnabled(False)
        self.checkBox_92.setGeometry(QtCore.QRect(50, 100, 101, 17))
        self.checkBox_92.setObjectName(_fromUtf8("checkBox_92"))
        self.checkBox_93 = QtGui.QCheckBox(self.GT_inputgroup)
        self.checkBox_93.setEnabled(False)
        self.checkBox_93.setGeometry(QtCore.QRect(180, 40, 121, 17))
        self.checkBox_93.setObjectName(_fromUtf8("checkBox_93"))
        self.label_55 = QtGui.QLabel(self.GT_inputgroup)
        self.label_55.setGeometry(QtCore.QRect(170, 20, 141, 16))
        self.label_55.setObjectName(_fromUtf8("label_55"))
        self.checkBox_94 = QtGui.QCheckBox(self.GT_inputgroup)
        self.checkBox_94.setEnabled(False)
        self.checkBox_94.setGeometry(QtCore.QRect(180, 60, 111, 17))
        self.checkBox_94.setObjectName(_fromUtf8("checkBox_94"))
        self.label_56 = QtGui.QLabel(self.GT_inputgroup)
        self.label_56.setGeometry(QtCore.QRect(360, 10, 101, 141))
        self.label_56.setText(_fromUtf8(""))
        self.label_56.setPixmap(QtGui.QPixmap(_fromUtf8(":/techplacement/tech_greywater.png")))
        self.label_56.setObjectName(_fromUtf8("label_56"))
        self.label_57 = QtGui.QLabel(self.GT_inputgroup)
        self.label_57.setGeometry(QtCore.QRect(30, 20, 101, 16))
        self.label_57.setObjectName(_fromUtf8("label_57"))
        self.checkBox_95 = QtGui.QCheckBox(self.GT_inputgroup)
        self.checkBox_95.setEnabled(False)
        self.checkBox_95.setGeometry(QtCore.QRect(50, 80, 101, 17))
        self.checkBox_95.setObjectName(_fromUtf8("checkBox_95"))
        self.checkBox_96 = QtGui.QCheckBox(self.GT_inputgroup)
        self.checkBox_96.setEnabled(False)
        self.checkBox_96.setGeometry(QtCore.QRect(50, 60, 70, 17))
        self.checkBox_96.setObjectName(_fromUtf8("checkBox_96"))
        self.gridLayout_5.addWidget(self.GT_inputgroup, 0, 0, 1, 1)
        self.techlist_stack.addWidget(self.page_5)
        self.page_6 = QtGui.QWidget()
        self.page_6.setObjectName(_fromUtf8("page_6"))
        self.gridLayout_6 = QtGui.QGridLayout(self.page_6)
        self.gridLayout_6.setObjectName(_fromUtf8("gridLayout_6"))
        self.GPT_inputgroup = QtGui.QGroupBox(self.page_6)
        self.GPT_inputgroup.setObjectName(_fromUtf8("GPT_inputgroup"))
        self.checkBox_98 = QtGui.QCheckBox(self.GPT_inputgroup)
        self.checkBox_98.setEnabled(False)
        self.checkBox_98.setGeometry(QtCore.QRect(180, 80, 101, 17))
        self.checkBox_98.setObjectName(_fromUtf8("checkBox_98"))
        self.checkBox_99 = QtGui.QCheckBox(self.GPT_inputgroup)
        self.checkBox_99.setEnabled(False)
        self.checkBox_99.setGeometry(QtCore.QRect(50, 40, 70, 17))
        self.checkBox_99.setObjectName(_fromUtf8("checkBox_99"))
        self.checkBox_100 = QtGui.QCheckBox(self.GPT_inputgroup)
        self.checkBox_100.setEnabled(False)
        self.checkBox_100.setGeometry(QtCore.QRect(50, 100, 101, 17))
        self.checkBox_100.setObjectName(_fromUtf8("checkBox_100"))
        self.checkBox_101 = QtGui.QCheckBox(self.GPT_inputgroup)
        self.checkBox_101.setEnabled(False)
        self.checkBox_101.setGeometry(QtCore.QRect(180, 40, 121, 17))
        self.checkBox_101.setObjectName(_fromUtf8("checkBox_101"))
        self.label_58 = QtGui.QLabel(self.GPT_inputgroup)
        self.label_58.setGeometry(QtCore.QRect(170, 20, 141, 16))
        self.label_58.setObjectName(_fromUtf8("label_58"))
        self.checkBox_102 = QtGui.QCheckBox(self.GPT_inputgroup)
        self.checkBox_102.setEnabled(False)
        self.checkBox_102.setGeometry(QtCore.QRect(180, 60, 111, 17))
        self.checkBox_102.setObjectName(_fromUtf8("checkBox_102"))
        self.label_59 = QtGui.QLabel(self.GPT_inputgroup)
        self.label_59.setGeometry(QtCore.QRect(360, 10, 101, 141))
        self.label_59.setText(_fromUtf8(""))
        self.label_59.setPixmap(QtGui.QPixmap(_fromUtf8(":/techplacement/tech_gpt.png")))
        self.label_59.setObjectName(_fromUtf8("label_59"))
        self.label_60 = QtGui.QLabel(self.GPT_inputgroup)
        self.label_60.setGeometry(QtCore.QRect(30, 20, 101, 16))
        self.label_60.setObjectName(_fromUtf8("label_60"))
        self.checkBox_103 = QtGui.QCheckBox(self.GPT_inputgroup)
        self.checkBox_103.setEnabled(False)
        self.checkBox_103.setGeometry(QtCore.QRect(50, 80, 101, 17))
        self.checkBox_103.setObjectName(_fromUtf8("checkBox_103"))
        self.checkBox_104 = QtGui.QCheckBox(self.GPT_inputgroup)
        self.checkBox_104.setEnabled(False)
        self.checkBox_104.setGeometry(QtCore.QRect(50, 60, 70, 17))
        self.checkBox_104.setObjectName(_fromUtf8("checkBox_104"))
        self.gridLayout_6.addWidget(self.GPT_inputgroup, 0, 0, 1, 1)
        self.techlist_stack.addWidget(self.page_6)
        self.page_7 = QtGui.QWidget()
        self.page_7.setObjectName(_fromUtf8("page_7"))
        self.horizontalLayout_11 = QtGui.QHBoxLayout(self.page_7)
        self.horizontalLayout_11.setObjectName(_fromUtf8("horizontalLayout_11"))
        self.IS_inputgroup = QtGui.QGroupBox(self.page_7)
        self.IS_inputgroup.setObjectName(_fromUtf8("IS_inputgroup"))
        self.ISlot_check = QtGui.QCheckBox(self.IS_inputgroup)
        self.ISlot_check.setGeometry(QtCore.QRect(40, 40, 70, 17))
        self.ISlot_check.setObjectName(_fromUtf8("ISlot_check"))
        self.ISstreet_check = QtGui.QCheckBox(self.IS_inputgroup)
        self.ISstreet_check.setGeometry(QtCore.QRect(40, 60, 70, 17))
        self.ISstreet_check.setObjectName(_fromUtf8("ISstreet_check"))
        self.ISneigh_check = QtGui.QCheckBox(self.IS_inputgroup)
        self.ISneigh_check.setGeometry(QtCore.QRect(40, 80, 101, 17))
        self.ISneigh_check.setObjectName(_fromUtf8("ISneigh_check"))
        self.ISprec_check = QtGui.QCheckBox(self.IS_inputgroup)
        self.ISprec_check.setEnabled(True)
        self.ISprec_check.setGeometry(QtCore.QRect(40, 100, 101, 17))
        self.ISprec_check.setObjectName(_fromUtf8("ISprec_check"))
        self.ISdesigncurve_browse = QtGui.QToolButton(self.IS_inputgroup)
        self.ISdesigncurve_browse.setEnabled(True)
        self.ISdesigncurve_browse.setGeometry(QtCore.QRect(390, 175, 61, 19))
        self.ISdesigncurve_browse.setObjectName(_fromUtf8("ISdesigncurve_browse"))
        self.ISdesigncurve_lbl = QtGui.QLabel(self.IS_inputgroup)
        self.ISdesigncurve_lbl.setGeometry(QtCore.QRect(20, 175, 161, 16))
        self.ISdesigncurve_lbl.setObjectName(_fromUtf8("ISdesigncurve_lbl"))
        self.ISdesignUB_box = QtGui.QCheckBox(self.IS_inputgroup)
        self.ISdesignUB_box.setGeometry(QtCore.QRect(200, 205, 241, 17))
        self.ISdesignUB_box.setObjectName(_fromUtf8("ISdesignUB_box"))
        self.ISdesigncurve_pathbox = QtGui.QLineEdit(self.IS_inputgroup)
        self.ISdesigncurve_pathbox.setGeometry(QtCore.QRect(202, 175, 181, 20))
        self.ISdesigncurve_pathbox.setObjectName(_fromUtf8("ISdesigncurve_pathbox"))
        self.IS_img = QtGui.QLabel(self.IS_inputgroup)
        self.IS_img.setGeometry(QtCore.QRect(360, 10, 101, 141))
        self.IS_img.setText(_fromUtf8(""))
        self.IS_img.setPixmap(QtGui.QPixmap(_fromUtf8(":/techplacement/tech_infil.png")))
        self.IS_img.setObjectName(_fromUtf8("IS_img"))
        self.ISpollute_check = QtGui.QCheckBox(self.IS_inputgroup)
        self.ISpollute_check.setGeometry(QtCore.QRect(170, 60, 141, 17))
        self.ISpollute_check.setObjectName(_fromUtf8("ISpollute_check"))
        self.ISflow_check = QtGui.QCheckBox(self.IS_inputgroup)
        self.ISflow_check.setGeometry(QtCore.QRect(170, 40, 121, 17))
        self.ISflow_check.setObjectName(_fromUtf8("ISflow_check"))
        self.ISscales_lbl = QtGui.QLabel(self.IS_inputgroup)
        self.ISscales_lbl.setGeometry(QtCore.QRect(20, 20, 101, 16))
        self.ISscales_lbl.setObjectName(_fromUtf8("ISscales_lbl"))
        self.ISapps_lbl = QtGui.QLabel(self.IS_inputgroup)
        self.ISapps_lbl.setGeometry(QtCore.QRect(160, 20, 141, 16))
        self.ISapps_lbl.setObjectName(_fromUtf8("ISapps_lbl"))
        self.ISdesigncurve_lbl2 = QtGui.QLabel(self.IS_inputgroup)
        self.ISdesigncurve_lbl2.setGeometry(QtCore.QRect(160, 195, 21, 20))
        self.ISdesigncurve_lbl2.setObjectName(_fromUtf8("ISdesigncurve_lbl2"))
        self.ISmodel_lbl = QtGui.QLabel(self.IS_inputgroup)
        self.ISmodel_lbl.setGeometry(QtCore.QRect(20, 220, 101, 16))
        self.ISmodel_lbl.setObjectName(_fromUtf8("ISmodel_lbl"))
        self.ISmaxsize_lbl = QtGui.QLabel(self.IS_inputgroup)
        self.ISmaxsize_lbl.setGeometry(QtCore.QRect(30, 275, 191, 16))
        self.ISmaxsize_lbl.setObjectName(_fromUtf8("ISmaxsize_lbl"))
        self.ISspecs_lbl = QtGui.QLabel(self.IS_inputgroup)
        self.ISspecs_lbl.setGeometry(QtCore.QRect(20, 125, 161, 16))
        self.ISspecs_lbl.setObjectName(_fromUtf8("ISspecs_lbl"))
        self.ISmaxsize_box = QtGui.QLineEdit(self.IS_inputgroup)
        self.ISmaxsize_box.setGeometry(QtCore.QRect(200, 275, 51, 20))
        self.ISmaxsize_box.setObjectName(_fromUtf8("ISmaxsize_box"))
        self.ISspecs_EDD_combo = QtGui.QComboBox(self.IS_inputgroup)
        self.ISspecs_EDD_combo.setGeometry(QtCore.QRect(40, 145, 121, 16))
        self.ISspecs_EDD_combo.setObjectName(_fromUtf8("ISspecs_EDD_combo"))
        self.ISspecs_EDD_combo.addItem(_fromUtf8(""))
        self.ISspecs_EDD_combo.addItem(_fromUtf8(""))
        self.ISspecs_EDD_combo.addItem(_fromUtf8(""))
        self.ISspecs_EDD_combo.addItem(_fromUtf8(""))
        self.ISspecs_FD_combo = QtGui.QComboBox(self.IS_inputgroup)
        self.ISspecs_FD_combo.setGeometry(QtCore.QRect(190, 145, 121, 16))
        self.ISspecs_FD_combo.setObjectName(_fromUtf8("ISspecs_FD_combo"))
        self.ISspecs_FD_combo.addItem(_fromUtf8(""))
        self.ISspecs_FD_combo.addItem(_fromUtf8(""))
        self.ISspecs_FD_combo.addItem(_fromUtf8(""))
        self.ISspecs_FD_combo.addItem(_fromUtf8(""))
        self.ISspecs_lbl_2 = QtGui.QLabel(self.IS_inputgroup)
        self.ISspecs_lbl_2.setGeometry(QtCore.QRect(175, 142, 21, 20))
        self.ISspecs_lbl_2.setObjectName(_fromUtf8("ISspecs_lbl_2"))
        self.ISavglifelbl = QtGui.QLabel(self.IS_inputgroup)
        self.ISavglifelbl.setGeometry(QtCore.QRect(30, 305, 171, 16))
        self.ISavglifelbl.setObjectName(_fromUtf8("ISavglifelbl"))
        self.ISavglifespin = QtGui.QSpinBox(self.IS_inputgroup)
        self.ISavglifespin.setGeometry(QtCore.QRect(200, 305, 61, 16))
        self.ISavglifespin.setMinimum(5)
        self.ISavglifespin.setMaximum(100)
        self.ISavglifespin.setSingleStep(5)
        self.ISavglifespin.setProperty("value", 100)
        self.ISavglifespin.setObjectName(_fromUtf8("ISavglifespin"))
        self.ISminsize_lbl = QtGui.QLabel(self.IS_inputgroup)
        self.ISminsize_lbl.setGeometry(QtCore.QRect(30, 245, 191, 16))
        self.ISminsize_lbl.setObjectName(_fromUtf8("ISminsize_lbl"))
        self.ISminsize_box = QtGui.QLineEdit(self.IS_inputgroup)
        self.ISminsize_box.setGeometry(QtCore.QRect(200, 245, 51, 20))
        self.ISminsize_box.setObjectName(_fromUtf8("ISminsize_box"))
        self.PBrecycle_check_2 = QtGui.QCheckBox(self.IS_inputgroup)
        self.PBrecycle_check_2.setEnabled(False)
        self.PBrecycle_check_2.setGeometry(QtCore.QRect(170, 80, 111, 17))
        self.PBrecycle_check_2.setObjectName(_fromUtf8("PBrecycle_check_2"))
        self.ISexfil_combo = QtGui.QComboBox(self.IS_inputgroup)
        self.ISexfil_combo.setGeometry(QtCore.QRect(360, 246, 101, 20))
        self.ISexfil_combo.setObjectName(_fromUtf8("ISexfil_combo"))
        self.ISexfil_combo.addItem(_fromUtf8(""))
        self.ISexfil_combo.addItem(_fromUtf8(""))
        self.ISexfil_combo.addItem(_fromUtf8(""))
        self.ISexfil_combo.addItem(_fromUtf8(""))
        self.ISexfil_lbl = QtGui.QLabel(self.IS_inputgroup)
        self.ISexfil_lbl.setGeometry(QtCore.QRect(270, 245, 91, 16))
        self.ISexfil_lbl.setObjectName(_fromUtf8("ISexfil_lbl"))
        self.horizontalLayout_11.addWidget(self.IS_inputgroup)
        self.techlist_stack.addWidget(self.page_7)
        self.page_8 = QtGui.QWidget()
        self.page_8.setObjectName(_fromUtf8("page_8"))
        self.gridLayout_8 = QtGui.QGridLayout(self.page_8)
        self.gridLayout_8.setObjectName(_fromUtf8("gridLayout_8"))
        self.PPL_inputgroup = QtGui.QGroupBox(self.page_8)
        self.PPL_inputgroup.setObjectName(_fromUtf8("PPL_inputgroup"))
        self.label_5 = QtGui.QLabel(self.PPL_inputgroup)
        self.label_5.setGeometry(QtCore.QRect(30, 50, 281, 16))
        self.label_5.setObjectName(_fromUtf8("label_5"))
        self.label_67 = QtGui.QLabel(self.PPL_inputgroup)
        self.label_67.setGeometry(QtCore.QRect(360, 10, 101, 141))
        self.label_67.setText(_fromUtf8(""))
        self.label_67.setPixmap(QtGui.QPixmap(_fromUtf8(":/techplacement/tech_packplant.png")))
        self.label_67.setObjectName(_fromUtf8("label_67"))
        self.gridLayout_8.addWidget(self.PPL_inputgroup, 0, 0, 1, 1)
        self.techlist_stack.addWidget(self.page_8)
        self.page_9 = QtGui.QWidget()
        self.page_9.setObjectName(_fromUtf8("page_9"))
        self.horizontalLayout_8 = QtGui.QHBoxLayout(self.page_9)
        self.horizontalLayout_8.setObjectName(_fromUtf8("horizontalLayout_8"))
        self.PB_inputgroup = QtGui.QGroupBox(self.page_9)
        self.PB_inputgroup.setObjectName(_fromUtf8("PB_inputgroup"))
        self.PBprec_check = QtGui.QCheckBox(self.PB_inputgroup)
        self.PBprec_check.setEnabled(True)
        self.PBprec_check.setGeometry(QtCore.QRect(40, 100, 101, 17))
        self.PBprec_check.setObjectName(_fromUtf8("PBprec_check"))
        self.PBscales_lbl = QtGui.QLabel(self.PB_inputgroup)
        self.PBscales_lbl.setGeometry(QtCore.QRect(20, 20, 101, 16))
        self.PBscales_lbl.setObjectName(_fromUtf8("PBscales_lbl"))
        self.PBflow_check = QtGui.QCheckBox(self.PB_inputgroup)
        self.PBflow_check.setGeometry(QtCore.QRect(170, 40, 121, 17))
        self.PBflow_check.setObjectName(_fromUtf8("PBflow_check"))
        self.PBapps_lbl = QtGui.QLabel(self.PB_inputgroup)
        self.PBapps_lbl.setGeometry(QtCore.QRect(160, 20, 141, 16))
        self.PBapps_lbl.setObjectName(_fromUtf8("PBapps_lbl"))
        self.PBstreet_check = QtGui.QCheckBox(self.PB_inputgroup)
        self.PBstreet_check.setEnabled(False)
        self.PBstreet_check.setGeometry(QtCore.QRect(40, 60, 70, 17))
        self.PBstreet_check.setObjectName(_fromUtf8("PBstreet_check"))
        self.PBlot_check = QtGui.QCheckBox(self.PB_inputgroup)
        self.PBlot_check.setEnabled(False)
        self.PBlot_check.setGeometry(QtCore.QRect(40, 40, 70, 17))
        self.PBlot_check.setObjectName(_fromUtf8("PBlot_check"))
        self.PBneigh_check = QtGui.QCheckBox(self.PB_inputgroup)
        self.PBneigh_check.setGeometry(QtCore.QRect(40, 80, 101, 17))
        self.PBneigh_check.setObjectName(_fromUtf8("PBneigh_check"))
        self.PBpollute_check = QtGui.QCheckBox(self.PB_inputgroup)
        self.PBpollute_check.setGeometry(QtCore.QRect(170, 60, 111, 17))
        self.PBpollute_check.setObjectName(_fromUtf8("PBpollute_check"))
        self.label_36 = QtGui.QLabel(self.PB_inputgroup)
        self.label_36.setGeometry(QtCore.QRect(360, 10, 101, 141))
        self.label_36.setText(_fromUtf8(""))
        self.label_36.setPixmap(QtGui.QPixmap(_fromUtf8(":/techplacement/tech_pond.png")))
        self.label_36.setObjectName(_fromUtf8("label_36"))
        self.PBdesigncurve_browse = QtGui.QToolButton(self.PB_inputgroup)
        self.PBdesigncurve_browse.setEnabled(True)
        self.PBdesigncurve_browse.setGeometry(QtCore.QRect(390, 175, 61, 19))
        self.PBdesigncurve_browse.setObjectName(_fromUtf8("PBdesigncurve_browse"))
        self.PBdesigninfo_lbl = QtGui.QLabel(self.PB_inputgroup)
        self.PBdesigninfo_lbl.setGeometry(QtCore.QRect(20, 220, 161, 16))
        self.PBdesigninfo_lbl.setObjectName(_fromUtf8("PBdesigninfo_lbl"))
        self.PBdesigncurve_lbl = QtGui.QLabel(self.PB_inputgroup)
        self.PBdesigncurve_lbl.setGeometry(QtCore.QRect(20, 175, 161, 16))
        self.PBdesigncurve_lbl.setObjectName(_fromUtf8("PBdesigncurve_lbl"))
        self.PBdesigncurve_pathbox = QtGui.QLineEdit(self.PB_inputgroup)
        self.PBdesigncurve_pathbox.setGeometry(QtCore.QRect(202, 175, 181, 20))
        self.PBdesigncurve_pathbox.setObjectName(_fromUtf8("PBdesigncurve_pathbox"))
        self.PBdesignUB_box = QtGui.QCheckBox(self.PB_inputgroup)
        self.PBdesignUB_box.setGeometry(QtCore.QRect(200, 205, 241, 17))
        self.PBdesignUB_box.setObjectName(_fromUtf8("PBdesignUB_box"))
        self.PBdesigncurve_lbl2 = QtGui.QLabel(self.PB_inputgroup)
        self.PBdesigncurve_lbl2.setGeometry(QtCore.QRect(160, 195, 21, 20))
        self.PBdesigncurve_lbl2.setObjectName(_fromUtf8("PBdesigncurve_lbl2"))
        self.PBmaxsize_box = QtGui.QLineEdit(self.PB_inputgroup)
        self.PBmaxsize_box.setGeometry(QtCore.QRect(200, 275, 51, 20))
        self.PBmaxsize_box.setObjectName(_fromUtf8("PBmaxsize_box"))
        self.PBspecs_combo = QtGui.QComboBox(self.PB_inputgroup)
        self.PBspecs_combo.setGeometry(QtCore.QRect(40, 145, 281, 16))
        self.PBspecs_combo.setObjectName(_fromUtf8("PBspecs_combo"))
        self.PBspecs_combo.addItem(_fromUtf8(""))
        self.PBspecs_combo.addItem(_fromUtf8(""))
        self.PBspecs_combo.addItem(_fromUtf8(""))
        self.PBspecs_combo.addItem(_fromUtf8(""))
        self.PBspecs_combo.addItem(_fromUtf8(""))
        self.PBmaxsize_lbl = QtGui.QLabel(self.PB_inputgroup)
        self.PBmaxsize_lbl.setGeometry(QtCore.QRect(30, 275, 171, 16))
        self.PBmaxsize_lbl.setObjectName(_fromUtf8("PBmaxsize_lbl"))
        self.PBspecs_lbl = QtGui.QLabel(self.PB_inputgroup)
        self.PBspecs_lbl.setGeometry(QtCore.QRect(20, 125, 161, 16))
        self.PBspecs_lbl.setObjectName(_fromUtf8("PBspecs_lbl"))
        self.PBavglifelbl = QtGui.QLabel(self.PB_inputgroup)
        self.PBavglifelbl.setGeometry(QtCore.QRect(30, 305, 171, 16))
        self.PBavglifelbl.setObjectName(_fromUtf8("PBavglifelbl"))
        self.PBavglifespin = QtGui.QSpinBox(self.PB_inputgroup)
        self.PBavglifespin.setGeometry(QtCore.QRect(200, 305, 61, 16))
        self.PBavglifespin.setMinimum(5)
        self.PBavglifespin.setMaximum(100)
        self.PBavglifespin.setSingleStep(5)
        self.PBavglifespin.setProperty("value", 100)
        self.PBavglifespin.setObjectName(_fromUtf8("PBavglifespin"))
        self.PBminsize_box = QtGui.QLineEdit(self.PB_inputgroup)
        self.PBminsize_box.setGeometry(QtCore.QRect(200, 245, 51, 20))
        self.PBminsize_box.setObjectName(_fromUtf8("PBminsize_box"))
        self.PBminsize_lbl = QtGui.QLabel(self.PB_inputgroup)
        self.PBminsize_lbl.setGeometry(QtCore.QRect(30, 245, 171, 16))
        self.PBminsize_lbl.setObjectName(_fromUtf8("PBminsize_lbl"))
        self.PBrecycle_check = QtGui.QCheckBox(self.PB_inputgroup)
        self.PBrecycle_check.setGeometry(QtCore.QRect(170, 80, 111, 17))
        self.PBrecycle_check.setObjectName(_fromUtf8("PBrecycle_check"))
        self.PBexfil_lbl = QtGui.QLabel(self.PB_inputgroup)
        self.PBexfil_lbl.setGeometry(QtCore.QRect(270, 244, 91, 16))
        self.PBexfil_lbl.setObjectName(_fromUtf8("PBexfil_lbl"))
        self.PBexfil_combo = QtGui.QComboBox(self.PB_inputgroup)
        self.PBexfil_combo.setGeometry(QtCore.QRect(360, 245, 101, 20))
        self.PBexfil_combo.setObjectName(_fromUtf8("PBexfil_combo"))
        self.PBexfil_combo.addItem(_fromUtf8(""))
        self.PBexfil_combo.addItem(_fromUtf8(""))
        self.PBexfil_combo.addItem(_fromUtf8(""))
        self.PBexfil_combo.addItem(_fromUtf8(""))
        self.PBexfil_combo.addItem(_fromUtf8(""))
        self.horizontalLayout_8.addWidget(self.PB_inputgroup)
        self.techlist_stack.addWidget(self.page_9)
        self.page_10 = QtGui.QWidget()
        self.page_10.setObjectName(_fromUtf8("page_10"))
        self.gridLayout_10 = QtGui.QGridLayout(self.page_10)
        self.gridLayout_10.setObjectName(_fromUtf8("gridLayout_10"))
        self.PP_inputgroup = QtGui.QGroupBox(self.page_10)
        self.PP_inputgroup.setObjectName(_fromUtf8("PP_inputgroup"))
        self.label_7 = QtGui.QLabel(self.PP_inputgroup)
        self.label_7.setGeometry(QtCore.QRect(30, 50, 281, 16))
        self.label_7.setObjectName(_fromUtf8("label_7"))
        self.label_68 = QtGui.QLabel(self.PP_inputgroup)
        self.label_68.setGeometry(QtCore.QRect(360, 10, 101, 141))
        self.label_68.setText(_fromUtf8(""))
        self.label_68.setPixmap(QtGui.QPixmap(_fromUtf8(":/techplacement/tech_porouspavement.png")))
        self.label_68.setObjectName(_fromUtf8("label_68"))
        self.gridLayout_10.addWidget(self.PP_inputgroup, 0, 0, 1, 1)
        self.techlist_stack.addWidget(self.page_10)
        self.page_11 = QtGui.QWidget()
        self.page_11.setObjectName(_fromUtf8("page_11"))
        self.gridLayout_11 = QtGui.QGridLayout(self.page_11)
        self.gridLayout_11.setObjectName(_fromUtf8("gridLayout_11"))
        self.RT_inputgroup = QtGui.QGroupBox(self.page_11)
        self.RT_inputgroup.setObjectName(_fromUtf8("RT_inputgroup"))
        self.RTpurp_recyc_box = QtGui.QCheckBox(self.RT_inputgroup)
        self.RTpurp_recyc_box.setGeometry(QtCore.QRect(180, 80, 101, 17))
        self.RTpurp_recyc_box.setObjectName(_fromUtf8("RTpurp_recyc_box"))
        self.RTscale_lot_box = QtGui.QCheckBox(self.RT_inputgroup)
        self.RTscale_lot_box.setGeometry(QtCore.QRect(50, 40, 70, 17))
        self.RTscale_lot_box.setObjectName(_fromUtf8("RTscale_lot_box"))
        self.RTscale_city_box = QtGui.QCheckBox(self.RT_inputgroup)
        self.RTscale_city_box.setEnabled(False)
        self.RTscale_city_box.setGeometry(QtCore.QRect(50, 100, 101, 17))
        self.RTscale_city_box.setObjectName(_fromUtf8("RTscale_city_box"))
        self.RTpurp_flood_box = QtGui.QCheckBox(self.RT_inputgroup)
        self.RTpurp_flood_box.setGeometry(QtCore.QRect(180, 40, 121, 17))
        self.RTpurp_flood_box.setObjectName(_fromUtf8("RTpurp_flood_box"))
        self.RTpurp_lbl = QtGui.QLabel(self.RT_inputgroup)
        self.RTpurp_lbl.setGeometry(QtCore.QRect(170, 20, 141, 16))
        self.RTpurp_lbl.setObjectName(_fromUtf8("RTpurp_lbl"))
        self.RTpurp_treat_box = QtGui.QCheckBox(self.RT_inputgroup)
        self.RTpurp_treat_box.setEnabled(False)
        self.RTpurp_treat_box.setGeometry(QtCore.QRect(180, 60, 121, 17))
        self.RTpurp_treat_box.setObjectName(_fromUtf8("RTpurp_treat_box"))
        self.RT_img = QtGui.QLabel(self.RT_inputgroup)
        self.RT_img.setGeometry(QtCore.QRect(360, 10, 101, 141))
        self.RT_img.setText(_fromUtf8(""))
        self.RT_img.setPixmap(QtGui.QPixmap(_fromUtf8(":/techplacement/tech_raintank.png")))
        self.RT_img.setObjectName(_fromUtf8("RT_img"))
        self.RTscale_lbl = QtGui.QLabel(self.RT_inputgroup)
        self.RTscale_lbl.setGeometry(QtCore.QRect(30, 20, 101, 16))
        self.RTscale_lbl.setObjectName(_fromUtf8("RTscale_lbl"))
        self.RTscale_neighb_box = QtGui.QCheckBox(self.RT_inputgroup)
        self.RTscale_neighb_box.setEnabled(True)
        self.RTscale_neighb_box.setGeometry(QtCore.QRect(50, 80, 101, 17))
        self.RTscale_neighb_box.setObjectName(_fromUtf8("RTscale_neighb_box"))
        self.RTscale_street_box = QtGui.QCheckBox(self.RT_inputgroup)
        self.RTscale_street_box.setEnabled(False)
        self.RTscale_street_box.setGeometry(QtCore.QRect(50, 60, 70, 17))
        self.RTscale_street_box.setObjectName(_fromUtf8("RTscale_street_box"))
        self.RTdesignUB_box = QtGui.QCheckBox(self.RT_inputgroup)
        self.RTdesignUB_box.setGeometry(QtCore.QRect(198, 205, 241, 17))
        self.RTdesignUB_box.setObjectName(_fromUtf8("RTdesignUB_box"))
        self.RTdesigncurve_pathbox = QtGui.QLineEdit(self.RT_inputgroup)
        self.RTdesigncurve_pathbox.setGeometry(QtCore.QRect(200, 175, 181, 20))
        self.RTdesigncurve_pathbox.setObjectName(_fromUtf8("RTdesigncurve_pathbox"))
        self.RTdesigncurve_browse = QtGui.QToolButton(self.RT_inputgroup)
        self.RTdesigncurve_browse.setEnabled(True)
        self.RTdesigncurve_browse.setGeometry(QtCore.QRect(388, 175, 61, 19))
        self.RTdesigncurve_browse.setObjectName(_fromUtf8("RTdesigncurve_browse"))
        self.RTdesigncurve_lbl = QtGui.QLabel(self.RT_inputgroup)
        self.RTdesigncurve_lbl.setGeometry(QtCore.QRect(30, 175, 161, 16))
        self.RTdesigncurve_lbl.setObjectName(_fromUtf8("RTdesigncurve_lbl"))
        self.RTdesigncurve_lbl2 = QtGui.QLabel(self.RT_inputgroup)
        self.RTdesigncurve_lbl2.setGeometry(QtCore.QRect(158, 195, 21, 20))
        self.RTdesigncurve_lbl2.setObjectName(_fromUtf8("RTdesigncurve_lbl2"))
        self.RT_maxdepth_box = QtGui.QLineEdit(self.RT_inputgroup)
        self.RT_maxdepth_box.setGeometry(QtCore.QRect(190, 245, 51, 20))
        self.RT_maxdepth_box.setObjectName(_fromUtf8("RT_maxdepth_box"))
        self.RT_maxdepth_lbl = QtGui.QLabel(self.RT_inputgroup)
        self.RT_maxdepth_lbl.setGeometry(QtCore.QRect(40, 245, 121, 16))
        self.RT_maxdepth_lbl.setObjectName(_fromUtf8("RT_maxdepth_lbl"))
        self.RT_mindead_box = QtGui.QLineEdit(self.RT_inputgroup)
        self.RT_mindead_box.setGeometry(QtCore.QRect(190, 275, 51, 20))
        self.RT_mindead_box.setObjectName(_fromUtf8("RT_mindead_box"))
        self.RT_mindead_lbl = QtGui.QLabel(self.RT_inputgroup)
        self.RT_mindead_lbl.setGeometry(QtCore.QRect(40, 275, 141, 16))
        self.RT_mindead_lbl.setObjectName(_fromUtf8("RT_mindead_lbl"))
        self.RTavglifelbl = QtGui.QLabel(self.RT_inputgroup)
        self.RTavglifelbl.setGeometry(QtCore.QRect(40, 305, 131, 16))
        self.RTavglifelbl.setObjectName(_fromUtf8("RTavglifelbl"))
        self.RTavglifespin = QtGui.QSpinBox(self.RT_inputgroup)
        self.RTavglifespin.setGeometry(QtCore.QRect(190, 305, 61, 16))
        self.RTavglifespin.setMinimum(5)
        self.RTavglifespin.setMaximum(100)
        self.RTavglifespin.setSingleStep(5)
        self.RTavglifespin.setProperty("value", 100)
        self.RTavglifespin.setObjectName(_fromUtf8("RTavglifespin"))
        self.RTdesigninfo_lbl = QtGui.QLabel(self.RT_inputgroup)
        self.RTdesigninfo_lbl.setGeometry(QtCore.QRect(30, 220, 161, 16))
        self.RTdesigninfo_lbl.setObjectName(_fromUtf8("RTdesigninfo_lbl"))
        self.gridLayout_11.addWidget(self.RT_inputgroup, 0, 0, 1, 1)
        self.techlist_stack.addWidget(self.page_11)
        self.page_12 = QtGui.QWidget()
        self.page_12.setObjectName(_fromUtf8("page_12"))
        self.gridLayout_12 = QtGui.QGridLayout(self.page_12)
        self.gridLayout_12.setObjectName(_fromUtf8("gridLayout_12"))
        self.SF_inputgroup = QtGui.QGroupBox(self.page_12)
        self.SF_inputgroup.setObjectName(_fromUtf8("SF_inputgroup"))
        self.checkBox_50 = QtGui.QCheckBox(self.SF_inputgroup)
        self.checkBox_50.setEnabled(False)
        self.checkBox_50.setGeometry(QtCore.QRect(180, 80, 101, 17))
        self.checkBox_50.setObjectName(_fromUtf8("checkBox_50"))
        self.checkBox_51 = QtGui.QCheckBox(self.SF_inputgroup)
        self.checkBox_51.setEnabled(False)
        self.checkBox_51.setGeometry(QtCore.QRect(50, 40, 70, 17))
        self.checkBox_51.setObjectName(_fromUtf8("checkBox_51"))
        self.checkBox_52 = QtGui.QCheckBox(self.SF_inputgroup)
        self.checkBox_52.setEnabled(False)
        self.checkBox_52.setGeometry(QtCore.QRect(50, 100, 101, 17))
        self.checkBox_52.setObjectName(_fromUtf8("checkBox_52"))
        self.checkBox_53 = QtGui.QCheckBox(self.SF_inputgroup)
        self.checkBox_53.setEnabled(False)
        self.checkBox_53.setGeometry(QtCore.QRect(180, 40, 121, 17))
        self.checkBox_53.setObjectName(_fromUtf8("checkBox_53"))
        self.label_40 = QtGui.QLabel(self.SF_inputgroup)
        self.label_40.setGeometry(QtCore.QRect(170, 20, 141, 16))
        self.label_40.setObjectName(_fromUtf8("label_40"))
        self.checkBox_54 = QtGui.QCheckBox(self.SF_inputgroup)
        self.checkBox_54.setEnabled(False)
        self.checkBox_54.setGeometry(QtCore.QRect(180, 60, 91, 17))
        self.checkBox_54.setObjectName(_fromUtf8("checkBox_54"))
        self.label_41 = QtGui.QLabel(self.SF_inputgroup)
        self.label_41.setGeometry(QtCore.QRect(360, 10, 101, 141))
        self.label_41.setText(_fromUtf8(""))
        self.label_41.setPixmap(QtGui.QPixmap(_fromUtf8(":/techplacement/tech_sandfilter.png")))
        self.label_41.setObjectName(_fromUtf8("label_41"))
        self.label_42 = QtGui.QLabel(self.SF_inputgroup)
        self.label_42.setGeometry(QtCore.QRect(30, 20, 101, 16))
        self.label_42.setObjectName(_fromUtf8("label_42"))
        self.checkBox_55 = QtGui.QCheckBox(self.SF_inputgroup)
        self.checkBox_55.setEnabled(False)
        self.checkBox_55.setGeometry(QtCore.QRect(50, 80, 101, 17))
        self.checkBox_55.setObjectName(_fromUtf8("checkBox_55"))
        self.checkBox_56 = QtGui.QCheckBox(self.SF_inputgroup)
        self.checkBox_56.setEnabled(False)
        self.checkBox_56.setGeometry(QtCore.QRect(50, 60, 70, 17))
        self.checkBox_56.setObjectName(_fromUtf8("checkBox_56"))
        self.gridLayout_12.addWidget(self.SF_inputgroup, 0, 0, 1, 1)
        self.techlist_stack.addWidget(self.page_12)
        self.page_14 = QtGui.QWidget()
        self.page_14.setObjectName(_fromUtf8("page_14"))
        self.gridLayout_14 = QtGui.QGridLayout(self.page_14)
        self.gridLayout_14.setObjectName(_fromUtf8("gridLayout_14"))
        self.IRR_inputgroup = QtGui.QGroupBox(self.page_14)
        self.IRR_inputgroup.setObjectName(_fromUtf8("IRR_inputgroup"))
        self.label_11 = QtGui.QLabel(self.IRR_inputgroup)
        self.label_11.setGeometry(QtCore.QRect(30, 50, 281, 16))
        self.label_11.setObjectName(_fromUtf8("label_11"))
        self.label_70 = QtGui.QLabel(self.IRR_inputgroup)
        self.label_70.setGeometry(QtCore.QRect(360, 10, 101, 141))
        self.label_70.setText(_fromUtf8(""))
        self.label_70.setPixmap(QtGui.QPixmap(_fromUtf8(":/techplacement/tech_subirrigate.png")))
        self.label_70.setObjectName(_fromUtf8("label_70"))
        self.gridLayout_14.addWidget(self.IRR_inputgroup, 0, 0, 1, 1)
        self.techlist_stack.addWidget(self.page_14)
        self.page_15 = QtGui.QWidget()
        self.page_15.setObjectName(_fromUtf8("page_15"))
        self.gridLayout_15 = QtGui.QGridLayout(self.page_15)
        self.gridLayout_15.setObjectName(_fromUtf8("gridLayout_15"))
        self.WSUB_inputgroup = QtGui.QGroupBox(self.page_15)
        self.WSUB_inputgroup.setObjectName(_fromUtf8("WSUB_inputgroup"))
        self.checkBox_106 = QtGui.QCheckBox(self.WSUB_inputgroup)
        self.checkBox_106.setEnabled(False)
        self.checkBox_106.setGeometry(QtCore.QRect(180, 40, 121, 17))
        self.checkBox_106.setObjectName(_fromUtf8("checkBox_106"))
        self.checkBox_107 = QtGui.QCheckBox(self.WSUB_inputgroup)
        self.checkBox_107.setEnabled(False)
        self.checkBox_107.setGeometry(QtCore.QRect(50, 40, 70, 17))
        self.checkBox_107.setObjectName(_fromUtf8("checkBox_107"))
        self.label_61 = QtGui.QLabel(self.WSUB_inputgroup)
        self.label_61.setGeometry(QtCore.QRect(170, 20, 141, 16))
        self.label_61.setObjectName(_fromUtf8("label_61"))
        self.checkBox_108 = QtGui.QCheckBox(self.WSUB_inputgroup)
        self.checkBox_108.setEnabled(False)
        self.checkBox_108.setGeometry(QtCore.QRect(50, 80, 101, 17))
        self.checkBox_108.setObjectName(_fromUtf8("checkBox_108"))
        self.checkBox_109 = QtGui.QCheckBox(self.WSUB_inputgroup)
        self.checkBox_109.setEnabled(False)
        self.checkBox_109.setGeometry(QtCore.QRect(180, 60, 131, 17))
        self.checkBox_109.setObjectName(_fromUtf8("checkBox_109"))
        self.label_62 = QtGui.QLabel(self.WSUB_inputgroup)
        self.label_62.setGeometry(QtCore.QRect(360, 10, 101, 141))
        self.label_62.setText(_fromUtf8(""))
        self.label_62.setPixmap(QtGui.QPixmap(_fromUtf8(":/techplacement/tech_reedbed.png")))
        self.label_62.setObjectName(_fromUtf8("label_62"))
        self.checkBox_110 = QtGui.QCheckBox(self.WSUB_inputgroup)
        self.checkBox_110.setEnabled(False)
        self.checkBox_110.setGeometry(QtCore.QRect(50, 60, 70, 17))
        self.checkBox_110.setObjectName(_fromUtf8("checkBox_110"))
        self.label_63 = QtGui.QLabel(self.WSUB_inputgroup)
        self.label_63.setGeometry(QtCore.QRect(30, 20, 101, 16))
        self.label_63.setObjectName(_fromUtf8("label_63"))
        self.checkBox_111 = QtGui.QCheckBox(self.WSUB_inputgroup)
        self.checkBox_111.setEnabled(False)
        self.checkBox_111.setGeometry(QtCore.QRect(180, 80, 101, 17))
        self.checkBox_111.setObjectName(_fromUtf8("checkBox_111"))
        self.checkBox_112 = QtGui.QCheckBox(self.WSUB_inputgroup)
        self.checkBox_112.setEnabled(False)
        self.checkBox_112.setGeometry(QtCore.QRect(50, 100, 101, 17))
        self.checkBox_112.setObjectName(_fromUtf8("checkBox_112"))
        self.gridLayout_15.addWidget(self.WSUB_inputgroup, 0, 0, 1, 1)
        self.techlist_stack.addWidget(self.page_15)
        self.page_16 = QtGui.QWidget()
        self.page_16.setObjectName(_fromUtf8("page_16"))
        self.horizontalLayout_9 = QtGui.QHBoxLayout(self.page_16)
        self.horizontalLayout_9.setObjectName(_fromUtf8("horizontalLayout_9"))
        self.WSUR_inputgroup = QtGui.QGroupBox(self.page_16)
        self.WSUR_inputgroup.setObjectName(_fromUtf8("WSUR_inputgroup"))
        self.WSURlot_check = QtGui.QCheckBox(self.WSUR_inputgroup)
        self.WSURlot_check.setEnabled(False)
        self.WSURlot_check.setGeometry(QtCore.QRect(40, 40, 70, 17))
        self.WSURlot_check.setObjectName(_fromUtf8("WSURlot_check"))
        self.WSURprec_check = QtGui.QCheckBox(self.WSUR_inputgroup)
        self.WSURprec_check.setEnabled(True)
        self.WSURprec_check.setGeometry(QtCore.QRect(40, 100, 101, 17))
        self.WSURprec_check.setObjectName(_fromUtf8("WSURprec_check"))
        self.WSURflow_check = QtGui.QCheckBox(self.WSUR_inputgroup)
        self.WSURflow_check.setGeometry(QtCore.QRect(170, 40, 121, 17))
        self.WSURflow_check.setObjectName(_fromUtf8("WSURflow_check"))
        self.WSURapps_lbl = QtGui.QLabel(self.WSUR_inputgroup)
        self.WSURapps_lbl.setGeometry(QtCore.QRect(160, 20, 141, 16))
        self.WSURapps_lbl.setObjectName(_fromUtf8("WSURapps_lbl"))
        self.WSURpollute_check = QtGui.QCheckBox(self.WSUR_inputgroup)
        self.WSURpollute_check.setGeometry(QtCore.QRect(170, 60, 121, 17))
        self.WSURpollute_check.setObjectName(_fromUtf8("WSURpollute_check"))
        self.label_44 = QtGui.QLabel(self.WSUR_inputgroup)
        self.label_44.setGeometry(QtCore.QRect(360, 10, 101, 141))
        self.label_44.setText(_fromUtf8(""))
        self.label_44.setPixmap(QtGui.QPixmap(_fromUtf8(":/techplacement/tech_wetlands.png")))
        self.label_44.setObjectName(_fromUtf8("label_44"))
        self.WSURscales_lbl = QtGui.QLabel(self.WSUR_inputgroup)
        self.WSURscales_lbl.setGeometry(QtCore.QRect(20, 20, 101, 16))
        self.WSURscales_lbl.setObjectName(_fromUtf8("WSURscales_lbl"))
        self.WSURneigh_check = QtGui.QCheckBox(self.WSUR_inputgroup)
        self.WSURneigh_check.setGeometry(QtCore.QRect(40, 80, 101, 17))
        self.WSURneigh_check.setObjectName(_fromUtf8("WSURneigh_check"))
        self.WSURstreet_check = QtGui.QCheckBox(self.WSUR_inputgroup)
        self.WSURstreet_check.setEnabled(False)
        self.WSURstreet_check.setGeometry(QtCore.QRect(40, 60, 70, 17))
        self.WSURstreet_check.setObjectName(_fromUtf8("WSURstreet_check"))
        self.WSURdesigncurve_lbl2 = QtGui.QLabel(self.WSUR_inputgroup)
        self.WSURdesigncurve_lbl2.setGeometry(QtCore.QRect(160, 195, 21, 20))
        self.WSURdesigncurve_lbl2.setObjectName(_fromUtf8("WSURdesigncurve_lbl2"))
        self.WSURdesignUB_box = QtGui.QCheckBox(self.WSUR_inputgroup)
        self.WSURdesignUB_box.setGeometry(QtCore.QRect(200, 205, 241, 17))
        self.WSURdesignUB_box.setObjectName(_fromUtf8("WSURdesignUB_box"))
        self.WSURdesigncurve_browse = QtGui.QToolButton(self.WSUR_inputgroup)
        self.WSURdesigncurve_browse.setEnabled(True)
        self.WSURdesigncurve_browse.setGeometry(QtCore.QRect(390, 175, 61, 19))
        self.WSURdesigncurve_browse.setObjectName(_fromUtf8("WSURdesigncurve_browse"))
        self.WSURdesigncurve_lbl = QtGui.QLabel(self.WSUR_inputgroup)
        self.WSURdesigncurve_lbl.setGeometry(QtCore.QRect(20, 175, 161, 16))
        self.WSURdesigncurve_lbl.setObjectName(_fromUtf8("WSURdesigncurve_lbl"))
        self.WSURdesigncurve_pathbox = QtGui.QLineEdit(self.WSUR_inputgroup)
        self.WSURdesigncurve_pathbox.setGeometry(QtCore.QRect(202, 175, 181, 20))
        self.WSURdesigncurve_pathbox.setObjectName(_fromUtf8("WSURdesigncurve_pathbox"))
        self.WSURdesigninfo_lbl = QtGui.QLabel(self.WSUR_inputgroup)
        self.WSURdesigninfo_lbl.setGeometry(QtCore.QRect(20, 220, 161, 16))
        self.WSURdesigninfo_lbl.setObjectName(_fromUtf8("WSURdesigninfo_lbl"))
        self.WSURspecs_lbl = QtGui.QLabel(self.WSUR_inputgroup)
        self.WSURspecs_lbl.setGeometry(QtCore.QRect(20, 125, 161, 16))
        self.WSURspecs_lbl.setObjectName(_fromUtf8("WSURspecs_lbl"))
        self.WSURmaxsize_lbl = QtGui.QLabel(self.WSUR_inputgroup)
        self.WSURmaxsize_lbl.setGeometry(QtCore.QRect(30, 275, 191, 16))
        self.WSURmaxsize_lbl.setObjectName(_fromUtf8("WSURmaxsize_lbl"))
        self.WSURmaxsize_box = QtGui.QLineEdit(self.WSUR_inputgroup)
        self.WSURmaxsize_box.setGeometry(QtCore.QRect(200, 275, 51, 20))
        self.WSURmaxsize_box.setObjectName(_fromUtf8("WSURmaxsize_box"))
        self.WSURspecs_combo = QtGui.QComboBox(self.WSUR_inputgroup)
        self.WSURspecs_combo.setGeometry(QtCore.QRect(40, 145, 281, 16))
        self.WSURspecs_combo.setObjectName(_fromUtf8("WSURspecs_combo"))
        self.WSURspecs_combo.addItem(_fromUtf8(""))
        self.WSURspecs_combo.addItem(_fromUtf8(""))
        self.WSURspecs_combo.addItem(_fromUtf8(""))
        self.WSURspecs_combo.addItem(_fromUtf8(""))
        self.WSURspecs_combo.addItem(_fromUtf8(""))
        self.WSURspecs_combo.addItem(_fromUtf8(""))
        self.WSURavglifelbl = QtGui.QLabel(self.WSUR_inputgroup)
        self.WSURavglifelbl.setGeometry(QtCore.QRect(30, 300, 171, 16))
        self.WSURavglifelbl.setObjectName(_fromUtf8("WSURavglifelbl"))
        self.WSURavglifespin = QtGui.QSpinBox(self.WSUR_inputgroup)
        self.WSURavglifespin.setGeometry(QtCore.QRect(200, 300, 61, 16))
        self.WSURavglifespin.setMinimum(5)
        self.WSURavglifespin.setMaximum(100)
        self.WSURavglifespin.setSingleStep(5)
        self.WSURavglifespin.setProperty("value", 100)
        self.WSURavglifespin.setObjectName(_fromUtf8("WSURavglifespin"))
        self.WSURrecycle_check = QtGui.QCheckBox(self.WSUR_inputgroup)
        self.WSURrecycle_check.setGeometry(QtCore.QRect(170, 80, 121, 17))
        self.WSURrecycle_check.setObjectName(_fromUtf8("WSURrecycle_check"))
        self.WSURminsize_lbl = QtGui.QLabel(self.WSUR_inputgroup)
        self.WSURminsize_lbl.setGeometry(QtCore.QRect(30, 245, 161, 16))
        self.WSURminsize_lbl.setObjectName(_fromUtf8("WSURminsize_lbl"))
        self.WSURminsize_box = QtGui.QLineEdit(self.WSUR_inputgroup)
        self.WSURminsize_box.setGeometry(QtCore.QRect(200, 245, 51, 20))
        self.WSURminsize_box.setObjectName(_fromUtf8("WSURminsize_box"))
        self.WSURexfil_combo = QtGui.QComboBox(self.WSUR_inputgroup)
        self.WSURexfil_combo.setGeometry(QtCore.QRect(360, 246, 101, 20))
        self.WSURexfil_combo.setObjectName(_fromUtf8("WSURexfil_combo"))
        self.WSURexfil_combo.addItem(_fromUtf8(""))
        self.WSURexfil_combo.addItem(_fromUtf8(""))
        self.WSURexfil_combo.addItem(_fromUtf8(""))
        self.WSURexfil_combo.addItem(_fromUtf8(""))
        self.WSURexfil_combo.addItem(_fromUtf8(""))
        self.WSURexfil_lbl = QtGui.QLabel(self.WSUR_inputgroup)
        self.WSURexfil_lbl.setGeometry(QtCore.QRect(270, 245, 91, 16))
        self.WSURexfil_lbl.setObjectName(_fromUtf8("WSURexfil_lbl"))
        self.horizontalLayout_9.addWidget(self.WSUR_inputgroup)
        self.techlist_stack.addWidget(self.page_16)
        self.page_17 = QtGui.QWidget()
        self.page_17.setObjectName(_fromUtf8("page_17"))
        self.horizontalLayout_10 = QtGui.QHBoxLayout(self.page_17)
        self.horizontalLayout_10.setObjectName(_fromUtf8("horizontalLayout_10"))
        self.SW_inputgroup = QtGui.QGroupBox(self.page_17)
        self.SW_inputgroup.setObjectName(_fromUtf8("SW_inputgroup"))
        self.SWlot_check = QtGui.QCheckBox(self.SW_inputgroup)
        self.SWlot_check.setEnabled(False)
        self.SWlot_check.setGeometry(QtCore.QRect(40, 40, 70, 17))
        self.SWlot_check.setObjectName(_fromUtf8("SWlot_check"))
        self.SWprec_check = QtGui.QCheckBox(self.SW_inputgroup)
        self.SWprec_check.setEnabled(False)
        self.SWprec_check.setGeometry(QtCore.QRect(40, 100, 101, 17))
        self.SWprec_check.setObjectName(_fromUtf8("SWprec_check"))
        self.SWflow_check = QtGui.QCheckBox(self.SW_inputgroup)
        self.SWflow_check.setGeometry(QtCore.QRect(170, 40, 121, 17))
        self.SWflow_check.setObjectName(_fromUtf8("SWflow_check"))
        self.label_46 = QtGui.QLabel(self.SW_inputgroup)
        self.label_46.setGeometry(QtCore.QRect(160, 20, 141, 16))
        self.label_46.setObjectName(_fromUtf8("label_46"))
        self.SWpollute_check = QtGui.QCheckBox(self.SW_inputgroup)
        self.SWpollute_check.setGeometry(QtCore.QRect(170, 60, 121, 17))
        self.SWpollute_check.setObjectName(_fromUtf8("SWpollute_check"))
        self.label_47 = QtGui.QLabel(self.SW_inputgroup)
        self.label_47.setGeometry(QtCore.QRect(360, 10, 101, 141))
        self.label_47.setText(_fromUtf8(""))
        self.label_47.setPixmap(QtGui.QPixmap(_fromUtf8(":/techplacement/tech_swale.png")))
        self.label_47.setObjectName(_fromUtf8("label_47"))
        self.SWscales_lbl = QtGui.QLabel(self.SW_inputgroup)
        self.SWscales_lbl.setGeometry(QtCore.QRect(20, 20, 101, 16))
        self.SWscales_lbl.setObjectName(_fromUtf8("SWscales_lbl"))
        self.SWneigh_check = QtGui.QCheckBox(self.SW_inputgroup)
        self.SWneigh_check.setEnabled(True)
        self.SWneigh_check.setGeometry(QtCore.QRect(40, 80, 101, 17))
        self.SWneigh_check.setObjectName(_fromUtf8("SWneigh_check"))
        self.SWstreet_check = QtGui.QCheckBox(self.SW_inputgroup)
        self.SWstreet_check.setGeometry(QtCore.QRect(40, 60, 70, 17))
        self.SWstreet_check.setObjectName(_fromUtf8("SWstreet_check"))
        self.SWdesigncurve_browse = QtGui.QToolButton(self.SW_inputgroup)
        self.SWdesigncurve_browse.setEnabled(True)
        self.SWdesigncurve_browse.setGeometry(QtCore.QRect(390, 175, 61, 19))
        self.SWdesigncurve_browse.setObjectName(_fromUtf8("SWdesigncurve_browse"))
        self.SWdesigncurve_lbl2 = QtGui.QLabel(self.SW_inputgroup)
        self.SWdesigncurve_lbl2.setGeometry(QtCore.QRect(160, 195, 21, 20))
        self.SWdesigncurve_lbl2.setObjectName(_fromUtf8("SWdesigncurve_lbl2"))
        self.SWdesigncurve_lbl = QtGui.QLabel(self.SW_inputgroup)
        self.SWdesigncurve_lbl.setGeometry(QtCore.QRect(20, 175, 161, 16))
        self.SWdesigncurve_lbl.setObjectName(_fromUtf8("SWdesigncurve_lbl"))
        self.SWdesignUB_box = QtGui.QCheckBox(self.SW_inputgroup)
        self.SWdesignUB_box.setGeometry(QtCore.QRect(200, 205, 241, 17))
        self.SWdesignUB_box.setObjectName(_fromUtf8("SWdesignUB_box"))
        self.SWdesigncurve_pathbox = QtGui.QLineEdit(self.SW_inputgroup)
        self.SWdesigncurve_pathbox.setGeometry(QtCore.QRect(202, 175, 181, 20))
        self.SWdesigncurve_pathbox.setObjectName(_fromUtf8("SWdesigncurve_pathbox"))
        self.SWdesigninfo_lbl = QtGui.QLabel(self.SW_inputgroup)
        self.SWdesigninfo_lbl.setGeometry(QtCore.QRect(20, 220, 161, 16))
        self.SWdesigninfo_lbl.setObjectName(_fromUtf8("SWdesigninfo_lbl"))
        self.SWspecs_combo = QtGui.QComboBox(self.SW_inputgroup)
        self.SWspecs_combo.setGeometry(QtCore.QRect(40, 145, 281, 16))
        self.SWspecs_combo.setObjectName(_fromUtf8("SWspecs_combo"))
        self.SWspecs_combo.addItem(_fromUtf8(""))
        self.SWmaxsize_lbl = QtGui.QLabel(self.SW_inputgroup)
        self.SWmaxsize_lbl.setGeometry(QtCore.QRect(30, 275, 161, 16))
        self.SWmaxsize_lbl.setObjectName(_fromUtf8("SWmaxsize_lbl"))
        self.SWmaxsize_box = QtGui.QLineEdit(self.SW_inputgroup)
        self.SWmaxsize_box.setGeometry(QtCore.QRect(200, 275, 51, 20))
        self.SWmaxsize_box.setObjectName(_fromUtf8("SWmaxsize_box"))
        self.SWspecs_lbl = QtGui.QLabel(self.SW_inputgroup)
        self.SWspecs_lbl.setGeometry(QtCore.QRect(20, 125, 161, 16))
        self.SWspecs_lbl.setObjectName(_fromUtf8("SWspecs_lbl"))
        self.SWavglifelbl = QtGui.QLabel(self.SW_inputgroup)
        self.SWavglifelbl.setGeometry(QtCore.QRect(30, 300, 171, 16))
        self.SWavglifelbl.setObjectName(_fromUtf8("SWavglifelbl"))
        self.SWavglifespin = QtGui.QSpinBox(self.SW_inputgroup)
        self.SWavglifespin.setGeometry(QtCore.QRect(200, 300, 61, 16))
        self.SWavglifespin.setMinimum(5)
        self.SWavglifespin.setMaximum(100)
        self.SWavglifespin.setSingleStep(5)
        self.SWavglifespin.setProperty("value", 100)
        self.SWavglifespin.setObjectName(_fromUtf8("SWavglifespin"))
        self.SWminsize_box = QtGui.QLineEdit(self.SW_inputgroup)
        self.SWminsize_box.setGeometry(QtCore.QRect(200, 245, 51, 20))
        self.SWminsize_box.setObjectName(_fromUtf8("SWminsize_box"))
        self.SWminsize_lbl = QtGui.QLabel(self.SW_inputgroup)
        self.SWminsize_lbl.setGeometry(QtCore.QRect(30, 245, 161, 16))
        self.SWminsize_lbl.setObjectName(_fromUtf8("SWminsize_lbl"))
        self.SWrecycle_check = QtGui.QCheckBox(self.SW_inputgroup)
        self.SWrecycle_check.setEnabled(False)
        self.SWrecycle_check.setGeometry(QtCore.QRect(170, 80, 121, 17))
        self.SWrecycle_check.setObjectName(_fromUtf8("SWrecycle_check"))
        self.SWexfil_lbl = QtGui.QLabel(self.SW_inputgroup)
        self.SWexfil_lbl.setGeometry(QtCore.QRect(270, 244, 91, 16))
        self.SWexfil_lbl.setObjectName(_fromUtf8("SWexfil_lbl"))
        self.SWexfil_combo = QtGui.QComboBox(self.SW_inputgroup)
        self.SWexfil_combo.setGeometry(QtCore.QRect(360, 245, 101, 20))
        self.SWexfil_combo.setObjectName(_fromUtf8("SWexfil_combo"))
        self.SWexfil_combo.addItem(_fromUtf8(""))
        self.SWexfil_combo.addItem(_fromUtf8(""))
        self.SWexfil_combo.addItem(_fromUtf8(""))
        self.SWexfil_combo.addItem(_fromUtf8(""))
        self.SWexfil_combo.addItem(_fromUtf8(""))
        self.horizontalLayout_10.addWidget(self.SW_inputgroup)
        self.techlist_stack.addWidget(self.page_17)
        self.page_22 = QtGui.QWidget()
        self.page_22.setObjectName(_fromUtf8("page_22"))
        self.horizontalLayout_6 = QtGui.QHBoxLayout(self.page_22)
        self.horizontalLayout_6.setObjectName(_fromUtf8("horizontalLayout_6"))
        self.TPS_inputgroup = QtGui.QGroupBox(self.page_22)
        self.TPS_inputgroup.setObjectName(_fromUtf8("TPS_inputgroup"))
        self.label_50 = QtGui.QLabel(self.TPS_inputgroup)
        self.label_50.setGeometry(QtCore.QRect(360, 10, 101, 141))
        self.label_50.setText(_fromUtf8(""))
        self.label_50.setObjectName(_fromUtf8("label_50"))
        self.label_51 = QtGui.QLabel(self.TPS_inputgroup)
        self.label_51.setGeometry(QtCore.QRect(40, 160, 261, 16))
        self.label_51.setObjectName(_fromUtf8("label_51"))
        self.horizontalLayout_6.addWidget(self.TPS_inputgroup)
        self.techlist_stack.addWidget(self.page_22)
        self.page_18 = QtGui.QWidget()
        self.page_18.setObjectName(_fromUtf8("page_18"))
        self.gridLayout_18 = QtGui.QGridLayout(self.page_18)
        self.gridLayout_18.setObjectName(_fromUtf8("gridLayout_18"))
        self.UT_inputgroup = QtGui.QGroupBox(self.page_18)
        self.UT_inputgroup.setObjectName(_fromUtf8("UT_inputgroup"))
        self.label_15 = QtGui.QLabel(self.UT_inputgroup)
        self.label_15.setGeometry(QtCore.QRect(30, 50, 281, 16))
        self.label_15.setObjectName(_fromUtf8("label_15"))
        self.label_71 = QtGui.QLabel(self.UT_inputgroup)
        self.label_71.setGeometry(QtCore.QRect(360, 10, 101, 141))
        self.label_71.setText(_fromUtf8(""))
        self.label_71.setPixmap(QtGui.QPixmap(_fromUtf8(":/techplacement/tech_ustoilets.png")))
        self.label_71.setObjectName(_fromUtf8("label_71"))
        self.gridLayout_18.addWidget(self.UT_inputgroup, 0, 0, 1, 1)
        self.techlist_stack.addWidget(self.page_18)
        self.page_19 = QtGui.QWidget()
        self.page_19.setObjectName(_fromUtf8("page_19"))
        self.gridLayout_19 = QtGui.QGridLayout(self.page_19)
        self.gridLayout_19.setObjectName(_fromUtf8("gridLayout_19"))
        self.WWRR_inputgroup = QtGui.QGroupBox(self.page_19)
        self.WWRR_inputgroup.setObjectName(_fromUtf8("WWRR_inputgroup"))
        self.label_16 = QtGui.QLabel(self.WWRR_inputgroup)
        self.label_16.setGeometry(QtCore.QRect(30, 50, 281, 16))
        self.label_16.setObjectName(_fromUtf8("label_16"))
        self.label_72 = QtGui.QLabel(self.WWRR_inputgroup)
        self.label_72.setGeometry(QtCore.QRect(360, 10, 101, 141))
        self.label_72.setText(_fromUtf8(""))
        self.label_72.setPixmap(QtGui.QPixmap(_fromUtf8(":/techplacement/tech_wwrecycle.png")))
        self.label_72.setObjectName(_fromUtf8("label_72"))
        self.gridLayout_19.addWidget(self.WWRR_inputgroup, 0, 0, 1, 1)
        self.techlist_stack.addWidget(self.page_19)
        self.page_20 = QtGui.QWidget()
        self.page_20.setObjectName(_fromUtf8("page_20"))
        self.gridLayout_20 = QtGui.QGridLayout(self.page_20)
        self.gridLayout_20.setObjectName(_fromUtf8("gridLayout_20"))
        self.WT_inputgroup = QtGui.QGroupBox(self.page_20)
        self.WT_inputgroup.setObjectName(_fromUtf8("WT_inputgroup"))
        self.label_17 = QtGui.QLabel(self.WT_inputgroup)
        self.label_17.setGeometry(QtCore.QRect(30, 50, 281, 16))
        self.label_17.setObjectName(_fromUtf8("label_17"))
        self.label_73 = QtGui.QLabel(self.WT_inputgroup)
        self.label_73.setGeometry(QtCore.QRect(360, 10, 101, 141))
        self.label_73.setText(_fromUtf8(""))
        self.label_73.setPixmap(QtGui.QPixmap(_fromUtf8(":/techplacement/tech_composttoilet.png")))
        self.label_73.setObjectName(_fromUtf8("label_73"))
        self.gridLayout_20.addWidget(self.WT_inputgroup, 0, 0, 1, 1)
        self.techlist_stack.addWidget(self.page_20)
        self.page_23 = QtGui.QWidget()
        self.page_23.setObjectName(_fromUtf8("page_23"))
        self.sorry_page1_4 = QtGui.QLabel(self.page_23)
        self.sorry_page1_4.setGeometry(QtCore.QRect(190, 170, 151, 16))
        self.sorry_page1_4.setObjectName(_fromUtf8("sorry_page1_4"))
        self.techlist_stack.addWidget(self.page_23)
        self.gridLayout_23.addWidget(self.techlist_stack, 0, 1, 1, 1)
        self.regioncity_group = QtGui.QWidget(self.CustomizeTech)
        self.regioncity_group.setMinimumSize(QtCore.QSize(0, 80))
        self.regioncity_group.setObjectName(_fromUtf8("regioncity_group"))
        self.regioncity_title = QtGui.QLabel(self.regioncity_group)
        self.regioncity_title.setGeometry(QtCore.QRect(10, 10, 281, 16))
        self.regioncity_title.setObjectName(_fromUtf8("regioncity_title"))
        self.regioncity_combo = QtGui.QComboBox(self.regioncity_group)
        self.regioncity_combo.setEnabled(False)
        self.regioncity_combo.setGeometry(QtCore.QRect(130, 30, 191, 16))
        self.regioncity_combo.setObjectName(_fromUtf8("regioncity_combo"))
        self.regioncity_combo.addItem(_fromUtf8(""))
        self.regioncity_combo.addItem(_fromUtf8(""))
        self.regioncity_combo.addItem(_fromUtf8(""))
        self.regioncity_combo.addItem(_fromUtf8(""))
        self.regioncity_combo.addItem(_fromUtf8(""))
        self.regioncity_lbl = QtGui.QLabel(self.regioncity_group)
        self.regioncity_lbl.setGeometry(QtCore.QRect(30, 30, 101, 16))
        self.regioncity_lbl.setObjectName(_fromUtf8("regioncity_lbl"))
        self.gridLayout_23.addWidget(self.regioncity_group, 1, 1, 1, 1)
        self.techcustomize_description = QtGui.QTextEdit(self.CustomizeTech)
        self.techcustomize_description.setMinimumSize(QtCore.QSize(231, 80))
        self.techcustomize_description.setMaximumSize(QtCore.QSize(231, 80))
        self.techcustomize_description.setObjectName(_fromUtf8("techcustomize_description"))
        self.gridLayout_23.addWidget(self.techcustomize_description, 1, 0, 1, 1)
        self.techplace_input.addTab(self.CustomizeTech, _fromUtf8(""))
        self.EvalCriteria = QtGui.QWidget()
        self.EvalCriteria.setObjectName(_fromUtf8("EvalCriteria"))
        self.horizontalLayout_17 = QtGui.QHBoxLayout(self.EvalCriteria)
        self.horizontalLayout_17.setObjectName(_fromUtf8("horizontalLayout_17"))
        self.mca_inputs_widget = QtGui.QWidget(self.EvalCriteria)
        self.mca_inputs_widget.setMinimumSize(QtCore.QSize(502, 434))
        self.mca_inputs_widget.setObjectName(_fromUtf8("mca_inputs_widget"))
        self.horizontalLayout_5 = QtGui.QHBoxLayout(self.mca_inputs_widget)
        self.horizontalLayout_5.setMargin(0)
        self.horizontalLayout_5.setObjectName(_fromUtf8("horizontalLayout_5"))
        self.scrollArea = QtGui.QScrollArea(self.mca_inputs_widget)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea.sizePolicy().hasHeightForWidth())
        self.scrollArea.setSizePolicy(sizePolicy)
        self.scrollArea.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName(_fromUtf8("scrollArea"))
        self.scrollAreaWidgetContents_2 = QtGui.QWidget()
        self.scrollAreaWidgetContents_2.setGeometry(QtCore.QRect(0, 0, 465, 597))
        self.scrollAreaWidgetContents_2.setObjectName(_fromUtf8("scrollAreaWidgetContents_2"))
        self.verticalLayout_11 = QtGui.QVBoxLayout(self.scrollAreaWidgetContents_2)
        self.verticalLayout_11.setObjectName(_fromUtf8("verticalLayout_11"))
        self.mca_scoringmat_lbl_2 = QtGui.QLabel(self.scrollAreaWidgetContents_2)
        self.mca_scoringmat_lbl_2.setObjectName(_fromUtf8("mca_scoringmat_lbl_2"))
        self.verticalLayout_11.addWidget(self.mca_scoringmat_lbl_2)
        self.eval_widget = QtGui.QWidget(self.scrollAreaWidgetContents_2)
        self.eval_widget.setMinimumSize(QtCore.QSize(0, 180))
        self.eval_widget.setObjectName(_fromUtf8("eval_widget"))
        self.bottomlines_ecn_check = QtGui.QCheckBox(self.eval_widget)
        self.bottomlines_ecn_check.setGeometry(QtCore.QRect(290, 90, 71, 17))
        self.bottomlines_ecn_check.setObjectName(_fromUtf8("bottomlines_ecn_check"))
        self.bottomlines_tech_check = QtGui.QCheckBox(self.eval_widget)
        self.bottomlines_tech_check.setGeometry(QtCore.QRect(100, 90, 81, 17))
        self.bottomlines_tech_check.setObjectName(_fromUtf8("bottomlines_tech_check"))
        self.bottomlines_soc_check = QtGui.QCheckBox(self.eval_widget)
        self.bottomlines_soc_check.setGeometry(QtCore.QRect(380, 90, 71, 17))
        self.bottomlines_soc_check.setObjectName(_fromUtf8("bottomlines_soc_check"))
        self.bottomlines_env_check = QtGui.QCheckBox(self.eval_widget)
        self.bottomlines_env_check.setGeometry(QtCore.QRect(180, 90, 101, 17))
        self.bottomlines_env_check.setObjectName(_fromUtf8("bottomlines_env_check"))
        self.mca_scoringmat_browse = QtGui.QToolButton(self.eval_widget)
        self.mca_scoringmat_browse.setEnabled(True)
        self.mca_scoringmat_browse.setGeometry(QtCore.QRect(370, 10, 61, 19))
        self.mca_scoringmat_browse.setObjectName(_fromUtf8("mca_scoringmat_browse"))
        self.mca_scoringmat_lbl2 = QtGui.QLabel(self.eval_widget)
        self.mca_scoringmat_lbl2.setGeometry(QtCore.QRect(170, 30, 21, 20))
        self.mca_scoringmat_lbl2.setObjectName(_fromUtf8("mca_scoringmat_lbl2"))
        self.mca_scoringmat_box = QtGui.QLineEdit(self.eval_widget)
        self.mca_scoringmat_box.setGeometry(QtCore.QRect(202, 10, 161, 20))
        self.mca_scoringmat_box.setObjectName(_fromUtf8("mca_scoringmat_box"))
        self.mca_scoringmat_lbl = QtGui.QLabel(self.eval_widget)
        self.mca_scoringmat_lbl.setGeometry(QtCore.QRect(10, 10, 171, 16))
        self.mca_scoringmat_lbl.setObjectName(_fromUtf8("mca_scoringmat_lbl"))
        self.mca_scoringmat_check = QtGui.QCheckBox(self.eval_widget)
        self.mca_scoringmat_check.setGeometry(QtCore.QRect(210, 30, 201, 17))
        self.mca_scoringmat_check.setObjectName(_fromUtf8("mca_scoringmat_check"))
        self.bottomlines_weight_lbl_2 = QtGui.QLabel(self.eval_widget)
        self.bottomlines_weight_lbl_2.setGeometry(QtCore.QRect(20, 90, 51, 16))
        self.bottomlines_weight_lbl_2.setObjectName(_fromUtf8("bottomlines_weight_lbl_2"))
        self.bottomlines_techN_spin = QtGui.QSpinBox(self.eval_widget)
        self.bottomlines_techN_spin.setGeometry(QtCore.QRect(110, 120, 42, 16))
        self.bottomlines_techN_spin.setMaximum(10)
        self.bottomlines_techN_spin.setObjectName(_fromUtf8("bottomlines_techN_spin"))
        self.bottomlines_metrics_lbl = QtGui.QLabel(self.eval_widget)
        self.bottomlines_metrics_lbl.setGeometry(QtCore.QRect(20, 120, 61, 16))
        self.bottomlines_metrics_lbl.setObjectName(_fromUtf8("bottomlines_metrics_lbl"))
        self.bottomlines_envN_spin = QtGui.QSpinBox(self.eval_widget)
        self.bottomlines_envN_spin.setGeometry(QtCore.QRect(200, 120, 42, 16))
        self.bottomlines_envN_spin.setMaximum(10)
        self.bottomlines_envN_spin.setObjectName(_fromUtf8("bottomlines_envN_spin"))
        self.bottomlines_ecnN_spin = QtGui.QSpinBox(self.eval_widget)
        self.bottomlines_ecnN_spin.setGeometry(QtCore.QRect(295, 120, 42, 16))
        self.bottomlines_ecnN_spin.setMaximum(10)
        self.bottomlines_ecnN_spin.setObjectName(_fromUtf8("bottomlines_ecnN_spin"))
        self.bottomlines_socN_spin = QtGui.QSpinBox(self.eval_widget)
        self.bottomlines_socN_spin.setGeometry(QtCore.QRect(380, 120, 42, 16))
        self.bottomlines_socN_spin.setMaximum(10)
        self.bottomlines_socN_spin.setObjectName(_fromUtf8("bottomlines_socN_spin"))
        self.bottomlines_lbl = QtGui.QLabel(self.eval_widget)
        self.bottomlines_lbl.setGeometry(QtCore.QRect(10, 60, 201, 16))
        self.bottomlines_lbl.setObjectName(_fromUtf8("bottomlines_lbl"))
        self.bottomlines_socW_spin = QtGui.QSpinBox(self.eval_widget)
        self.bottomlines_socW_spin.setGeometry(QtCore.QRect(380, 150, 42, 16))
        self.bottomlines_socW_spin.setMaximum(10)
        self.bottomlines_socW_spin.setObjectName(_fromUtf8("bottomlines_socW_spin"))
        self.bottomlines_ecnW_spin = QtGui.QSpinBox(self.eval_widget)
        self.bottomlines_ecnW_spin.setGeometry(QtCore.QRect(295, 150, 42, 16))
        self.bottomlines_ecnW_spin.setMaximum(10)
        self.bottomlines_ecnW_spin.setObjectName(_fromUtf8("bottomlines_ecnW_spin"))
        self.bottomlines_techW_spin = QtGui.QSpinBox(self.eval_widget)
        self.bottomlines_techW_spin.setGeometry(QtCore.QRect(110, 150, 42, 16))
        self.bottomlines_techW_spin.setMaximum(10)
        self.bottomlines_techW_spin.setObjectName(_fromUtf8("bottomlines_techW_spin"))
        self.bottomlines_envW_spin = QtGui.QSpinBox(self.eval_widget)
        self.bottomlines_envW_spin.setGeometry(QtCore.QRect(200, 150, 42, 16))
        self.bottomlines_envW_spin.setMaximum(10)
        self.bottomlines_envW_spin.setObjectName(_fromUtf8("bottomlines_envW_spin"))
        self.bottomlines_mode_lbl = QtGui.QLabel(self.eval_widget)
        self.bottomlines_mode_lbl.setGeometry(QtCore.QRect(20, 150, 81, 16))
        self.bottomlines_mode_lbl.setObjectName(_fromUtf8("bottomlines_mode_lbl"))
        self.verticalLayout_11.addWidget(self.eval_widget)
        self.strat_scoring_lbl = QtGui.QLabel(self.scrollAreaWidgetContents_2)
        self.strat_scoring_lbl.setObjectName(_fromUtf8("strat_scoring_lbl"))
        self.verticalLayout_11.addWidget(self.strat_scoring_lbl)
        self.scoring_widget = QtGui.QWidget(self.scrollAreaWidgetContents_2)
        self.scoring_widget.setMinimumSize(QtCore.QSize(0, 180))
        self.scoring_widget.setObjectName(_fromUtf8("scoring_widget"))
        self.scope_stoch_check = QtGui.QCheckBox(self.scoring_widget)
        self.scope_stoch_check.setGeometry(QtCore.QRect(110, 70, 161, 17))
        self.scope_stoch_check.setObjectName(_fromUtf8("scope_stoch_check"))
        self.eval_method_combo = QtGui.QComboBox(self.scoring_widget)
        self.eval_method_combo.setGeometry(QtCore.QRect(110, 40, 311, 22))
        self.eval_method_combo.setObjectName(_fromUtf8("eval_method_combo"))
        self.eval_method_combo.addItem(_fromUtf8(""))
        self.eval_method_combo.addItem(_fromUtf8(""))
        self.eval_method_lbl = QtGui.QLabel(self.scoring_widget)
        self.eval_method_lbl.setGeometry(QtCore.QRect(10, 40, 91, 16))
        self.eval_method_lbl.setObjectName(_fromUtf8("eval_method_lbl"))
        self.radioScoreMax = QtGui.QRadioButton(self.scoring_widget)
        self.radioScoreMax.setGeometry(QtCore.QRect(330, 150, 82, 17))
        self.radioScoreMax.setObjectName(_fromUtf8("radioScoreMax"))
        self.radioScoreAvg = QtGui.QRadioButton(self.scoring_widget)
        self.radioScoreAvg.setGeometry(QtCore.QRect(240, 130, 82, 17))
        self.radioScoreAvg.setObjectName(_fromUtf8("radioScoreAvg"))
        self.radioScoreMin = QtGui.QRadioButton(self.scoring_widget)
        self.radioScoreMin.setGeometry(QtCore.QRect(330, 130, 82, 17))
        self.radioScoreMin.setObjectName(_fromUtf8("radioScoreMin"))
        self.radioScoreMed = QtGui.QRadioButton(self.scoring_widget)
        self.radioScoreMed.setGeometry(QtCore.QRect(240, 150, 82, 17))
        self.radioScoreMed.setObjectName(_fromUtf8("radioScoreMed"))
        self.radioScore_lbl = QtGui.QLabel(self.scoring_widget)
        self.radioScore_lbl.setGeometry(QtCore.QRect(10, 130, 231, 16))
        self.radioScore_lbl.setObjectName(_fromUtf8("radioScore_lbl"))
        self.eval_method_lbl2 = QtGui.QLabel(self.scoring_widget)
        self.eval_method_lbl2.setGeometry(QtCore.QRect(10, 10, 91, 16))
        self.eval_method_lbl2.setObjectName(_fromUtf8("eval_method_lbl2"))
        self.eval_methodscore_combo = QtGui.QComboBox(self.scoring_widget)
        self.eval_methodscore_combo.setGeometry(QtCore.QRect(110, 10, 311, 22))
        self.eval_methodscore_combo.setObjectName(_fromUtf8("eval_methodscore_combo"))
        self.eval_methodscore_combo.addItem(_fromUtf8(""))
        self.eval_methodscore_combo.addItem(_fromUtf8(""))
        self.eval_methodscore_combo.addItem(_fromUtf8(""))
        self.iao_influence_spin = QtGui.QSpinBox(self.scoring_widget)
        self.iao_influence_spin.setGeometry(QtCore.QRect(320, 100, 61, 16))
        self.iao_influence_spin.setMinimum(0)
        self.iao_influence_spin.setMaximum(100)
        self.iao_influence_spin.setSingleStep(1)
        self.iao_influence_spin.setProperty("value", 10)
        self.iao_influence_spin.setObjectName(_fromUtf8("iao_influence_spin"))
        self.iao_influence_lbl = QtGui.QLabel(self.scoring_widget)
        self.iao_influence_lbl.setGeometry(QtCore.QRect(10, 100, 301, 16))
        self.iao_influence_lbl.setObjectName(_fromUtf8("iao_influence_lbl"))
        self.verticalLayout_11.addWidget(self.scoring_widget)
        self.top_rank_title = QtGui.QLabel(self.scrollAreaWidgetContents_2)
        self.top_rank_title.setObjectName(_fromUtf8("top_rank_title"))
        self.verticalLayout_11.addWidget(self.top_rank_title)
        self.ranking_widget = QtGui.QWidget(self.scrollAreaWidgetContents_2)
        self.ranking_widget.setMinimumSize(QtCore.QSize(0, 150))
        self.ranking_widget.setObjectName(_fromUtf8("ranking_widget"))
        self.top_options_lbl = QtGui.QLabel(self.ranking_widget)
        self.top_options_lbl.setGeometry(QtCore.QRect(10, 40, 191, 16))
        self.top_options_lbl.setObjectName(_fromUtf8("top_options_lbl"))
        self.top_rank_spin = QtGui.QSpinBox(self.ranking_widget)
        self.top_rank_spin.setGeometry(QtCore.QRect(320, 75, 51, 16))
        self.top_rank_spin.setMinimum(5)
        self.top_rank_spin.setMaximum(100)
        self.top_rank_spin.setSingleStep(5)
        self.top_rank_spin.setObjectName(_fromUtf8("top_rank_spin"))
        self.top_score_combo = QtGui.QComboBox(self.ranking_widget)
        self.top_score_combo.setGeometry(QtCore.QRect(200, 40, 211, 22))
        self.top_score_combo.setObjectName(_fromUtf8("top_score_combo"))
        self.top_score_combo.addItem(_fromUtf8(""))
        self.top_score_combo.addItem(_fromUtf8(""))
        self.top_rank_lbl = QtGui.QLabel(self.ranking_widget)
        self.top_rank_lbl.setGeometry(QtCore.QRect(70, 75, 241, 20))
        self.top_rank_lbl.setObjectName(_fromUtf8("top_rank_lbl"))
        self.top_CI_lbl = QtGui.QLabel(self.ranking_widget)
        self.top_CI_lbl.setGeometry(QtCore.QRect(50, 100, 261, 20))
        self.top_CI_lbl.setObjectName(_fromUtf8("top_CI_lbl"))
        self.top_CI_spin = QtGui.QSpinBox(self.ranking_widget)
        self.top_CI_spin.setGeometry(QtCore.QRect(320, 100, 51, 16))
        self.top_CI_spin.setMinimum(80)
        self.top_CI_spin.setMaximum(99)
        self.top_CI_spin.setSingleStep(1)
        self.top_CI_spin.setProperty("value", 95)
        self.top_CI_spin.setObjectName(_fromUtf8("top_CI_spin"))
        self.strat_select_lbl = QtGui.QLabel(self.ranking_widget)
        self.strat_select_lbl.setGeometry(QtCore.QRect(10, 15, 191, 16))
        self.strat_select_lbl.setObjectName(_fromUtf8("strat_select_lbl"))
        self.strat_select_combo = QtGui.QComboBox(self.ranking_widget)
        self.strat_select_combo.setGeometry(QtCore.QRect(200, 10, 211, 22))
        self.strat_select_combo.setObjectName(_fromUtf8("strat_select_combo"))
        self.strat_select_combo.addItem(_fromUtf8(""))
        self.strat_select_combo.addItem(_fromUtf8(""))
        self.verticalLayout_11.addWidget(self.ranking_widget)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents_2)
        self.horizontalLayout_5.addWidget(self.scrollArea)
        self.horizontalLayout_17.addWidget(self.mca_inputs_widget)
        self.mca_sidebar = QtGui.QFrame(self.EvalCriteria)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.mca_sidebar.sizePolicy().hasHeightForWidth())
        self.mca_sidebar.setSizePolicy(sizePolicy)
        self.mca_sidebar.setMinimumSize(QtCore.QSize(221, 0))
        self.mca_sidebar.setMaximumSize(QtCore.QSize(221, 16777215))
        self.mca_sidebar.setFrameShape(QtGui.QFrame.StyledPanel)
        self.mca_sidebar.setFrameShadow(QtGui.QFrame.Raised)
        self.mca_sidebar.setObjectName(_fromUtf8("mca_sidebar"))
        self.verticalLayout_4 = QtGui.QVBoxLayout(self.mca_sidebar)
        self.verticalLayout_4.setObjectName(_fromUtf8("verticalLayout_4"))
        self.mca_sidebar_img = QtGui.QLabel(self.mca_sidebar)
        self.mca_sidebar_img.setMinimumSize(QtCore.QSize(0, 145))
        self.mca_sidebar_img.setText(_fromUtf8(""))
        self.mca_sidebar_img.setPixmap(QtGui.QPixmap(_fromUtf8(":/techplacement/techevalcrit.png")))
        self.mca_sidebar_img.setObjectName(_fromUtf8("mca_sidebar_img"))
        self.verticalLayout_4.addWidget(self.mca_sidebar_img)
        self.mca_sidebar_descr = QtGui.QTextBrowser(self.mca_sidebar)
        self.mca_sidebar_descr.setObjectName(_fromUtf8("mca_sidebar_descr"))
        self.verticalLayout_4.addWidget(self.mca_sidebar_descr)
        self.horizontalLayout_17.addWidget(self.mca_sidebar)
        self.techplace_input.addTab(self.EvalCriteria, _fromUtf8(""))
        self.verticalLayout.addWidget(self.techplace_input)
        self.techplace_footer = QtGui.QWidget(TechPlace_Dialog)
        self.techplace_footer.setMaximumSize(QtCore.QSize(16777215, 38))
        self.techplace_footer.setObjectName(_fromUtf8("techplace_footer"))
        self.horizontalLayout = QtGui.QHBoxLayout(self.techplace_footer)
        self.horizontalLayout.setMargin(0)
        self.horizontalLayout.setObjectName(_fromUtf8("horizontalLayout"))
        self.remarks = QtGui.QLabel(self.techplace_footer)
        self.remarks.setObjectName(_fromUtf8("remarks"))
        self.horizontalLayout.addWidget(self.remarks)
        self.buttonBox = QtGui.QDialogButtonBox(self.techplace_footer)
        self.buttonBox.setMaximumSize(QtCore.QSize(16777215, 23))
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtGui.QDialogButtonBox.Cancel|QtGui.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName(_fromUtf8("buttonBox"))
        self.horizontalLayout.addWidget(self.buttonBox)
        self.pushButton = QtGui.QPushButton(self.techplace_footer)
        self.pushButton.setObjectName(_fromUtf8("pushButton"))
        self.horizontalLayout.addWidget(self.pushButton)
        self.verticalLayout.addWidget(self.techplace_footer)

        self.retranslateUi(TechPlace_Dialog)
        self.techplace_input.setCurrentIndex(0)
        self.retrofit_stack.setCurrentIndex(0)
        self.techlist_stack.setCurrentIndex(21)
        self.regioncity_combo.setCurrentIndex(2)
        self.eval_method_combo.setCurrentIndex(1)
        self.eval_methodscore_combo.setCurrentIndex(0)
        QtCore.QObject.connect(self.buttonBox, QtCore.SIGNAL(_fromUtf8("accepted()")), TechPlace_Dialog.accept)
        QtCore.QObject.connect(self.buttonBox, QtCore.SIGNAL(_fromUtf8("rejected()")), TechPlace_Dialog.reject)
        QtCore.QObject.connect(self.techlist_widget, QtCore.SIGNAL(_fromUtf8("currentRowChanged(int)")), self.techlist_stack.setCurrentIndex)
        QtCore.QObject.connect(self.area_retrofit_combo, QtCore.SIGNAL(_fromUtf8("currentIndexChanged(int)")), self.retrofit_stack.setCurrentIndex)
        QtCore.QMetaObject.connectSlotsByName(TechPlace_Dialog)
        TechPlace_Dialog.setTabOrder(self.techplace_input, self.buttonBox)
        TechPlace_Dialog.setTabOrder(self.buttonBox, self.pushButton)
        TechPlace_Dialog.setTabOrder(self.pushButton, self.design_crit_inputs)
        TechPlace_Dialog.setTabOrder(self.design_crit_inputs, self.ration_runoff_check)
        TechPlace_Dialog.setTabOrder(self.ration_runoff_check, self.ration_pollute_check)
        TechPlace_Dialog.setTabOrder(self.ration_pollute_check, self.ration_harvest_check)
        TechPlace_Dialog.setTabOrder(self.ration_harvest_check, self.runoff_pri_spin)
        TechPlace_Dialog.setTabOrder(self.runoff_pri_spin, self.pollute_pri_spin)
        TechPlace_Dialog.setTabOrder(self.pollute_pri_spin, self.harvest_pri_spin)
        TechPlace_Dialog.setTabOrder(self.harvest_pri_spin, self.targets_runoff_spin)
        TechPlace_Dialog.setTabOrder(self.targets_runoff_spin, self.targets_reliability_spin)
        TechPlace_Dialog.setTabOrder(self.targets_reliability_spin, self.targets_TSS_spin)
        TechPlace_Dialog.setTabOrder(self.targets_TSS_spin, self.targets_TN_spin)
        TechPlace_Dialog.setTabOrder(self.targets_TN_spin, self.targets_TP_spin)
        TechPlace_Dialog.setTabOrder(self.targets_TP_spin, self.service_swmQty)
        TechPlace_Dialog.setTabOrder(self.service_swmQty, self.service_swmWQ)
        TechPlace_Dialog.setTabOrder(self.service_swmWQ, self.service_rec)
        TechPlace_Dialog.setTabOrder(self.service_rec, self.service_res)
        TechPlace_Dialog.setTabOrder(self.service_res, self.service_hdr)
        TechPlace_Dialog.setTabOrder(self.service_hdr, self.service_com)
        TechPlace_Dialog.setTabOrder(self.service_com, self.service_li)
        TechPlace_Dialog.setTabOrder(self.service_li, self.service_hi)
        TechPlace_Dialog.setTabOrder(self.service_hi, self.service_redundancy)
        TechPlace_Dialog.setTabOrder(self.service_redundancy, self.strategy_lot_check)
        TechPlace_Dialog.setTabOrder(self.strategy_lot_check, self.strategy_lot_rigour)
        TechPlace_Dialog.setTabOrder(self.strategy_lot_rigour, self.strategy_lot_rigour_box)
        TechPlace_Dialog.setTabOrder(self.strategy_lot_rigour_box, self.strategy_street_check)
        TechPlace_Dialog.setTabOrder(self.strategy_street_check, self.strategy_street_rigour)
        TechPlace_Dialog.setTabOrder(self.strategy_street_rigour, self.strategy_street_rigour_box)
        TechPlace_Dialog.setTabOrder(self.strategy_street_rigour_box, self.strategy_neigh_check)
        TechPlace_Dialog.setTabOrder(self.strategy_neigh_check, self.strategy_neigh_rigour)
        TechPlace_Dialog.setTabOrder(self.strategy_neigh_rigour, self.strategy_neigh_rigour_box)
        TechPlace_Dialog.setTabOrder(self.strategy_neigh_rigour_box, self.strategy_subbas_check)
        TechPlace_Dialog.setTabOrder(self.strategy_subbas_check, self.strategy_subbas_rigour)
        TechPlace_Dialog.setTabOrder(self.strategy_subbas_rigour, self.strategy_subbas_rigour_box)
        TechPlace_Dialog.setTabOrder(self.strategy_subbas_rigour_box, self.strategy_scalepref_slider)
        TechPlace_Dialog.setTabOrder(self.strategy_scalepref_slider, self.design_crit_sidebar_descr)
        TechPlace_Dialog.setTabOrder(self.design_crit_sidebar_descr, self.design_crit_inputs_2)
        TechPlace_Dialog.setTabOrder(self.design_crit_inputs_2, self.area_retrofit_combo)
        TechPlace_Dialog.setTabOrder(self.area_retrofit_combo, self.retrofit_renewal_check)
        TechPlace_Dialog.setTabOrder(self.retrofit_renewal_check, self.renewal_lot_spin)
        TechPlace_Dialog.setTabOrder(self.renewal_lot_spin, self.renewal_lot_years)
        TechPlace_Dialog.setTabOrder(self.renewal_lot_years, self.renewal_street_years)
        TechPlace_Dialog.setTabOrder(self.renewal_street_years, self.renewal_neigh_years)
        TechPlace_Dialog.setTabOrder(self.renewal_neigh_years, self.retrofit_forced_street_check)
        TechPlace_Dialog.setTabOrder(self.retrofit_forced_street_check, self.retrofit_forced_neigh_check)
        TechPlace_Dialog.setTabOrder(self.retrofit_forced_neigh_check, self.retrofit_forced_prec_check)
        TechPlace_Dialog.setTabOrder(self.retrofit_forced_prec_check, self.lot_renew_check)
        TechPlace_Dialog.setTabOrder(self.lot_renew_check, self.lot_decom_check)
        TechPlace_Dialog.setTabOrder(self.lot_decom_check, self.street_renew_check)
        TechPlace_Dialog.setTabOrder(self.street_renew_check, self.street_decom_check)
        TechPlace_Dialog.setTabOrder(self.street_decom_check, self.neigh_renew_check)
        TechPlace_Dialog.setTabOrder(self.neigh_renew_check, self.neigh_decom_check)
        TechPlace_Dialog.setTabOrder(self.neigh_decom_check, self.prec_renew_check)
        TechPlace_Dialog.setTabOrder(self.prec_renew_check, self.prec_decom_check)
        TechPlace_Dialog.setTabOrder(self.prec_decom_check, self.decom_slider)
        TechPlace_Dialog.setTabOrder(self.decom_slider, self.decom_box)
        TechPlace_Dialog.setTabOrder(self.decom_box, self.renew_slider)
        TechPlace_Dialog.setTabOrder(self.renew_slider, self.renew_box)
        TechPlace_Dialog.setTabOrder(self.renew_box, self.radioKeep)
        TechPlace_Dialog.setTabOrder(self.radioKeep, self.radioDecom)
        TechPlace_Dialog.setTabOrder(self.radioDecom, self.design_crit_sidebar_descr_2)
        TechPlace_Dialog.setTabOrder(self.design_crit_sidebar_descr_2, self.design_crit_inputs_3)
        TechPlace_Dialog.setTabOrder(self.design_crit_inputs_3, self.freq_kitchen_box)
        TechPlace_Dialog.setTabOrder(self.freq_kitchen_box, self.freq_shower_box)
        TechPlace_Dialog.setTabOrder(self.freq_shower_box, self.freq_toilet_box)
        TechPlace_Dialog.setTabOrder(self.freq_toilet_box, self.freq_laundry_box)
        TechPlace_Dialog.setTabOrder(self.freq_laundry_box, self.dur_kitchen_box)
        TechPlace_Dialog.setTabOrder(self.dur_kitchen_box, self.dur_shower_box)
        TechPlace_Dialog.setTabOrder(self.dur_shower_box, self.dur_toilet_box)
        TechPlace_Dialog.setTabOrder(self.dur_toilet_box, self.dur_laundry_box)
        TechPlace_Dialog.setTabOrder(self.dur_laundry_box, self.demandvary_kitchen_box)
        TechPlace_Dialog.setTabOrder(self.demandvary_kitchen_box, self.demandvary_shower_box)
        TechPlace_Dialog.setTabOrder(self.demandvary_shower_box, self.demandvary_toilet_box)
        TechPlace_Dialog.setTabOrder(self.demandvary_toilet_box, self.demandvary_laundry_box)
        TechPlace_Dialog.setTabOrder(self.demandvary_laundry_box, self.ffp_kitchen_combo)
        TechPlace_Dialog.setTabOrder(self.ffp_kitchen_combo, self.ffp_shower_combo)
        TechPlace_Dialog.setTabOrder(self.ffp_shower_combo, self.ffp_toilet_combo)
        TechPlace_Dialog.setTabOrder(self.ffp_toilet_combo, self.ffp_laundry_combo)
        TechPlace_Dialog.setTabOrder(self.ffp_laundry_combo, self.priv_irr_vol_box)
        TechPlace_Dialog.setTabOrder(self.priv_irr_vol_box, self.ffp_garden_combo)
        TechPlace_Dialog.setTabOrder(self.ffp_garden_combo, self.comdemand_box)
        TechPlace_Dialog.setTabOrder(self.comdemand_box, self.comdemand_spin)
        TechPlace_Dialog.setTabOrder(self.comdemand_spin, self.comdemand_units)
        TechPlace_Dialog.setTabOrder(self.comdemand_units, self.lidemand_box)
        TechPlace_Dialog.setTabOrder(self.lidemand_box, self.lidemand_spin)
        TechPlace_Dialog.setTabOrder(self.lidemand_spin, self.lidemand_units)
        TechPlace_Dialog.setTabOrder(self.lidemand_units, self.hidemand_box)
        TechPlace_Dialog.setTabOrder(self.hidemand_box, self.hidemand_spin)
        TechPlace_Dialog.setTabOrder(self.hidemand_spin, self.hidemand_units)
        TechPlace_Dialog.setTabOrder(self.hidemand_units, self.public_irr_volume)
        TechPlace_Dialog.setTabOrder(self.public_irr_volume, self.public_irr_nonres)
        TechPlace_Dialog.setTabOrder(self.public_irr_nonres, self.public_irr_pg)
        TechPlace_Dialog.setTabOrder(self.public_irr_pg, self.public_irr_ref)
        TechPlace_Dialog.setTabOrder(self.public_irr_ref, self.public_irr_wq)
        TechPlace_Dialog.setTabOrder(self.public_irr_wq, self.WEF_consider)
        TechPlace_Dialog.setTabOrder(self.WEF_consider, self.WEF_rating_system_combo)
        TechPlace_Dialog.setTabOrder(self.WEF_rating_system_combo, self.WEF_loc_house_check)
        TechPlace_Dialog.setTabOrder(self.WEF_loc_house_check, self.WEF_loc_apart_check)
        TechPlace_Dialog.setTabOrder(self.WEF_loc_apart_check, self.WEF_loc_nonres_check)
        TechPlace_Dialog.setTabOrder(self.WEF_loc_nonres_check, self.WEF_constant_radio)
        TechPlace_Dialog.setTabOrder(self.WEF_constant_radio, self.WEF_constant_combo)
        TechPlace_Dialog.setTabOrder(self.WEF_constant_combo, self.WEF_distribution_radio)
        TechPlace_Dialog.setTabOrder(self.WEF_distribution_radio, self.WEF_distribution_combo)
        TechPlace_Dialog.setTabOrder(self.WEF_distribution_combo, self.WEF_distribution_select)
        TechPlace_Dialog.setTabOrder(self.WEF_distribution_select, self.WEF_distribution_check)
        TechPlace_Dialog.setTabOrder(self.WEF_distribution_check, self.rec_demrange_min)
        TechPlace_Dialog.setTabOrder(self.rec_demrange_min, self.rec_demrange_max)
        TechPlace_Dialog.setTabOrder(self.rec_demrange_max, self.rec_ww_kitchen)
        TechPlace_Dialog.setTabOrder(self.rec_ww_kitchen, self.rec_ww_shower)
        TechPlace_Dialog.setTabOrder(self.rec_ww_shower, self.rec_ww_toilet)
        TechPlace_Dialog.setTabOrder(self.rec_ww_toilet, self.rec_ww_laundry)
        TechPlace_Dialog.setTabOrder(self.rec_ww_laundry, self.radio_hsdown)
        TechPlace_Dialog.setTabOrder(self.radio_hsdown, self.radio_hsup)
        TechPlace_Dialog.setTabOrder(self.radio_hsup, self.radio_hsall)
        TechPlace_Dialog.setTabOrder(self.radio_hsall, self.rec_assessment_combo)
        TechPlace_Dialog.setTabOrder(self.rec_assessment_combo, self.rec_rainfall_spin)
        TechPlace_Dialog.setTabOrder(self.rec_rainfall_spin, self.design_crit_sidebar_descr_3)
        TechPlace_Dialog.setTabOrder(self.design_crit_sidebar_descr_3, self.techselect_scroll)
        TechPlace_Dialog.setTabOrder(self.techselect_scroll, self.AQstatus_box)
        TechPlace_Dialog.setTabOrder(self.AQstatus_box, self.BFstatus_box)
        TechPlace_Dialog.setTabOrder(self.BFstatus_box, self.GRstatus_box)
        TechPlace_Dialog.setTabOrder(self.GRstatus_box, self.ISstatus_box)
        TechPlace_Dialog.setTabOrder(self.ISstatus_box, self.PBstatus_box)
        TechPlace_Dialog.setTabOrder(self.PBstatus_box, self.WSURstatus_box)
        TechPlace_Dialog.setTabOrder(self.WSURstatus_box, self.WSUBstatus_box)
        TechPlace_Dialog.setTabOrder(self.WSUBstatus_box, self.SWstatus_box)
        TechPlace_Dialog.setTabOrder(self.SWstatus_box, self.TPSstatus_box)
        TechPlace_Dialog.setTabOrder(self.TPSstatus_box, self.ASHPstatus_box)
        TechPlace_Dialog.setTabOrder(self.ASHPstatus_box, self.ASRstatus_box)
        TechPlace_Dialog.setTabOrder(self.ASRstatus_box, self.GPTstatus_box)
        TechPlace_Dialog.setTabOrder(self.GPTstatus_box, self.PPLstatus_box)
        TechPlace_Dialog.setTabOrder(self.PPLstatus_box, self.PPstatus_box)
        TechPlace_Dialog.setTabOrder(self.PPstatus_box, self.SFstatus_box)
        TechPlace_Dialog.setTabOrder(self.SFstatus_box, self.WWRRstatus_box)
        TechPlace_Dialog.setTabOrder(self.WWRRstatus_box, self.IRRstatus_box)
        TechPlace_Dialog.setTabOrder(self.IRRstatus_box, self.UTstatus_box)
        TechPlace_Dialog.setTabOrder(self.UTstatus_box, self.WTstatus_box)
        TechPlace_Dialog.setTabOrder(self.WTstatus_box, self.GTstatus_box)
        TechPlace_Dialog.setTabOrder(self.GTstatus_box, self.RTstatus_box)
        TechPlace_Dialog.setTabOrder(self.RTstatus_box, self.choicesb_lbl)
        TechPlace_Dialog.setTabOrder(self.choicesb_lbl, self.techlist_widget)
        TechPlace_Dialog.setTabOrder(self.techlist_widget, self.BFlot_check)
        TechPlace_Dialog.setTabOrder(self.BFlot_check, self.BFstreet_check)
        TechPlace_Dialog.setTabOrder(self.BFstreet_check, self.BFneigh_check)
        TechPlace_Dialog.setTabOrder(self.BFneigh_check, self.BFprec_check)
        TechPlace_Dialog.setTabOrder(self.BFprec_check, self.BFflow_check)
        TechPlace_Dialog.setTabOrder(self.BFflow_check, self.BFpollute_check)
        TechPlace_Dialog.setTabOrder(self.BFpollute_check, self.BFrecycle_check)
        TechPlace_Dialog.setTabOrder(self.BFrecycle_check, self.BFspecs_EDD_combo)
        TechPlace_Dialog.setTabOrder(self.BFspecs_EDD_combo, self.BFspecs_FD_combo)
        TechPlace_Dialog.setTabOrder(self.BFspecs_FD_combo, self.BFdesigncurve_pathbox)
        TechPlace_Dialog.setTabOrder(self.BFdesigncurve_pathbox, self.BFdesigncurve_browse)
        TechPlace_Dialog.setTabOrder(self.BFdesigncurve_browse, self.BFdesignUB_box)
        TechPlace_Dialog.setTabOrder(self.BFdesignUB_box, self.BFminsize_box)
        TechPlace_Dialog.setTabOrder(self.BFminsize_box, self.BFmaxsize_box)
        TechPlace_Dialog.setTabOrder(self.BFmaxsize_box, self.BFavglifespin)
        TechPlace_Dialog.setTabOrder(self.BFavglifespin, self.BFexfil_combo)
        TechPlace_Dialog.setTabOrder(self.BFexfil_combo, self.ISlot_check)
        TechPlace_Dialog.setTabOrder(self.ISlot_check, self.ISstreet_check)
        TechPlace_Dialog.setTabOrder(self.ISstreet_check, self.ISneigh_check)
        TechPlace_Dialog.setTabOrder(self.ISneigh_check, self.ISprec_check)
        TechPlace_Dialog.setTabOrder(self.ISprec_check, self.ISflow_check)
        TechPlace_Dialog.setTabOrder(self.ISflow_check, self.ISpollute_check)
        TechPlace_Dialog.setTabOrder(self.ISpollute_check, self.PBrecycle_check_2)
        TechPlace_Dialog.setTabOrder(self.PBrecycle_check_2, self.ISspecs_EDD_combo)
        TechPlace_Dialog.setTabOrder(self.ISspecs_EDD_combo, self.ISspecs_FD_combo)
        TechPlace_Dialog.setTabOrder(self.ISspecs_FD_combo, self.ISdesigncurve_pathbox)
        TechPlace_Dialog.setTabOrder(self.ISdesigncurve_pathbox, self.ISdesigncurve_browse)
        TechPlace_Dialog.setTabOrder(self.ISdesigncurve_browse, self.ISdesignUB_box)
        TechPlace_Dialog.setTabOrder(self.ISdesignUB_box, self.ISminsize_box)
        TechPlace_Dialog.setTabOrder(self.ISminsize_box, self.ISmaxsize_box)
        TechPlace_Dialog.setTabOrder(self.ISmaxsize_box, self.ISavglifespin)
        TechPlace_Dialog.setTabOrder(self.ISavglifespin, self.ISexfil_combo)
        TechPlace_Dialog.setTabOrder(self.ISexfil_combo, self.checkBox_96)
        TechPlace_Dialog.setTabOrder(self.checkBox_96, self.checkBox_95)
        TechPlace_Dialog.setTabOrder(self.checkBox_95, self.checkBox_103)
        TechPlace_Dialog.setTabOrder(self.checkBox_103, self.checkBox_100)
        TechPlace_Dialog.setTabOrder(self.checkBox_100, self.checkBox_104)
        TechPlace_Dialog.setTabOrder(self.checkBox_104, self.checkBox_93)
        TechPlace_Dialog.setTabOrder(self.checkBox_93, self.checkBox_92)
        TechPlace_Dialog.setTabOrder(self.checkBox_92, self.checkBox_98)
        TechPlace_Dialog.setTabOrder(self.checkBox_98, self.checkBox_90)
        TechPlace_Dialog.setTabOrder(self.checkBox_90, self.checkBox_99)
        TechPlace_Dialog.setTabOrder(self.checkBox_99, self.checkBox_91)
        TechPlace_Dialog.setTabOrder(self.checkBox_91, self.checkBox_101)
        TechPlace_Dialog.setTabOrder(self.checkBox_101, self.checkBox_94)
        TechPlace_Dialog.setTabOrder(self.checkBox_94, self.checkBox_102)
        TechPlace_Dialog.setTabOrder(self.checkBox_102, self.WSURneigh_check)
        TechPlace_Dialog.setTabOrder(self.WSURneigh_check, self.WSURflow_check)
        TechPlace_Dialog.setTabOrder(self.WSURflow_check, self.RTscale_lot_box)
        TechPlace_Dialog.setTabOrder(self.RTscale_lot_box, self.RTscale_street_box)
        TechPlace_Dialog.setTabOrder(self.RTscale_street_box, self.RTscale_neighb_box)
        TechPlace_Dialog.setTabOrder(self.RTscale_neighb_box, self.RTscale_city_box)
        TechPlace_Dialog.setTabOrder(self.RTscale_city_box, self.RTpurp_flood_box)
        TechPlace_Dialog.setTabOrder(self.RTpurp_flood_box, self.RTpurp_treat_box)
        TechPlace_Dialog.setTabOrder(self.RTpurp_treat_box, self.RTpurp_recyc_box)
        TechPlace_Dialog.setTabOrder(self.RTpurp_recyc_box, self.RTdesigncurve_pathbox)
        TechPlace_Dialog.setTabOrder(self.RTdesigncurve_pathbox, self.RTdesigncurve_browse)
        TechPlace_Dialog.setTabOrder(self.RTdesigncurve_browse, self.RTdesignUB_box)
        TechPlace_Dialog.setTabOrder(self.RTdesignUB_box, self.RT_maxdepth_box)
        TechPlace_Dialog.setTabOrder(self.RT_maxdepth_box, self.RT_mindead_box)
        TechPlace_Dialog.setTabOrder(self.RT_mindead_box, self.RTavglifespin)
        TechPlace_Dialog.setTabOrder(self.RTavglifespin, self.WSURpollute_check)
        TechPlace_Dialog.setTabOrder(self.WSURpollute_check, self.WSURrecycle_check)
        TechPlace_Dialog.setTabOrder(self.WSURrecycle_check, self.WSURprec_check)
        TechPlace_Dialog.setTabOrder(self.WSURprec_check, self.checkBox_107)
        TechPlace_Dialog.setTabOrder(self.checkBox_107, self.WSURstreet_check)
        TechPlace_Dialog.setTabOrder(self.WSURstreet_check, self.WSURlot_check)
        TechPlace_Dialog.setTabOrder(self.WSURlot_check, self.PBlot_check)
        TechPlace_Dialog.setTabOrder(self.PBlot_check, self.PBstreet_check)
        TechPlace_Dialog.setTabOrder(self.PBstreet_check, self.PBneigh_check)
        TechPlace_Dialog.setTabOrder(self.PBneigh_check, self.PBprec_check)
        TechPlace_Dialog.setTabOrder(self.PBprec_check, self.PBflow_check)
        TechPlace_Dialog.setTabOrder(self.PBflow_check, self.PBpollute_check)
        TechPlace_Dialog.setTabOrder(self.PBpollute_check, self.PBrecycle_check)
        TechPlace_Dialog.setTabOrder(self.PBrecycle_check, self.PBspecs_combo)
        TechPlace_Dialog.setTabOrder(self.PBspecs_combo, self.PBdesigncurve_pathbox)
        TechPlace_Dialog.setTabOrder(self.PBdesigncurve_pathbox, self.PBdesigncurve_browse)
        TechPlace_Dialog.setTabOrder(self.PBdesigncurve_browse, self.PBdesignUB_box)
        TechPlace_Dialog.setTabOrder(self.PBdesignUB_box, self.PBminsize_box)
        TechPlace_Dialog.setTabOrder(self.PBminsize_box, self.PBmaxsize_box)
        TechPlace_Dialog.setTabOrder(self.PBmaxsize_box, self.PBavglifespin)
        TechPlace_Dialog.setTabOrder(self.PBavglifespin, self.PBexfil_combo)
        TechPlace_Dialog.setTabOrder(self.PBexfil_combo, self.WSURspecs_combo)
        TechPlace_Dialog.setTabOrder(self.WSURspecs_combo, self.WSURdesigncurve_pathbox)
        TechPlace_Dialog.setTabOrder(self.WSURdesigncurve_pathbox, self.WSURdesigncurve_browse)
        TechPlace_Dialog.setTabOrder(self.WSURdesigncurve_browse, self.WSURdesignUB_box)
        TechPlace_Dialog.setTabOrder(self.WSURdesignUB_box, self.WSURminsize_box)
        TechPlace_Dialog.setTabOrder(self.WSURminsize_box, self.checkBox_109)
        TechPlace_Dialog.setTabOrder(self.checkBox_109, self.checkBox_111)
        TechPlace_Dialog.setTabOrder(self.checkBox_111, self.checkBox_108)
        TechPlace_Dialog.setTabOrder(self.checkBox_108, self.WSURmaxsize_box)
        TechPlace_Dialog.setTabOrder(self.WSURmaxsize_box, self.WSURavglifespin)
        TechPlace_Dialog.setTabOrder(self.WSURavglifespin, self.WSURexfil_combo)
        TechPlace_Dialog.setTabOrder(self.WSURexfil_combo, self.checkBox_112)
        TechPlace_Dialog.setTabOrder(self.checkBox_112, self.checkBox_51)
        TechPlace_Dialog.setTabOrder(self.checkBox_51, self.checkBox_56)
        TechPlace_Dialog.setTabOrder(self.checkBox_56, self.checkBox_55)
        TechPlace_Dialog.setTabOrder(self.checkBox_55, self.checkBox_52)
        TechPlace_Dialog.setTabOrder(self.checkBox_52, self.checkBox_53)
        TechPlace_Dialog.setTabOrder(self.checkBox_53, self.checkBox_54)
        TechPlace_Dialog.setTabOrder(self.checkBox_54, self.checkBox_50)
        TechPlace_Dialog.setTabOrder(self.checkBox_50, self.checkBox_106)
        TechPlace_Dialog.setTabOrder(self.checkBox_106, self.checkBox_110)
        TechPlace_Dialog.setTabOrder(self.checkBox_110, self.SWlot_check)
        TechPlace_Dialog.setTabOrder(self.SWlot_check, self.SWstreet_check)
        TechPlace_Dialog.setTabOrder(self.SWstreet_check, self.SWneigh_check)
        TechPlace_Dialog.setTabOrder(self.SWneigh_check, self.SWprec_check)
        TechPlace_Dialog.setTabOrder(self.SWprec_check, self.SWflow_check)
        TechPlace_Dialog.setTabOrder(self.SWflow_check, self.SWpollute_check)
        TechPlace_Dialog.setTabOrder(self.SWpollute_check, self.SWrecycle_check)
        TechPlace_Dialog.setTabOrder(self.SWrecycle_check, self.SWspecs_combo)
        TechPlace_Dialog.setTabOrder(self.SWspecs_combo, self.SWdesigncurve_pathbox)
        TechPlace_Dialog.setTabOrder(self.SWdesigncurve_pathbox, self.SWdesigncurve_browse)
        TechPlace_Dialog.setTabOrder(self.SWdesigncurve_browse, self.SWdesignUB_box)
        TechPlace_Dialog.setTabOrder(self.SWdesignUB_box, self.SWminsize_box)
        TechPlace_Dialog.setTabOrder(self.SWminsize_box, self.SWmaxsize_box)
        TechPlace_Dialog.setTabOrder(self.SWmaxsize_box, self.SWavglifespin)
        TechPlace_Dialog.setTabOrder(self.SWavglifespin, self.SWexfil_combo)
        TechPlace_Dialog.setTabOrder(self.SWexfil_combo, self.regioncity_combo)
        TechPlace_Dialog.setTabOrder(self.regioncity_combo, self.techcustomize_description)
        TechPlace_Dialog.setTabOrder(self.techcustomize_description, self.scrollArea)
        TechPlace_Dialog.setTabOrder(self.scrollArea, self.mca_sidebar_descr)
        TechPlace_Dialog.setTabOrder(self.mca_sidebar_descr, self.mca_scoringmat_box)
        TechPlace_Dialog.setTabOrder(self.mca_scoringmat_box, self.mca_scoringmat_browse)
        TechPlace_Dialog.setTabOrder(self.mca_scoringmat_browse, self.mca_scoringmat_check)
        TechPlace_Dialog.setTabOrder(self.mca_scoringmat_check, self.bottomlines_tech_check)
        TechPlace_Dialog.setTabOrder(self.bottomlines_tech_check, self.bottomlines_env_check)
        TechPlace_Dialog.setTabOrder(self.bottomlines_env_check, self.bottomlines_ecn_check)
        TechPlace_Dialog.setTabOrder(self.bottomlines_ecn_check, self.bottomlines_soc_check)
        TechPlace_Dialog.setTabOrder(self.bottomlines_soc_check, self.bottomlines_techN_spin)
        TechPlace_Dialog.setTabOrder(self.bottomlines_techN_spin, self.bottomlines_envN_spin)
        TechPlace_Dialog.setTabOrder(self.bottomlines_envN_spin, self.bottomlines_ecnN_spin)
        TechPlace_Dialog.setTabOrder(self.bottomlines_ecnN_spin, self.bottomlines_socN_spin)
        TechPlace_Dialog.setTabOrder(self.bottomlines_socN_spin, self.bottomlines_techW_spin)
        TechPlace_Dialog.setTabOrder(self.bottomlines_techW_spin, self.bottomlines_envW_spin)
        TechPlace_Dialog.setTabOrder(self.bottomlines_envW_spin, self.bottomlines_ecnW_spin)
        TechPlace_Dialog.setTabOrder(self.bottomlines_ecnW_spin, self.bottomlines_socW_spin)
        TechPlace_Dialog.setTabOrder(self.bottomlines_socW_spin, self.eval_method_combo)
        TechPlace_Dialog.setTabOrder(self.eval_method_combo, self.scope_stoch_check)
        TechPlace_Dialog.setTabOrder(self.scope_stoch_check, self.radioScoreAvg)
        TechPlace_Dialog.setTabOrder(self.radioScoreAvg, self.radioScoreMin)
        TechPlace_Dialog.setTabOrder(self.radioScoreMin, self.radioScoreMed)
        TechPlace_Dialog.setTabOrder(self.radioScoreMed, self.radioScoreMax)
        TechPlace_Dialog.setTabOrder(self.radioScoreMax, self.top_score_combo)
        TechPlace_Dialog.setTabOrder(self.top_score_combo, self.top_rank_spin)
        TechPlace_Dialog.setTabOrder(self.top_rank_spin, self.top_CI_spin)

    def retranslateUi(self, TechPlace_Dialog):
        TechPlace_Dialog.setWindowTitle(_translate("TechPlace_Dialog", "Dialog", None))
        self.tech_subheading.setText(_translate("TechPlace_Dialog", "Define rules for designing water managment strategies, set priorities, constraints, select available technologies and customize evaluation method", None))
        self.tech_heading.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt; font-weight:600;\">Decentralised Technology Design &amp; Implementation</span></p></body></html>", None))
        self.design_ration_lbl.setWhatsThis(_translate("TechPlace_Dialog", "Select what design goals to consider and what priority they take over each other. Highest priority (1) and Lowest priority (3) influence technology\'s chance of being implemented. Note that equal priority can be set as well, in which case no one design rationale is more important than the other.", None))
        self.design_ration_lbl.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-weight:600;\">Design Rationale</span></p></body></html>", None))
        self.ration_runoff_check.setText(_translate("TechPlace_Dialog", "Runoff Reduction", None))
        self.ration_pollute_check.setText(_translate("TechPlace_Dialog", "Pollution Management", None))
        self.runoff_pri_lbl.setText(_translate("TechPlace_Dialog", "Priority", None))
        self.pollute_pri_lbl.setText(_translate("TechPlace_Dialog", "Priority", None))
        self.pri_explain.setText(_translate("TechPlace_Dialog", "(1 = lowest, 3 = highest)", None))
        self.ration_harvest_check.setText(_translate("TechPlace_Dialog", "Water Recycling", None))
        self.pollute_pri_lbl_2.setText(_translate("TechPlace_Dialog", "Priority", None))
        self.targets_lbl.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-weight:600;\">Water Management Targets</span></p></body></html>", None))
        self.targets_runoff_lbl.setText(_translate("TechPlace_Dialog", "Runoff reduction", None))
        self.targets_runoff_spin.setSuffix(_translate("TechPlace_Dialog", "%", None))
        self.targets_TP_lbl.setText(_translate("TechPlace_Dialog", "TP Load Reduction", None))
        self.targets_TSS_spin.setSuffix(_translate("TechPlace_Dialog", "%", None))
        self.targets_TSS_lbl.setText(_translate("TechPlace_Dialog", "TSS Load Reduction", None))
        self.targets_TP_spin.setSuffix(_translate("TechPlace_Dialog", "%", None))
        self.targets_TN_lbl.setText(_translate("TechPlace_Dialog", "TN Load Reduction", None))
        self.targets_TN_spin.setSuffix(_translate("TechPlace_Dialog", "%", None))
        self.targets_reliability_spin.setSuffix(_translate("TechPlace_Dialog", "%", None))
        self.targets_reuse_lbl.setText(_translate("TechPlace_Dialog", "Recycled Water Reliability", None))
        self.targets_qty_header.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-weight:600; font-style:italic;\">Quantity (runoff reduction and/or recycling)</span></p></body></html>", None))
        self.targets_WQ_header.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-weight:600; font-style:italic;\">Quality (pollution management and/or recycling)</span></p></body></html>", None))
        self.service_lbl.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-weight:600;\">Service Levels and Coverage for Water Management</span></p></body></html>", None))
        self.service_lbl2.setText(_translate("TechPlace_Dialog", "Specify Minimum Achievable/Desired Levels of Services for:", None))
        self.service_swmQty.setSuffix(_translate("TechPlace_Dialog", "%", None))
        self.service_swm_lbl.setText(_translate("TechPlace_Dialog", "Stormwater Management:", None))
        self.service_swm_lbl2.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-style:italic;\">(of basin impervious area)</span></p></body></html>", None))
        self.service_wr_lbl.setText(_translate("TechPlace_Dialog", "Water Recycling:", None))
        self.service_lbl2_2.setText(_translate("TechPlace_Dialog", "Select Local Urban Areas to Service (applies lot and street scales only)", None))
        self.service_res.setText(_translate("TechPlace_Dialog", "Residential Dwellings", None))
        self.service_hdr.setText(_translate("TechPlace_Dialog", "Residential Apartments", None))
        self.service_com.setText(_translate("TechPlace_Dialog", "Commercial Estates", None))
        self.service_li.setText(_translate("TechPlace_Dialog", "Light Industrial Estates", None))
        self.service_hi.setText(_translate("TechPlace_Dialog", "Heavy Industrial Estates", None))
        self.service_wr_lbl_2.setText(_translate("TechPlace_Dialog", "Set Allowable Level of Service Redundancy [% exceedence]", None))
        self.service_redundancy.setSuffix(_translate("TechPlace_Dialog", "%", None))
        self.service_swmQty_lbl.setText(_translate("TechPlace_Dialog", "for water quantity", None))
        self.service_swmWQ_lbl.setText(_translate("TechPlace_Dialog", "for water quality", None))
        self.service_swm_lbl3.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-style:italic;\">(of basin impervious area)</span></p></body></html>", None))
        self.service_swmWQ.setSuffix(_translate("TechPlace_Dialog", "%", None))
        self.service_rec.setSuffix(_translate("TechPlace_Dialog", "%", None))
        self.targets_reuse_lbl_2.setText(_translate("TechPlace_Dialog", "for substituting", None))
        self.service_swm_lbl3_2.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-style:italic;\">(of potable water demand)</span></p></body></html>", None))
        self.strategy_lbl.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-weight:600;\">Scope and Levels of Rigour for Planning</span></p></body></html>", None))
        self.strategy_lot_check.setText(_translate("TechPlace_Dialog", "Lot Systems", None))
        self.strategy_street_check.setText(_translate("TechPlace_Dialog", "Street Systems", None))
        self.strategy_neigh_check.setText(_translate("TechPlace_Dialog", "Neighbourhood Systems", None))
        self.strategy_subbas_check.setText(_translate("TechPlace_Dialog", "Sub-basin Systems", None))
        self.strategy_explain.setText(_translate("TechPlace_Dialog", "Select which scales the model should plan strategies at and the rigour it should adopt...", None))
        self.strategy_lot_lbl.setText(_translate("TechPlace_Dialog", "Level of Rigour:", None))
        self.strategy_lot_lbl2.setText(_translate("TechPlace_Dialog", "Very Low", None))
        self.strategy_lot_lbl3.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Moderate</span></p></body></html>", None))
        self.strategy_lot_lbl4.setText(_translate("TechPlace_Dialog", "Very High", None))
        self.strategy_lot_lbl5.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-style:italic;\">(1 to 10)</span></p></body></html>", None))
        self.strategy_street_lbl3.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Moderate</span></p></body></html>", None))
        self.strategy_street_lbl5.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-style:italic;\">(1 to 10)</span></p></body></html>", None))
        self.strategy_street_lbl4.setText(_translate("TechPlace_Dialog", "Very High", None))
        self.strategy_street_lbl.setText(_translate("TechPlace_Dialog", "Level of Rigour:", None))
        self.strategy_street_lbl2.setText(_translate("TechPlace_Dialog", "Very Low", None))
        self.strategy_neigh_lbl3.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Moderate</span></p></body></html>", None))
        self.strategy_neigh_lbl5.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-style:italic;\">(1 to 10)</span></p></body></html>", None))
        self.strategy_neigh_lbl4.setText(_translate("TechPlace_Dialog", "Very High", None))
        self.strategy_neigh_lbl.setText(_translate("TechPlace_Dialog", "Level of Rigour:", None))
        self.strategy_neigh_lbl2.setText(_translate("TechPlace_Dialog", "Very Low", None))
        self.strategy_subbas_lbl2.setText(_translate("TechPlace_Dialog", "Very Low", None))
        self.strategy_subbas_lbl3.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Moderate</span></p></body></html>", None))
        self.strategy_subbas_lbl4.setText(_translate("TechPlace_Dialog", "Very High", None))
        self.strategy_subbas_lbl.setText(_translate("TechPlace_Dialog", "Level of Rigour:", None))
        self.strategy_subbas_lbl5.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-style:italic;\">(1 to 10)</span></p></body></html>", None))
        self.strategy_scalepref_title.setText(_translate("TechPlace_Dialog", "Scale Preference for Planning: ", None))
        self.strategy_scalepref_lbl1.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">At-source</span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">(Small-scale)</span></p></body></html>", None))
        self.strategy_scalepref_lbl3.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">End-of-Pipe</span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">(Large-scale)</span></p></body></html>", None))
        self.strategy_scalepref_lbl2.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Mix of Systems</span></p></body></html>", None))
        self.design_crit_sidebar_descr.setHtml(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Set Best Management Requirements for Decentralised Technologies to achieve. Conditions determined here and applications selected among the technologies will govern selection &amp; placement.</span></p></body></html>", None))
        self.techplace_input.setTabText(self.techplace_input.indexOf(self.DesignCriteria), _translate("TechPlace_Dialog", "General", None))
        self.existing_area_title.setWhatsThis(_translate("TechPlace_Dialog", "Select what design goals to consider and what priority they take over each other. Highest priority (1) and Lowest priority (3) influence technology\'s chance of being implemented. Note that equal priority can be set as well, in which case no one design rationale is more important than the other.", None))
        self.existing_area_title.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">Existing Retrofit Zones</span></p></body></html>", None))
        self.area_retrofit_lbl.setText(_translate("TechPlace_Dialog", "Select Retrofit Scenario for retrofit areas", None))
        self.area_retrofit_combo.setItemText(0, _translate("TechPlace_Dialog", "Do Nothing", None))
        self.area_retrofit_combo.setItemText(1, _translate("TechPlace_Dialog", "With Renewal", None))
        self.area_retrofit_combo.setItemText(2, _translate("TechPlace_Dialog", "Forced Retrofit", None))
        self.retrofit_nothing_group.setTitle(_translate("TechPlace_Dialog", "DO NOTHING SCENARIO", None))
        self.retrofit_nothing_lbl.setWhatsThis(_translate("TechPlace_Dialog", "Adjust the weighting of each criteria. Assign an importance score between 1 and 10 to each of the selected bottom lines.", None))
        self.retrofit_nothing_lbl.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Nothing will \'literally\' be done to existing retrofit areas</p></body></html>", None))
        self.retrofit_renewal_group.setTitle(_translate("TechPlace_Dialog", "WITH RENEWAL SCENARIO", None))
        self.renewal_lot_years.setSuffix(_translate("TechPlace_Dialog", " years", None))
        self.retrofit_renewal_descr1.setWhatsThis(_translate("TechPlace_Dialog", "Adjust the weighting of each criteria. Assign an importance score between 1 and 10 to each of the selected bottom lines.", None))
        self.retrofit_renewal_descr1.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Define renewal cycles unless land use change data is available</span></p></body></html>", None))
        self.retrofit_renewal_check.setText(_translate("TechPlace_Dialog", "Customize Renewal Cycles (set % renewal every x years)", None))
        self.retrofit_renewal_lbl.setText(_translate("TechPlace_Dialog", "of building stock renewed every ", None))
        self.renewal_lot_spin.setSuffix(_translate("TechPlace_Dialog", "%", None))
        self.retrofit_renewal_lbl_2.setText(_translate("TechPlace_Dialog", "Lot-Scale:", None))
        self.retrofit_renewal_lbl_3.setText(_translate("TechPlace_Dialog", "Street-Scale:", None))
        self.renewal_street_years.setSuffix(_translate("TechPlace_Dialog", " years", None))
        self.retrofit_renewal_lbl_4.setText(_translate("TechPlace_Dialog", "Neighbourhood/Precinct Scales:", None))
        self.renewal_neigh_years.setSuffix(_translate("TechPlace_Dialog", " years", None))
        self.retrofit_renewal_lbl_5.setText(_translate("TechPlace_Dialog", "renewal cycles", None))
        self.retrofit_renewal_lbl_6.setText(_translate("TechPlace_Dialog", "renewal cycles", None))
        self.retrofit_forced_group.setTitle(_translate("TechPlace_Dialog", "FORCED RETROFIT SCENARIO", None))
        self.retrofit_forced_street_check.setText(_translate("TechPlace_Dialog", "Force retrofit on Street-Scale Systems", None))
        self.retrofit_forced_neigh_check.setText(_translate("TechPlace_Dialog", "Force retrofit on Neighbourhood Systems", None))
        self.retrofit_forced_prec_check.setText(_translate("TechPlace_Dialog", "Force retrofit on Precinct-Scale Systems", None))
        self.force_retrofit_lbl.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-style:italic;\">(forced retrofit not allowed on lot-scale, un-checked systems are kept)</span></p></body></html>", None))
        self.existing_sys_title.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-weight:600;\">Life Cycle of Existing System Implementations</span></p></body></html>", None))
        self.existing_lot_lbl.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Lot Scale</span></p></body></html>", None))
        self.existing_street_lbl.setText(_translate("TechPlace_Dialog", "Street Scale", None))
        self.existing_neigh_lbl.setText(_translate("TechPlace_Dialog", "Neighbourhood Scale", None))
        self.lot_renew_check.setText(_translate("TechPlace_Dialog", "Upgrade/Renewal", None))
        self.lot_decom_check.setText(_translate("TechPlace_Dialog", "Decommission", None))
        self.existing_neigh_lbl_2.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-style:italic;\">(by default, existing systems will be kept unless another possibility is checked below)</span></p></body></html>", None))
        self.street_renew_check.setText(_translate("TechPlace_Dialog", "Upgrade/Renewal", None))
        self.street_decom_check.setText(_translate("TechPlace_Dialog", "Decommission", None))
        self.neigh_decom_check.setText(_translate("TechPlace_Dialog", "Decommission", None))
        self.neigh_renew_check.setText(_translate("TechPlace_Dialog", "Upgrade/Renewal", None))
        self.prec_decom_check.setText(_translate("TechPlace_Dialog", "Decommission", None))
        self.prec_renew_check.setText(_translate("TechPlace_Dialog", "Upgrade/Renewal", None))
        self.existing_prec_lbl.setText(_translate("TechPlace_Dialog", "Precinct Scale", None))
        self.perf_deviation_lbl.setText(_translate("TechPlace_Dialog", "Adjust Performance Deviation Thresholds:", None))
        self.label_9.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"right\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Decommission if &gt;=</span></p></body></html>", None))
        self.thresholdlbl1.setText(_translate("TechPlace_Dialog", "0%", None))
        self.threshold_lbl2.setText(_translate("TechPlace_Dialog", "100%", None))
        self.label_14.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"right\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Renew if &gt;=</span></p></body></html>", None))
        self.label_18.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">If Renewal not possible:</span></p></body></html>", None))
        self.radioKeep.setText(_translate("TechPlace_Dialog", "Keep", None))
        self.radioDecom.setText(_translate("TechPlace_Dialog", "Decommission", None))
        self.design_crit_sidebar_descr_2.setHtml(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Choose rules to inform the model when dealing with existing built-up areas. Depending on the type of retrofit, the model will process information about existing systems in the area and either keep, modify or remove them from the landscape to make space for newer systems.</span></p></body></html>", None))
        self.techplace_input.setTabText(self.techplace_input.indexOf(self.RetrofitRules), _translate("TechPlace_Dialog", "Retrofit", None))
        self.demand_title.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-weight:600;\">Water Demand Patterns</span></p></body></html>", None))
        self.demand_laundry_lbl.setWhatsThis(_translate("TechPlace_Dialog", "Laundry = washing machine water use calculated based on number of uses per day (if less than one wash per day convert value from weekly washes to daily).", None))
        self.demand_laundry_lbl.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-weight:600;\">Laundry</span></p></body></html>", None))
        self.ffp_lbl.setWhatsThis(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Select the minimum water quality requirement to source from when meeting demand (default: PO).</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">PO = Potable Water</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">NP = Non-potable Water</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">RW = Rainwater</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">SW = Stormwater</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">GW = Greywater</span></p></body></html>", None))
        self.ffp_lbl.setText(_translate("TechPlace_Dialog", "Minimum Fit-for-purpose Source", None))
        self.dur_lbl.setWhatsThis(_translate("TechPlace_Dialog", "How long is each facility used for? (Does not apply to toilets or laundry as the usage amount is based on frequency).", None))
        self.dur_lbl.setText(_translate("TechPlace_Dialog", "Avg. Duration of use [mins]", None))
        self.freq_lbl.setWhatsThis(_translate("TechPlace_Dialog", "How many times does the household/person use the facility per day?\n"
"Kitchen = Household\n"
"Shower = Person\n"
"Toilet = Person\n"
"Laundry = Household", None))
        self.freq_lbl.setText(_translate("TechPlace_Dialog", "Avg. Frequency of use  [per day]", None))
        self.ffp_kitchen_combo.setItemText(0, _translate("TechPlace_Dialog", "PO", None))
        self.ffp_kitchen_combo.setItemText(1, _translate("TechPlace_Dialog", "NP", None))
        self.ffp_kitchen_combo.setItemText(2, _translate("TechPlace_Dialog", "RW", None))
        self.ffp_kitchen_combo.setItemText(3, _translate("TechPlace_Dialog", "SW", None))
        self.ffp_kitchen_combo.setItemText(4, _translate("TechPlace_Dialog", "GW", None))
        self.demand_shower_lbl.setWhatsThis(_translate("TechPlace_Dialog", "Shower = bathroom shower, not including bathtub. Shower head water usage taken from AS6400 unless otherwise customized.", None))
        self.demand_shower_lbl.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-weight:600;\">Shower</span></p></body></html>", None))
        self.ffp_shower_combo.setItemText(0, _translate("TechPlace_Dialog", "PO", None))
        self.ffp_shower_combo.setItemText(1, _translate("TechPlace_Dialog", "NP", None))
        self.ffp_shower_combo.setItemText(2, _translate("TechPlace_Dialog", "RW", None))
        self.ffp_shower_combo.setItemText(3, _translate("TechPlace_Dialog", "SW", None))
        self.ffp_shower_combo.setItemText(4, _translate("TechPlace_Dialog", "GW", None))
        self.t2t_house_lbl.setWhatsThis(_translate("TechPlace_Dialog", "Estimate of the annual irrigation volume per hectare", None))
        self.t2t_house_lbl.setText(_translate("TechPlace_Dialog", "Approximate Annual Irrigation Volume [ML/ha/year]", None))
        self.ffp_toilet_combo.setItemText(0, _translate("TechPlace_Dialog", "PO", None))
        self.ffp_toilet_combo.setItemText(1, _translate("TechPlace_Dialog", "NP", None))
        self.ffp_toilet_combo.setItemText(2, _translate("TechPlace_Dialog", "RW", None))
        self.ffp_toilet_combo.setItemText(3, _translate("TechPlace_Dialog", "SW", None))
        self.ffp_toilet_combo.setItemText(4, _translate("TechPlace_Dialog", "GW", None))
        self.ffp_laundry_combo.setItemText(0, _translate("TechPlace_Dialog", "PO", None))
        self.ffp_laundry_combo.setItemText(1, _translate("TechPlace_Dialog", "NP", None))
        self.ffp_laundry_combo.setItemText(2, _translate("TechPlace_Dialog", "RW", None))
        self.ffp_laundry_combo.setItemText(3, _translate("TechPlace_Dialog", "SW", None))
        self.ffp_laundry_combo.setItemText(4, _translate("TechPlace_Dialog", "GW", None))
        self.demand_toilet_lbl.setWhatsThis(_translate("TechPlace_Dialog", "Toilet = flushes made per person per day determines total water use. Dual-flush toilets/waterless toilets and urine-separating toilets are customized under technologies.", None))
        self.demand_toilet_lbl.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-weight:600;\">Toilet</span></p></body></html>", None))
        self.ffp_garden_combo.setItemText(0, _translate("TechPlace_Dialog", "PO", None))
        self.ffp_garden_combo.setItemText(1, _translate("TechPlace_Dialog", "NP", None))
        self.ffp_garden_combo.setItemText(2, _translate("TechPlace_Dialog", "RW", None))
        self.ffp_garden_combo.setItemText(3, _translate("TechPlace_Dialog", "SW", None))
        self.ffp_garden_combo.setItemText(4, _translate("TechPlace_Dialog", "GW", None))
        self.ffp_garden_lbl.setWhatsThis(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Select the minimum water quality requirement to source from when meeting demand.</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">PO = Potable Water</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">NP = Non-potable Water</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">RW = Rainwater</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">SW = Stormwater</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">GW = Greywater</span></p></body></html>", None))
        self.ffp_garden_lbl.setText(_translate("TechPlace_Dialog", "Minimum Irrigation Water Quality", None))
        self.demandvary_lbl.setWhatsThis(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">A stochastic variability used to scale the daily household demand. Will be scaled according to the number of households in the block. Specify a percent, demand value will be scaled according to a random number drawin within this range.</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-style:italic;\">e.g. +/- 5% will see demand being multiplied by a number between 0.95 and 1.05.</span></p></body></html>", None))
        self.demandvary_lbl.setText(_translate("TechPlace_Dialog", "Daily demand variation [+/- %]", None))
        self.demand_kitchen_lbl.setWhatsThis(_translate("TechPlace_Dialog", "Kitchen = kitchen tap, water for cooking and washing up. Demand is calculated from both tap and partly from dishwasher using values from AS6400 unless otherwise customized.", None))
        self.demand_kitchen_lbl.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-weight:600;\">Kitchen</span></p></body></html>", None))
        self.res_demand_title_2.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-weight:600; font-style:italic;\">Residential Water Use</span></p></body></html>", None))
        self.res_demand_title_3.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-weight:600; font-style:italic;\">Non-Residential Water Use</span></p></body></html>", None))
        self.lidemand_spin.setSuffix(_translate("TechPlace_Dialog", "%", None))
        self.lidemand_lbl.setText(_translate("TechPlace_Dialog", "Light Industrial Water Demand", None))
        self.comdemand_spin.setSuffix(_translate("TechPlace_Dialog", "%", None))
        self.comdemand_lbl.setText(_translate("TechPlace_Dialog", "Commercial Water Demand", None))
        self.hidemand_spin.setSuffix(_translate("TechPlace_Dialog", "%", None))
        self.lidemand_pm.setText(_translate("TechPlace_Dialog", "+/-", None))
        self.comdemand_pm.setText(_translate("TechPlace_Dialog", "+/-", None))
        self.hidemand_lbl.setText(_translate("TechPlace_Dialog", "Heavy Industrial Water Demand", None))
        self.hidemand_pm.setText(_translate("TechPlace_Dialog", "+/-", None))
        self.public_irr_title.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-weight:600; font-style:italic;\">Public Open Space Irrigation</span></p></body></html>", None))
        self.public_irr_lbl2.setWhatsThis(_translate("TechPlace_Dialog", "Based on Aquacycle\'s calibration parameter. If soil moisture drops below this value, irrigation will occur to refill the soil moisture store. Specify as a proportion (e.g. 0.5 for 50%)", None))
        self.public_irr_lbl2.setText(_translate("TechPlace_Dialog", "Select Open Spaces to Irrigate:", None))
        self.public_irr_wq.setItemText(0, _translate("TechPlace_Dialog", "PO", None))
        self.public_irr_wq.setItemText(1, _translate("TechPlace_Dialog", "NP", None))
        self.public_irr_wq.setItemText(2, _translate("TechPlace_Dialog", "RW", None))
        self.public_irr_wq.setItemText(3, _translate("TechPlace_Dialog", "SW", None))
        self.public_irr_wq.setItemText(4, _translate("TechPlace_Dialog", "GW", None))
        self.public_irr_pg.setText(_translate("TechPlace_Dialog", "Parks, Gardens and Green Landmarks", None))
        self.public_irr_lbl.setWhatsThis(_translate("TechPlace_Dialog", "Based on Aquacycle\'s calibration parameter. If soil moisture drops below this value, irrigation will occur to refill the soil moisture store. Specify as a proportion (e.g. 0.5 for 50%)", None))
        self.public_irr_lbl.setText(_translate("TechPlace_Dialog", "Approximate Annual Irrigation Volume [ML/ha/year]", None))
        self.public_irr_ref.setText(_translate("TechPlace_Dialog", "Reserves & Floodways", None))
        self.public_irr_lbl3.setWhatsThis(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Select the minimum water quality requirement to source from when meeting demand.</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">PO = Potable Water</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">NP = Non-potable Water</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">RW = Rainwater</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">SW = Stormwater</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">GW = Greywater</span></p></body></html>", None))
        self.public_irr_lbl3.setText(_translate("TechPlace_Dialog", "Minimum Public Irrigation Water Quality", None))
        self.public_irr_nonres.setText(_translate("TechPlace_Dialog", "Non-residential Landscaping", None))
        self.demandvary_kitchen_box.setSuffix(_translate("TechPlace_Dialog", "%", None))
        self.demandvary_shower_box.setSuffix(_translate("TechPlace_Dialog", "%", None))
        self.demandvary_toilet_box.setSuffix(_translate("TechPlace_Dialog", "%", None))
        self.demandvary_laundry_box.setSuffix(_translate("TechPlace_Dialog", "%", None))
        self.comdemand_units.setItemText(0, _translate("TechPlace_Dialog", "L/sqm/day", None))
        self.comdemand_units.setItemText(1, _translate("TechPlace_Dialog", "L/cap/day", None))
        self.lidemand_units.setItemText(0, _translate("TechPlace_Dialog", "L/sqm/day", None))
        self.lidemand_units.setItemText(1, _translate("TechPlace_Dialog", "L/cap/day", None))
        self.hidemand_units.setItemText(0, _translate("TechPlace_Dialog", "L/sqm/day", None))
        self.hidemand_units.setItemText(1, _translate("TechPlace_Dialog", "L/cap/day", None))
        self.wef_lbl.setWhatsThis(_translate("TechPlace_Dialog", "Select what design goals to consider and what priority they take over each other. Highest priority (1) and Lowest priority (3) influence technology\'s chance of being implemented. Note that equal priority can be set as well, in which case no one design rationale is more important than the other.", None))
        self.wef_lbl.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-weight:600;\">Water Efficiency Settings for Region</span></p></body></html>", None))
        self.WEF_rating_system_lbl.setText(_translate("TechPlace_Dialog", "Rating System:", None))
        self.WEF_loc_house_check.setText(_translate("TechPlace_Dialog", "Houses", None))
        self.WEF_loc_nonres_check.setText(_translate("TechPlace_Dialog", "All Non-Residential Districts", None))
        self.WEF_rating_system_combo.setItemText(0, _translate("TechPlace_Dialog", "AS/NZ 6400:2005", None))
        self.WEF_rating_system_combo.setItemText(1, _translate("TechPlace_Dialog", "Others...", None))
        self.WED_loc_lbl.setText(_translate("TechPlace_Dialog", "Locations:", None))
        self.WEF_loc_apart_check.setText(_translate("TechPlace_Dialog", "Apartments", None))
        self.WED_loc_lbl2.setText(_translate("TechPlace_Dialog", "Method for determining water efficiency within region:", None))
        self.WEF_constant_radio.setText(_translate("TechPlace_Dialog", "Constant Rating", None))
        self.WEF_distribution_radio.setText(_translate("TechPlace_Dialog", "Freq. Distribution", None))
        self.WEF_constant_lbl.setText(_translate("TechPlace_Dialog", "Select rating level:", None))
        self.WEF_constant_combo.setItemText(0, _translate("TechPlace_Dialog", "1 Star", None))
        self.WEF_constant_combo.setItemText(1, _translate("TechPlace_Dialog", "2 Stars", None))
        self.WEF_constant_combo.setItemText(2, _translate("TechPlace_Dialog", "3 Stars", None))
        self.WEF_constant_combo.setItemText(3, _translate("TechPlace_Dialog", "4 Stars", None))
        self.WEF_constant_combo.setItemText(4, _translate("TechPlace_Dialog", "5 Stars", None))
        self.WEF_constant_combo.setItemText(5, _translate("TechPlace_Dialog", "6 Stars", None))
        self.WEF_consider.setText(_translate("TechPlace_Dialog", "Consider Water Efficiency in Modelling Water Demands", None))
        self.WEF_distribution_lbl2.setText(_translate("TechPlace_Dialog", "Select highest possible rating:", None))
        self.WEF_distribution_combo.setItemText(0, _translate("TechPlace_Dialog", "1 Star", None))
        self.WEF_distribution_combo.setItemText(1, _translate("TechPlace_Dialog", "2 Stars", None))
        self.WEF_distribution_combo.setItemText(2, _translate("TechPlace_Dialog", "3 Stars", None))
        self.WEF_distribution_combo.setItemText(3, _translate("TechPlace_Dialog", "4 Stars", None))
        self.WEF_distribution_combo.setItemText(4, _translate("TechPlace_Dialog", "5 Stars", None))
        self.WEF_distribution_combo.setItemText(5, _translate("TechPlace_Dialog", "6 Stars", None))
        self.WEF_distribution_lbl3.setText(_translate("TechPlace_Dialog", "Type of sampling distribution:", None))
        self.WEF_distribution_select.setItemText(0, _translate("TechPlace_Dialog", "Log-Normal Distribution (High)", None))
        self.WEF_distribution_select.setItemText(1, _translate("TechPlace_Dialog", "Log-Normal Distribution (Low)", None))
        self.WEF_distribution_select.setItemText(2, _translate("TechPlace_Dialog", "Normal Distribution", None))
        self.WEF_distribution_select.setItemText(3, _translate("TechPlace_Dialog", "Uniform Distribution", None))
        self.WEF_distribution_check.setText(_translate("TechPlace_Dialog", "Include \'no rating\' within distribution", None))
        self.recycle_lbl1.setWhatsThis(_translate("TechPlace_Dialog", "Select what design goals to consider and what priority they take over each other. Highest priority (1) and Lowest priority (3) influence technology\'s chance of being implemented. Note that equal priority can be set as well, in which case no one design rationale is more important than the other.", None))
        self.recycle_lbl1.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-weight:600;\">Customize Water Recycling Strategy</span></p></body></html>", None))
        self.rec_wwsource_lbl.setText(_translate("TechPlace_Dialog", "Wastewater sources to harvest:", None))
        self.rec_ww_toilet.setText(_translate("TechPlace_Dialog", "Toilet", None))
        self.rec_ww_kitchen.setText(_translate("TechPlace_Dialog", "Kitchen", None))
        self.rec_ww_shower.setText(_translate("TechPlace_Dialog", "Shower", None))
        self.rec_ww_laundry.setText(_translate("TechPlace_Dialog", "Laundry", None))
        self.rec_demrange_lbl.setText(_translate("TechPlace_Dialog", "Allowable demand range [% of annual total inflow]:", None))
        self.rec_demrange_min.setSuffix(_translate("TechPlace_Dialog", "%", None))
        self.rec_demrange_max.setSuffix(_translate("TechPlace_Dialog", "%", None))
        self.rec_demrange_lbl2.setText(_translate("TechPlace_Dialog", "to", None))
        self.radio_hsup.setText(_translate("TechPlace_Dialog", "Supply Upstream", None))
        self.radio_hsdown.setText(_translate("TechPlace_Dialog", "Supply Downstream", None))
        self.hs_select_lbl.setText(_translate("TechPlace_Dialog", "Select a Regional Harvesting-Supply Strategy: ", None))
        self.radio_hsall.setText(_translate("TechPlace_Dialog", "Supply Surroundings", None))
        self.hs_select_lbl_2.setText(_translate("TechPlace_Dialog", "Harvest Upstream", None))
        self.hs_select_lbl_3.setText(_translate("TechPlace_Dialog", "Harvest Upstream", None))
        self.hs_select_lbl_4.setText(_translate("TechPlace_Dialog", "Harvest Upstream", None))
        self.recycle_lbl2.setWhatsThis(_translate("TechPlace_Dialog", "Select what design goals to consider and what priority they take over each other. Highest priority (1) and Lowest priority (3) influence technology\'s chance of being implemented. Note that equal priority can be set as well, in which case no one design rationale is more important than the other.", None))
        self.recycle_lbl2.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-weight:600;\">Additional Information</span></p></body></html>", None))
        self.rec_assessment_lbl.setText(_translate("TechPlace_Dialog", "Method of Assessment:", None))
        self.rec_assessment_combo.setItemText(0, _translate("TechPlace_Dialog", "Storage-Size Equation (fast, less accurate)", None))
        self.rec_assessment_combo.setItemText(1, _translate("TechPlace_Dialog", "Storage-Behaviour Optimisation (slow, more accurate)", None))
        self.rec_rainfall_lbl.setText(_translate("TechPlace_Dialog", "Years of Rainfall to account for (stormwater harvesting only):", None))
        self.rec_rainfall_spin.setSuffix(_translate("TechPlace_Dialog", " years", None))
        self.swh_benefits_check.setText(_translate("TechPlace_Dialog", "Account for stormwater management benefits from stormwater harvesting", None))
        self.rec_unitrunoff_lbl.setWhatsThis(_translate("TechPlace_Dialog", "The average annual runoff volume in the catchment expressed in terms of impervious catchment. This can be obtained by simulating rainfall runoff processes in the catchment and dividing total runoff volume by catchment impervious area.", None))
        self.rec_unitrunoff_lbl.setText(_translate("TechPlace_Dialog", "Unit Runoff Rate [kL/sqm impervious area]:", None))
        self.rec_unitrunoff_auto.setText(_translate("TechPlace_Dialog", "Auto determine", None))
        self.design_crit_sidebar_descr_3.setHtml(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Customize water demand patterns, water efficiency implementation and how the model should design water recycling strategies. Define how rigorous the assesment should be. Define other aspects that should influence the evaluation of water recycling alongside basic targets and service levels defined previously. Also define how the recycling strategy should be conducted on different land uses and how these contribute to meeting the overall targets and service levels.</span></p></body></html>", None))
        self.techplace_input.setTabText(self.techplace_input.indexOf(self.tab), _translate("TechPlace_Dialog", "Water Use and Recycling", None))
        self.TPSstatus_box.setText(_translate("TechPlace_Dialog", "Tree Pits", None))
        self.WSURstatus_box.setText(_translate("TechPlace_Dialog", "Surface Wetland", None))
        self.WSUBstatus_box.setText(_translate("TechPlace_Dialog", "Subsurface Wetland/Reed Bed", None))
        self.PBstatus_box.setText(_translate("TechPlace_Dialog", "Ponds/Sedimentation Basin", None))
        self.GRstatus_box.setText(_translate("TechPlace_Dialog", "Green Roof", None))
        self.ISstatus_box.setText(_translate("TechPlace_Dialog", "Infiltration System", None))
        self.label_2.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-weight:600;\">Green Infrastructure</span></p></body></html>", None))
        self.SWstatus_box.setText(_translate("TechPlace_Dialog", "Swales/Buffer Strips", None))
        self.BFstatus_box.setText(_translate("TechPlace_Dialog", "Biofiltration System/Raingarden", None))
        self.AQstatus_box.setText(_translate("TechPlace_Dialog", "Aquaculture/Living Systems", None))
        self.instructions_lbl.setText(_translate("TechPlace_Dialog", "Choose which technologies you would like to include in the simulation, set levels and", None))
        self.WWRRstatus_box.setText(_translate("TechPlace_Dialog", "Wastewater Recovery/Recycling Plant", None))
        self.GPTstatus_box.setText(_translate("TechPlace_Dialog", "Gross Pollutant Trap", None))
        self.label_4.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-weight:600;\">Grey Infrastructure</span></p></body></html>", None))
        self.ASHPstatus_box.setText(_translate("TechPlace_Dialog", "Advanced Stormwater Harvesting Plant", None))
        self.PPstatus_box.setText(_translate("TechPlace_Dialog", "Porous/Pervious Pavement", None))
        self.ASRstatus_box.setText(_translate("TechPlace_Dialog", "Aquifer Storage & Recovery System", None))
        self.SFstatus_box.setText(_translate("TechPlace_Dialog", "Sand/Peat/Gravel Filter", None))
        self.PPLstatus_box.setText(_translate("TechPlace_Dialog", "Packaged Plants", None))
        self.label_6.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-weight:600;\">Small Appliances &amp; Equipment</span></p></body></html>", None))
        self.IRRstatus_box.setText(_translate("TechPlace_Dialog", "Subsurface Irrigation System", None))
        self.UTstatus_box.setText(_translate("TechPlace_Dialog", "Urine-Separating Toilets", None))
        self.WTstatus_box.setText(_translate("TechPlace_Dialog", "Waterless/Composting Toilets", None))
        self.RTstatus_box.setText(_translate("TechPlace_Dialog", "Rainwater/Stormwater Tank", None))
        self.GTstatus_box.setText(_translate("TechPlace_Dialog", "Greywater Recycling System", None))
        self.label_3.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-weight:600;\">Tank Systems</span></p></body></html>", None))
        self.instructions_lbl_2.setText(_translate("TechPlace_Dialog", "group if necessary...", None))
        self.choicesb_lbl.setHtml(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Check boxes to consider technology in simulation. You can set technology levels that represent priority rules for their implementation or group these technologies to experiment with different strategies. Then select &quot;customize technology&quot; to specify design, scales of implementation and types of applications.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\"><br /></span></p></body></html>", None))
        self.techplace_input.setTabText(self.techplace_input.indexOf(self.ChooseTech), _translate("TechPlace_Dialog", "Technologies List", None))
        __sortingEnabled = self.techlist_widget.isSortingEnabled()
        self.techlist_widget.setSortingEnabled(False)
        item = self.techlist_widget.item(0)
        item.setText(_translate("TechPlace_Dialog", "Advanced Stormwater Harvesting Plant", None))
        item = self.techlist_widget.item(1)
        item.setText(_translate("TechPlace_Dialog", "Aquaculture/Living Systems", None))
        item = self.techlist_widget.item(2)
        item.setText(_translate("TechPlace_Dialog", "Aquifer Storage & Recovery System", None))
        item = self.techlist_widget.item(3)
        item.setText(_translate("TechPlace_Dialog", "Biofiltration Systems/Raingardens", None))
        item = self.techlist_widget.item(4)
        item.setText(_translate("TechPlace_Dialog", "Green Roofs", None))
        item = self.techlist_widget.item(5)
        item.setText(_translate("TechPlace_Dialog", "Greywater Treatment/Diversion System", None))
        item = self.techlist_widget.item(6)
        item.setText(_translate("TechPlace_Dialog", "Gross Pollutant Trap", None))
        item = self.techlist_widget.item(7)
        item.setText(_translate("TechPlace_Dialog", "Infiltration Systems", None))
        item = self.techlist_widget.item(8)
        item.setText(_translate("TechPlace_Dialog", "Packaged Plants", None))
        item = self.techlist_widget.item(9)
        item.setText(_translate("TechPlace_Dialog", "Ponds & Sedimentation Basins", None))
        item = self.techlist_widget.item(10)
        item.setText(_translate("TechPlace_Dialog", "Porous/Pervious Pavements", None))
        item = self.techlist_widget.item(11)
        item.setText(_translate("TechPlace_Dialog", "Rainwater Tank", None))
        item = self.techlist_widget.item(12)
        item.setText(_translate("TechPlace_Dialog", "Sand/Peat/Gravel Filters", None))
        item = self.techlist_widget.item(13)
        item.setText(_translate("TechPlace_Dialog", "Subsurface Irrigation System", None))
        item = self.techlist_widget.item(14)
        item.setText(_translate("TechPlace_Dialog", "Subsurface Wetlands/Reed Beds", None))
        item = self.techlist_widget.item(15)
        item.setText(_translate("TechPlace_Dialog", "Surface Wetlands", None))
        item = self.techlist_widget.item(16)
        item.setText(_translate("TechPlace_Dialog", "Swales & Buffer Strips", None))
        item = self.techlist_widget.item(17)
        item.setText(_translate("TechPlace_Dialog", "Tree Pits", None))
        item = self.techlist_widget.item(18)
        item.setText(_translate("TechPlace_Dialog", "Urine-Separating Toilets", None))
        item = self.techlist_widget.item(19)
        item.setText(_translate("TechPlace_Dialog", "Wastewater Recovery/Recycling Plant", None))
        item = self.techlist_widget.item(20)
        item.setText(_translate("TechPlace_Dialog", "Waterless/Composting Toilets", None))
        self.techlist_widget.setSortingEnabled(__sortingEnabled)
        self.ASHP_inputgroup.setTitle(_translate("TechPlace_Dialog", "Advanced Stormwater Harvesting Plant", None))
        self.sorry_page1_3.setText(_translate("TechPlace_Dialog", "Sorry, but technology is currently not selectable", None))
        self.AQ_inputgroup.setTitle(_translate("TechPlace_Dialog", "Aquaculture/Living Systems", None))
        self.sorry_page1.setText(_translate("TechPlace_Dialog", "Sorry, but technology is currently not selectable", None))
        self.ASR_inputgroup.setTitle(_translate("TechPlace_Dialog", "Aquifer Storage/Recovery System", None))
        self.sorry_page2.setText(_translate("TechPlace_Dialog", "Sorry, but technology is currently not selectable", None))
        self.BF_inputgroup.setTitle(_translate("TechPlace_Dialog", "Biofiltration System/Raingardens", None))
        self.BFlot_check.setText(_translate("TechPlace_Dialog", "Lot", None))
        self.BFprec_check.setText(_translate("TechPlace_Dialog", "Sub-basin", None))
        self.BFflow_check.setText(_translate("TechPlace_Dialog", "Flow Reduction", None))
        self.BFapps_lbl.setText(_translate("TechPlace_Dialog", "Available Applications", None))
        self.BFpollute_check.setText(_translate("TechPlace_Dialog", "Pollution Control", None))
        self.BFscales_lbl.setText(_translate("TechPlace_Dialog", "Available Scales", None))
        self.BFneigh_check.setText(_translate("TechPlace_Dialog", "Neighbourhood", None))
        self.BFstreet_check.setText(_translate("TechPlace_Dialog", "Street", None))
        self.BFdesignUB_box.setText(_translate("TechPlace_Dialog", "Use UrbanBEATS\' Design Curve Database", None))
        self.BFdesigncurve_browse.setText(_translate("TechPlace_Dialog", "Browse...", None))
        self.BFdesigncurve_lbl.setText(_translate("TechPlace_Dialog", "Load Conceptual Design Curves", None))
        self.BFdesigncurve_lbl2.setText(_translate("TechPlace_Dialog", "or", None))
        self.BFdesigninfo_lbl.setText(_translate("TechPlace_Dialog", "Design Information", None))
        self.BFspecs_FD_combo.setItemText(0, _translate("TechPlace_Dialog", "200mm Filter Depth", None))
        self.BFspecs_FD_combo.setItemText(1, _translate("TechPlace_Dialog", "400mm Filter Depth", None))
        self.BFspecs_FD_combo.setItemText(2, _translate("TechPlace_Dialog", "600mm Filter Depth", None))
        self.BFspecs_FD_combo.setItemText(3, _translate("TechPlace_Dialog", "800mm Filter Depth", None))
        self.BFspecs_lbl.setWhatsThis(_translate("TechPlace_Dialog", "<html><head/><body><p>Low Flow Bypass = </p><p>High Flow Bypass = </p><p>Saturated hydraulic conductivity = 180mm/hr</p><p>TN content of filter media = </p><p>Orthophosphate content of filter media =</p><p>Overflow Weir Width = </p><p><br/></p><p>Unlined Filter Media Perimeter adjusted to maintain aspect ratio</p><p>Unlined filter media base</p><p>Vegetated with effective nutrient removal plants</p><p>Underdrain Present</p><p>Submerged Zone with Carbon Present, depth = 0.45m</p></body></html>", None))
        self.BFspecs_lbl.setText(_translate("TechPlace_Dialog", "Select System Specification:", None))
        self.BFmaxsize_lbl.setText(_translate("TechPlace_Dialog", "Max. allowable system size [sqm]", None))
        self.BFspecs_EDD_combo.setItemText(0, _translate("TechPlace_Dialog", "0mm ED Depth", None))
        self.BFspecs_EDD_combo.setItemText(1, _translate("TechPlace_Dialog", "100mm ED Depth", None))
        self.BFspecs_EDD_combo.setItemText(2, _translate("TechPlace_Dialog", "200mm ED Depth", None))
        self.BFspecs_EDD_combo.setItemText(3, _translate("TechPlace_Dialog", "300mm ED Depth", None))
        self.BFspecs_EDD_combo.setItemText(4, _translate("TechPlace_Dialog", "400mm ED Depth", None))
        self.BFspecs_lbl_2.setText(_translate("TechPlace_Dialog", "X", None))
        self.BFavglifespin.setSuffix(_translate("TechPlace_Dialog", "yrs", None))
        self.BFavglifelbl.setText(_translate("TechPlace_Dialog", "Average System Life Span", None))
        self.BFminsize_lbl.setText(_translate("TechPlace_Dialog", "Min. allowable system size [sqm]", None))
        self.BFrecycle_check.setText(_translate("TechPlace_Dialog", "Recycling", None))
        self.BFexfil_combo.setWhatsThis(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">The likely exfiltration rate from the system (less than the theoretical maximum infiltration rate of the soil). Select this value based on performance data of systems in your city.</span></p></body></html>", None))
        self.BFexfil_combo.setItemText(0, _translate("TechPlace_Dialog", "0 (lined system)", None))
        self.BFexfil_combo.setItemText(1, _translate("TechPlace_Dialog", "0.18 mm/hr", None))
        self.BFexfil_combo.setItemText(2, _translate("TechPlace_Dialog", "0.36 mm/hr", None))
        self.BFexfil_combo.setItemText(3, _translate("TechPlace_Dialog", "1.8 mm/hr", None))
        self.BFexfil_combo.setItemText(4, _translate("TechPlace_Dialog", "3.6 mm/hr", None))
        self.BFexfil_lbl.setText(_translate("TechPlace_Dialog", "Exfiltration Rate:", None))
        self.GR_inputgroup.setTitle(_translate("TechPlace_Dialog", "Green Roof", None))
        self.label_22.setText(_translate("TechPlace_Dialog", "Sorry, but technology is currently not selectable", None))
        self.GT_inputgroup.setTitle(_translate("TechPlace_Dialog", "Greywater Treatment/Diversion System", None))
        self.checkBox_90.setText(_translate("TechPlace_Dialog", "Recycling", None))
        self.checkBox_91.setText(_translate("TechPlace_Dialog", "Lot", None))
        self.checkBox_92.setText(_translate("TechPlace_Dialog", "City-scale", None))
        self.checkBox_93.setText(_translate("TechPlace_Dialog", "Flow Reduction", None))
        self.label_55.setText(_translate("TechPlace_Dialog", "Available Applications", None))
        self.checkBox_94.setText(_translate("TechPlace_Dialog", "Pollution Control", None))
        self.label_57.setText(_translate("TechPlace_Dialog", "Available Scales", None))
        self.checkBox_95.setText(_translate("TechPlace_Dialog", "Neighbourhood", None))
        self.checkBox_96.setText(_translate("TechPlace_Dialog", "Street", None))
        self.GPT_inputgroup.setTitle(_translate("TechPlace_Dialog", "Gross Pollutant Trap", None))
        self.checkBox_98.setText(_translate("TechPlace_Dialog", "Recycling", None))
        self.checkBox_99.setText(_translate("TechPlace_Dialog", "Lot", None))
        self.checkBox_100.setText(_translate("TechPlace_Dialog", "City-scale", None))
        self.checkBox_101.setText(_translate("TechPlace_Dialog", "Flow Control", None))
        self.label_58.setText(_translate("TechPlace_Dialog", "Available Applications", None))
        self.checkBox_102.setText(_translate("TechPlace_Dialog", "Pollution Control", None))
        self.label_60.setText(_translate("TechPlace_Dialog", "Available Scales", None))
        self.checkBox_103.setText(_translate("TechPlace_Dialog", "Neighbourhood", None))
        self.checkBox_104.setText(_translate("TechPlace_Dialog", "Street", None))
        self.IS_inputgroup.setTitle(_translate("TechPlace_Dialog", "Infiltration System", None))
        self.ISlot_check.setText(_translate("TechPlace_Dialog", "Lot", None))
        self.ISstreet_check.setText(_translate("TechPlace_Dialog", "Street", None))
        self.ISneigh_check.setText(_translate("TechPlace_Dialog", "Neighbourhood", None))
        self.ISprec_check.setText(_translate("TechPlace_Dialog", "Sub-basin", None))
        self.ISdesigncurve_browse.setText(_translate("TechPlace_Dialog", "Browse...", None))
        self.ISdesigncurve_lbl.setText(_translate("TechPlace_Dialog", "Load Conceptual Design Curves", None))
        self.ISdesignUB_box.setText(_translate("TechPlace_Dialog", "Use UrbanBEATS\' Design Curve Database", None))
        self.ISpollute_check.setText(_translate("TechPlace_Dialog", "Pollution Control", None))
        self.ISflow_check.setText(_translate("TechPlace_Dialog", "Flow reduction", None))
        self.ISscales_lbl.setText(_translate("TechPlace_Dialog", "Available Scales", None))
        self.ISapps_lbl.setText(_translate("TechPlace_Dialog", "Available Applications", None))
        self.ISdesigncurve_lbl2.setText(_translate("TechPlace_Dialog", "or", None))
        self.ISmodel_lbl.setWhatsThis(_translate("TechPlace_Dialog", "Porosity of filter media, affects the storage volume in the infiltration system.", None))
        self.ISmodel_lbl.setText(_translate("TechPlace_Dialog", "Design Information", None))
        self.ISmaxsize_lbl.setText(_translate("TechPlace_Dialog", "Max. allowable system size [sqm]", None))
        self.ISspecs_lbl.setWhatsThis(_translate("TechPlace_Dialog", "<html><head/><body><p>Filter media porosity = 0.35</p><p>Low Flow Bypass = </p><p>High Flow Bypass = </p><p>Unlined Filter Media Perimeter adjusted to keep aspect ratio</p><p>Evaporative Loss = </p><p>Overflow Weir Width = </p><p>Exfiltration rate adjusted based on on-site conditions</p></body></html>", None))
        self.ISspecs_lbl.setText(_translate("TechPlace_Dialog", "Select System Specification:", None))
        self.ISspecs_EDD_combo.setItemText(0, _translate("TechPlace_Dialog", "100mm ED Depth", None))
        self.ISspecs_EDD_combo.setItemText(1, _translate("TechPlace_Dialog", "200mm ED Depth", None))
        self.ISspecs_EDD_combo.setItemText(2, _translate("TechPlace_Dialog", "300mm ED Depth", None))
        self.ISspecs_EDD_combo.setItemText(3, _translate("TechPlace_Dialog", "400mm ED Depth", None))
        self.ISspecs_FD_combo.setItemText(0, _translate("TechPlace_Dialog", "200mm Filter Depth", None))
        self.ISspecs_FD_combo.setItemText(1, _translate("TechPlace_Dialog", "400mm Filter Depth", None))
        self.ISspecs_FD_combo.setItemText(2, _translate("TechPlace_Dialog", "600mm Filter Depth", None))
        self.ISspecs_FD_combo.setItemText(3, _translate("TechPlace_Dialog", "800mm Filter Depth", None))
        self.ISspecs_lbl_2.setText(_translate("TechPlace_Dialog", "X", None))
        self.ISavglifelbl.setText(_translate("TechPlace_Dialog", "Average System Life Span", None))
        self.ISavglifespin.setSuffix(_translate("TechPlace_Dialog", "yrs", None))
        self.ISminsize_lbl.setText(_translate("TechPlace_Dialog", "Min. allowable system size [sqm]", None))
        self.PBrecycle_check_2.setText(_translate("TechPlace_Dialog", "Recycling", None))
        self.ISexfil_combo.setWhatsThis(_translate("TechPlace_Dialog", "The likely exfiltration rate from the system (less than the theoretical maximum infiltration rate of the soil). Select this value based on performance data of systems in your city.", None))
        self.ISexfil_combo.setItemText(0, _translate("TechPlace_Dialog", "1.8 mm/hr", None))
        self.ISexfil_combo.setItemText(1, _translate("TechPlace_Dialog", "3.6 mm/hr", None))
        self.ISexfil_combo.setItemText(2, _translate("TechPlace_Dialog", "18 mm/hr", None))
        self.ISexfil_combo.setItemText(3, _translate("TechPlace_Dialog", "36 mm/hr", None))
        self.ISexfil_lbl.setText(_translate("TechPlace_Dialog", "Exfiltration Rate:", None))
        self.PPL_inputgroup.setTitle(_translate("TechPlace_Dialog", "Packaged Plants", None))
        self.label_5.setText(_translate("TechPlace_Dialog", "Sorry, but technology is currently not selectable", None))
        self.PB_inputgroup.setTitle(_translate("TechPlace_Dialog", "Ponds/Sedimentation Basin", None))
        self.PBprec_check.setText(_translate("TechPlace_Dialog", "Sub-basin", None))
        self.PBscales_lbl.setText(_translate("TechPlace_Dialog", "Available Scales", None))
        self.PBflow_check.setText(_translate("TechPlace_Dialog", "Flow Reduction", None))
        self.PBapps_lbl.setText(_translate("TechPlace_Dialog", "Available Applications", None))
        self.PBstreet_check.setText(_translate("TechPlace_Dialog", "Street", None))
        self.PBlot_check.setText(_translate("TechPlace_Dialog", "Lot", None))
        self.PBneigh_check.setText(_translate("TechPlace_Dialog", "Neighbourhood", None))
        self.PBpollute_check.setText(_translate("TechPlace_Dialog", "Pollution Control", None))
        self.PBdesigncurve_browse.setText(_translate("TechPlace_Dialog", "Browse...", None))
        self.PBdesigninfo_lbl.setText(_translate("TechPlace_Dialog", "Design Information", None))
        self.PBdesigncurve_lbl.setText(_translate("TechPlace_Dialog", "Load Conceptual Design Curves", None))
        self.PBdesignUB_box.setText(_translate("TechPlace_Dialog", "Use UrbanBEATS\' Design Curve Database", None))
        self.PBdesigncurve_lbl2.setText(_translate("TechPlace_Dialog", "or", None))
        self.PBspecs_combo.setItemText(0, _translate("TechPlace_Dialog", "0.25m Mean Depth, Outflow via Overflow Weir", None))
        self.PBspecs_combo.setItemText(1, _translate("TechPlace_Dialog", "0.50m Mean Depth, Outflow via Overflow Weir", None))
        self.PBspecs_combo.setItemText(2, _translate("TechPlace_Dialog", "0.75m Mean Depth, Outflow via Overflow Weir", None))
        self.PBspecs_combo.setItemText(3, _translate("TechPlace_Dialog", "1.00m Mean Depth, Outflow via Overflow Weir", None))
        self.PBspecs_combo.setItemText(4, _translate("TechPlace_Dialog", "1.25m Mean Depth, Outflow via Overflow Weir", None))
        self.PBmaxsize_lbl.setText(_translate("TechPlace_Dialog", "Max. allowable system size [sqm]", None))
        self.PBspecs_lbl.setWhatsThis(_translate("TechPlace_Dialog", "<html><head/><body><p>Low Flow Bypass = </p><p>High Flow Bypass = </p><p>Permanent Pool Volume = </p><p>Evaporative Loss = </p><p>Overflow Weir Width = </p><p>Detention Time = 72hrs</p></body></html>", None))
        self.PBspecs_lbl.setText(_translate("TechPlace_Dialog", "Select System Specification:", None))
        self.PBavglifelbl.setText(_translate("TechPlace_Dialog", "Average System Life Span", None))
        self.PBavglifespin.setSuffix(_translate("TechPlace_Dialog", "yrs", None))
        self.PBminsize_lbl.setText(_translate("TechPlace_Dialog", "Min. allowable system size [sqm]", None))
        self.PBrecycle_check.setText(_translate("TechPlace_Dialog", "Recycling", None))
        self.PBexfil_lbl.setText(_translate("TechPlace_Dialog", "Exfiltration Rate:", None))
        self.PBexfil_combo.setWhatsThis(_translate("TechPlace_Dialog", "The likely exfiltration rate from the system (less than the theoretical maximum infiltration rate of the soil). Select this value based on performance data of systems in your city.", None))
        self.PBexfil_combo.setItemText(0, _translate("TechPlace_Dialog", "0 (lined system)", None))
        self.PBexfil_combo.setItemText(1, _translate("TechPlace_Dialog", "0.18 mm/hr", None))
        self.PBexfil_combo.setItemText(2, _translate("TechPlace_Dialog", "0.36 mm/hr", None))
        self.PBexfil_combo.setItemText(3, _translate("TechPlace_Dialog", "1.8 mm/hr", None))
        self.PBexfil_combo.setItemText(4, _translate("TechPlace_Dialog", "3.6 mm/hr", None))
        self.PP_inputgroup.setTitle(_translate("TechPlace_Dialog", "Porous/Pervious Pavements", None))
        self.label_7.setText(_translate("TechPlace_Dialog", "Sorry, but technology is currently not selectable", None))
        self.RT_inputgroup.setTitle(_translate("TechPlace_Dialog", "Rainwater/Stormwater Tank", None))
        self.RTpurp_recyc_box.setText(_translate("TechPlace_Dialog", "Recycling", None))
        self.RTscale_lot_box.setText(_translate("TechPlace_Dialog", "Lot", None))
        self.RTscale_city_box.setText(_translate("TechPlace_Dialog", "Sub-basin", None))
        self.RTpurp_flood_box.setText(_translate("TechPlace_Dialog", "Flow Control", None))
        self.RTpurp_lbl.setText(_translate("TechPlace_Dialog", "Available Applications", None))
        self.RTpurp_treat_box.setText(_translate("TechPlace_Dialog", "Pollution Control", None))
        self.RTscale_lbl.setText(_translate("TechPlace_Dialog", "Available Scales", None))
        self.RTscale_neighb_box.setText(_translate("TechPlace_Dialog", "Neighbourhood", None))
        self.RTscale_street_box.setText(_translate("TechPlace_Dialog", "Street", None))
        self.RTdesignUB_box.setText(_translate("TechPlace_Dialog", "Use UrbanBEATS\' Design Curve Database", None))
        self.RTdesigncurve_browse.setText(_translate("TechPlace_Dialog", "Browse...", None))
        self.RTdesigncurve_lbl.setText(_translate("TechPlace_Dialog", "Load Conceptual Design Curves", None))
        self.RTdesigncurve_lbl2.setText(_translate("TechPlace_Dialog", "or", None))
        self.RT_maxdepth_lbl.setWhatsThis(_translate("TechPlace_Dialog", "Depth of the filter media in the system. If infiltrating through sidewalls, larger depth will give greater infiltration.", None))
        self.RT_maxdepth_lbl.setText(_translate("TechPlace_Dialog", "Maximum Tank Depth [m]", None))
        self.RT_mindead_lbl.setWhatsThis(_translate("TechPlace_Dialog", "Depth of the filter media in the system. If infiltrating through sidewalls, larger depth will give greater infiltration.", None))
        self.RT_mindead_lbl.setText(_translate("TechPlace_Dialog", "Min. Dead Storage Level [m]", None))
        self.RTavglifelbl.setText(_translate("TechPlace_Dialog", "Average System Life Span", None))
        self.RTavglifespin.setSuffix(_translate("TechPlace_Dialog", "yrs", None))
        self.RTdesigninfo_lbl.setText(_translate("TechPlace_Dialog", "Design Information", None))
        self.SF_inputgroup.setTitle(_translate("TechPlace_Dialog", "Sand/Peat/Gravel Filters", None))
        self.checkBox_50.setText(_translate("TechPlace_Dialog", "Recycling", None))
        self.checkBox_51.setText(_translate("TechPlace_Dialog", "Lot", None))
        self.checkBox_52.setText(_translate("TechPlace_Dialog", "City-scale", None))
        self.checkBox_53.setText(_translate("TechPlace_Dialog", "Flow Control", None))
        self.label_40.setText(_translate("TechPlace_Dialog", "Available Applications", None))
        self.checkBox_54.setText(_translate("TechPlace_Dialog", "Pollution Control", None))
        self.label_42.setText(_translate("TechPlace_Dialog", "Available Scales", None))
        self.checkBox_55.setText(_translate("TechPlace_Dialog", "Neighbourhood", None))
        self.checkBox_56.setText(_translate("TechPlace_Dialog", "Street", None))
        self.IRR_inputgroup.setTitle(_translate("TechPlace_Dialog", "Subsurface Irrigation System", None))
        self.label_11.setText(_translate("TechPlace_Dialog", "Sorry, but technology is currently not selectable", None))
        self.WSUB_inputgroup.setTitle(_translate("TechPlace_Dialog", "Subsurface Wetlands/Reed Beds", None))
        self.checkBox_106.setText(_translate("TechPlace_Dialog", "Flow Control", None))
        self.checkBox_107.setText(_translate("TechPlace_Dialog", "Lot", None))
        self.label_61.setText(_translate("TechPlace_Dialog", "Available Applications", None))
        self.checkBox_108.setText(_translate("TechPlace_Dialog", "Neighbourhood", None))
        self.checkBox_109.setText(_translate("TechPlace_Dialog", "Pollution Control", None))
        self.checkBox_110.setText(_translate("TechPlace_Dialog", "Street", None))
        self.label_63.setText(_translate("TechPlace_Dialog", "Available Scales", None))
        self.checkBox_111.setText(_translate("TechPlace_Dialog", "Recycling", None))
        self.checkBox_112.setText(_translate("TechPlace_Dialog", "City-scale", None))
        self.WSUR_inputgroup.setTitle(_translate("TechPlace_Dialog", "Surface Wetlands", None))
        self.WSURlot_check.setText(_translate("TechPlace_Dialog", "Lot", None))
        self.WSURprec_check.setText(_translate("TechPlace_Dialog", "Precinct", None))
        self.WSURflow_check.setText(_translate("TechPlace_Dialog", "Flow Reduction", None))
        self.WSURapps_lbl.setText(_translate("TechPlace_Dialog", "Available Applications", None))
        self.WSURpollute_check.setText(_translate("TechPlace_Dialog", "Pollution Control", None))
        self.WSURscales_lbl.setText(_translate("TechPlace_Dialog", "Available Scales", None))
        self.WSURneigh_check.setText(_translate("TechPlace_Dialog", "Neighbourhood", None))
        self.WSURstreet_check.setText(_translate("TechPlace_Dialog", "Street", None))
        self.WSURdesigncurve_lbl2.setText(_translate("TechPlace_Dialog", "or", None))
        self.WSURdesignUB_box.setText(_translate("TechPlace_Dialog", "Use UrbanBEATS\' Design Curve Database", None))
        self.WSURdesigncurve_browse.setText(_translate("TechPlace_Dialog", "Browse...", None))
        self.WSURdesigncurve_lbl.setText(_translate("TechPlace_Dialog", "Load Conceptual Design Curves", None))
        self.WSURdesigninfo_lbl.setText(_translate("TechPlace_Dialog", "Design Information", None))
        self.WSURspecs_lbl.setText(_translate("TechPlace_Dialog", "Select System Specification:", None))
        self.WSURmaxsize_lbl.setText(_translate("TechPlace_Dialog", "Max. allowable system size [sqm]", None))
        self.WSURspecs_combo.setItemText(0, _translate("TechPlace_Dialog", "250mm Ext. Detention Depth, 72hr detention", None))
        self.WSURspecs_combo.setItemText(1, _translate("TechPlace_Dialog", "500mm Ext. Detention Depth, 72hr detention", None))
        self.WSURspecs_combo.setItemText(2, _translate("TechPlace_Dialog", "750mm Ext. Detention Depth, 72hr detention", None))
        self.WSURspecs_combo.setItemText(3, _translate("TechPlace_Dialog", "250mm Ext. Detention Depth, 48hr detention", None))
        self.WSURspecs_combo.setItemText(4, _translate("TechPlace_Dialog", "500mm Ext. Detention Depth, 48hr detention", None))
        self.WSURspecs_combo.setItemText(5, _translate("TechPlace_Dialog", "750mm Ext. Detention Depth, 48hr detention", None))
        self.WSURavglifelbl.setText(_translate("TechPlace_Dialog", "Average System Life Span", None))
        self.WSURavglifespin.setSuffix(_translate("TechPlace_Dialog", "yrs", None))
        self.WSURrecycle_check.setText(_translate("TechPlace_Dialog", "Recycling", None))
        self.WSURminsize_lbl.setText(_translate("TechPlace_Dialog", "Min. allowable system size [sqm]", None))
        self.WSURexfil_combo.setWhatsThis(_translate("TechPlace_Dialog", "The likely exfiltration rate from the system (less than the theoretical maximum infiltration rate of the soil). Select this value based on performance data of systems in your city.", None))
        self.WSURexfil_combo.setItemText(0, _translate("TechPlace_Dialog", "0 (lined system)", None))
        self.WSURexfil_combo.setItemText(1, _translate("TechPlace_Dialog", "0.18 mm/hr", None))
        self.WSURexfil_combo.setItemText(2, _translate("TechPlace_Dialog", "0.36 mm/hr", None))
        self.WSURexfil_combo.setItemText(3, _translate("TechPlace_Dialog", "1.8 mm/hr", None))
        self.WSURexfil_combo.setItemText(4, _translate("TechPlace_Dialog", "3.6 mm/hr", None))
        self.WSURexfil_lbl.setText(_translate("TechPlace_Dialog", "Exfiltration Rate:", None))
        self.SW_inputgroup.setTitle(_translate("TechPlace_Dialog", "Swales/Buffer Strips", None))
        self.SWlot_check.setText(_translate("TechPlace_Dialog", "Lot", None))
        self.SWprec_check.setText(_translate("TechPlace_Dialog", "Precinct", None))
        self.SWflow_check.setText(_translate("TechPlace_Dialog", "Flow Reduction", None))
        self.label_46.setText(_translate("TechPlace_Dialog", "Available Applications", None))
        self.SWpollute_check.setText(_translate("TechPlace_Dialog", "Pollution Control", None))
        self.SWscales_lbl.setText(_translate("TechPlace_Dialog", "Available Scales", None))
        self.SWneigh_check.setText(_translate("TechPlace_Dialog", "Neighbourhood", None))
        self.SWstreet_check.setText(_translate("TechPlace_Dialog", "Street", None))
        self.SWdesigncurve_browse.setText(_translate("TechPlace_Dialog", "Browse...", None))
        self.SWdesigncurve_lbl2.setText(_translate("TechPlace_Dialog", "or", None))
        self.SWdesigncurve_lbl.setText(_translate("TechPlace_Dialog", "Load Conceptual Design Curves", None))
        self.SWdesignUB_box.setText(_translate("TechPlace_Dialog", "Use UrbanBEATS\' Design Curve Database", None))
        self.SWdesigninfo_lbl.setText(_translate("TechPlace_Dialog", "Design Information", None))
        self.SWspecs_combo.setItemText(0, _translate("TechPlace_Dialog", "1% slope, 0.5m Vegetation, 1:6 trapezoid", None))
        self.SWmaxsize_lbl.setText(_translate("TechPlace_Dialog", "Max. allowable system size [sqm]", None))
        self.SWspecs_lbl.setText(_translate("TechPlace_Dialog", "Select System Specification:", None))
        self.SWavglifelbl.setText(_translate("TechPlace_Dialog", "Average System Life Span", None))
        self.SWavglifespin.setSuffix(_translate("TechPlace_Dialog", "yrs", None))
        self.SWminsize_lbl.setText(_translate("TechPlace_Dialog", "Min. allowable system size [sqm]", None))
        self.SWrecycle_check.setText(_translate("TechPlace_Dialog", "Recycling", None))
        self.SWexfil_lbl.setText(_translate("TechPlace_Dialog", "Exfiltration Rate:", None))
        self.SWexfil_combo.setWhatsThis(_translate("TechPlace_Dialog", "The likely exfiltration rate from the system (less than the theoretical maximum infiltration rate of the soil). Select this value based on performance data of systems in your city.", None))
        self.SWexfil_combo.setItemText(0, _translate("TechPlace_Dialog", "0 (lined system)", None))
        self.SWexfil_combo.setItemText(1, _translate("TechPlace_Dialog", "0.18 mm/hr", None))
        self.SWexfil_combo.setItemText(2, _translate("TechPlace_Dialog", "0.36 mm/hr", None))
        self.SWexfil_combo.setItemText(3, _translate("TechPlace_Dialog", "1.8 mm/hr", None))
        self.SWexfil_combo.setItemText(4, _translate("TechPlace_Dialog", "3.6 mm/hr", None))
        self.TPS_inputgroup.setTitle(_translate("TechPlace_Dialog", "Tree Pits", None))
        self.label_51.setText(_translate("TechPlace_Dialog", "Sorry, technology current unavailable", None))
        self.UT_inputgroup.setTitle(_translate("TechPlace_Dialog", "Urine-Separating Toilets", None))
        self.label_15.setText(_translate("TechPlace_Dialog", "Sorry, but technology is currently not selectable", None))
        self.WWRR_inputgroup.setTitle(_translate("TechPlace_Dialog", "Wastewater Recovery/Recycling Plant", None))
        self.label_16.setText(_translate("TechPlace_Dialog", "Sorry, but technology is currently not selectable", None))
        self.WT_inputgroup.setTitle(_translate("TechPlace_Dialog", "Waterless/Composting Toilets", None))
        self.label_17.setText(_translate("TechPlace_Dialog", "Sorry, but technology is currently not selectable", None))
        self.sorry_page1_4.setText(_translate("TechPlace_Dialog", "Select a Technology ...", None))
        self.regioncity_title.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-weight:600;\">Regional Information</span></p></body></html>", None))
        self.regioncity_combo.setItemText(0, _translate("TechPlace_Dialog", "Adelaide, SA, Australia", None))
        self.regioncity_combo.setItemText(1, _translate("TechPlace_Dialog", "Brisbane, QLD, Australia", None))
        self.regioncity_combo.setItemText(2, _translate("TechPlace_Dialog", "Melbourne, VIC, Australia", None))
        self.regioncity_combo.setItemText(3, _translate("TechPlace_Dialog", "Perth, WA, Australia", None))
        self.regioncity_combo.setItemText(4, _translate("TechPlace_Dialog", "Sydney, NSW, Australia", None))
        self.regioncity_lbl.setText(_translate("TechPlace_Dialog", "Select Closest City: ", None))
        self.techcustomize_description.setHtml(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">UrbanBEATS offers a few typical designs. Select these and the correct region so that the program will use the correct design curves. Alternatively, load custom curves individually for each technology.</span></p></body></html>", None))
        self.techplace_input.setTabText(self.techplace_input.indexOf(self.CustomizeTech), _translate("TechPlace_Dialog", "Customize Technologies", None))
        self.mca_scoringmat_lbl_2.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-weight:600;\">Select Evaluation Criteria and Metrics</span></p></body></html>", None))
        self.bottomlines_ecn_check.setText(_translate("TechPlace_Dialog", "Economic", None))
        self.bottomlines_tech_check.setText(_translate("TechPlace_Dialog", "Technical", None))
        self.bottomlines_soc_check.setText(_translate("TechPlace_Dialog", "Social", None))
        self.bottomlines_env_check.setText(_translate("TechPlace_Dialog", "Environmental", None))
        self.mca_scoringmat_browse.setText(_translate("TechPlace_Dialog", "Browse...", None))
        self.mca_scoringmat_lbl2.setText(_translate("TechPlace_Dialog", "or", None))
        self.mca_scoringmat_lbl.setText(_translate("TechPlace_Dialog", "Load Custom Scoring Matrix (.csv)", None))
        self.mca_scoringmat_check.setText(_translate("TechPlace_Dialog", "Use UrbanBEATS\' Default Matrix", None))
        self.bottomlines_weight_lbl_2.setWhatsThis(_translate("TechPlace_Dialog", "Adjust the weighting of each criteria. Assign an importance score between 1 and 10 to each of the selected bottom lines.", None))
        self.bottomlines_weight_lbl_2.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Include:</span></p></body></html>", None))
        self.bottomlines_metrics_lbl.setWhatsThis(_translate("TechPlace_Dialog", "Adjust the weighting of each criteria. Assign an importance score between 1 and 10 to each of the selected bottom lines.", None))
        self.bottomlines_metrics_lbl.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\"># of Metrics</span></p></body></html>", None))
        self.bottomlines_lbl.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Customize Evaluation Criteria</span></p></body></html>", None))
        self.bottomlines_mode_lbl.setWhatsThis(_translate("TechPlace_Dialog", "Adjust the weighting of each criteria. Assign an importance score between 1 and 10 to each of the selected bottom lines.", None))
        self.bottomlines_mode_lbl.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Weights (1-10)</span></p></body></html>", None))
        self.strat_scoring_lbl.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-weight:600;\">Customize Scoring of Strategies</span></p></body></html>", None))
        self.scope_stoch_check.setWhatsThis(_translate("TechPlace_Dialog", "Check if you wish to add a stochastic disturbance to the scoring process. Modifies the scoring with an added randomness.", None))
        self.scope_stoch_check.setText(_translate("TechPlace_Dialog", "Include Stochastic Noise", None))
        self.eval_method_combo.setItemText(0, _translate("TechPlace_Dialog", "Weighted Product Model (WPM)", None))
        self.eval_method_combo.setItemText(1, _translate("TechPlace_Dialog", "Weighted Sum Model (WSM)", None))
        self.eval_method_lbl.setWhatsThis(_translate("TechPlace_Dialog", "Scoring method choice influences how the points are added up and weighted against each other and how each option\'s final score is evaluated. Default method will be the AHP.", None))
        self.eval_method_lbl.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Scoring Method</span></p></body></html>", None))
        self.radioScoreMax.setText(_translate("TechPlace_Dialog", "Max", None))
        self.radioScoreAvg.setText(_translate("TechPlace_Dialog", "Average", None))
        self.radioScoreMin.setText(_translate("TechPlace_Dialog", "Min", None))
        self.radioScoreMed.setText(_translate("TechPlace_Dialog", "Median", None))
        self.radioScore_lbl.setWhatsThis(_translate("TechPlace_Dialog", "Scoring method choice influences how the points are added up and weighted against each other and how each option\'s final score is evaluated. Default method will be the AHP.", None))
        self.radioScore_lbl.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Take Score of Strategy Group within Block as:</span></p></body></html>", None))
        self.eval_method_lbl2.setWhatsThis(_translate("TechPlace_Dialog", "Scoring method choice influences how the points are added up and weighted against each other and how each option\'s final score is evaluated. Default method will be the AHP.", None))
        self.eval_method_lbl2.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Scoring Strategy</span></p></body></html>", None))
        self.eval_methodscore_combo.setItemText(0, _translate("TechPlace_Dialog", "Service-based weighting (no penalties)", None))
        self.eval_methodscore_combo.setItemText(1, _translate("TechPlace_Dialog", "Service-based weightings (linear penalty model)", None))
        self.eval_methodscore_combo.setItemText(2, _translate("TechPlace_Dialog", "Service-based weightings (non-linear penalty model)", None))
        self.iao_influence_spin.setSuffix(_translate("TechPlace_Dialog", "%", None))
        self.iao_influence_lbl.setWhatsThis(_translate("TechPlace_Dialog", "Scoring method choice influences how the points are added up and weighted against each other and how each option\'s final score is evaluated. Default method will be the AHP.", None))
        self.iao_influence_lbl.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Influence of Impervious Area Offsets in Technology Scoring:</span></p></body></html>", None))
        self.top_rank_title.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-weight:600;\">Ranking and Selection of Strategies</span></p></body></html>", None))
        self.top_options_lbl.setWhatsThis(_translate("TechPlace_Dialog", "<html><head/><body><p><br/></p></body></html>", None))
        self.top_options_lbl.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Collect Top-Scoring Options based on:</span></p></body></html>", None))
        self.top_score_combo.setItemText(0, _translate("TechPlace_Dialog", "Rankings (Top N Scores)", None))
        self.top_score_combo.setItemText(1, _translate("TechPlace_Dialog", "Confidence Intervals (Top x % Scores)", None))
        self.top_rank_lbl.setWhatsThis(_translate("TechPlace_Dialog", "<html><head/><body><p><br/></p></body></html>", None))
        self.top_rank_lbl.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Rankings -  Select the Top N options (default: 10)</span></p></body></html>", None))
        self.top_CI_lbl.setWhatsThis(_translate("TechPlace_Dialog", "<html><head/><body><p><br/></p></body></html>", None))
        self.top_CI_lbl.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Conf. Intervals - Select % Confidence (default: 95%)</span></p></body></html>", None))
        self.top_CI_spin.setSuffix(_translate("TechPlace_Dialog", "%", None))
        self.strat_select_lbl.setWhatsThis(_translate("TechPlace_Dialog", "<html><head/><body><p><br/></p></body></html>", None))
        self.strat_select_lbl.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Method for selecting final strategies:</p></body></html>", None))
        self.strat_select_combo.setItemText(0, _translate("TechPlace_Dialog", "Top Scoring Strategies", None))
        self.strat_select_combo.setItemText(1, _translate("TechPlace_Dialog", "Random (weighted probabilities)", None))
        self.mca_sidebar_descr.setHtml(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Set evaluation considerations for the use and implementation of technologies. This is based on a multi-criteria framework that can be customised and carried out in part to suit the modelling study.</span></p></body></html>", None))
        self.techplace_input.setTabText(self.techplace_input.indexOf(self.EvalCriteria), _translate("TechPlace_Dialog", "Evaluation Criteria", None))
        self.remarks.setText(_translate("TechPlace_Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-style:italic;\">UrbanBEATS v1.0 - (C) 2013 Peter M. Bach </span></p></body></html>", None))
        self.pushButton.setWhatsThis(_translate("TechPlace_Dialog", "Are you serious?", None))
        self.pushButton.setText(_translate("TechPlace_Dialog", "Help", None))

import dialogimg_rc
import guitoolbaricons_rc
